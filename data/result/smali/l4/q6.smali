.class public final Ll4/q6;
.super Ljava/lang/Object;
.source "com.google.android.gms:play-services-ads@@20.4.0"


# instance fields
.field public final synthetic a:I

.field public b:[B

.field public c:I

.field public d:I

.field public e:I


# direct methods
.method public constructor <init>()V
    .locals 1

    const/4 v0, 0x0

    iput v0, p0, Ll4/q6;->a:I

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 2
    sget-object v0, Ll4/c7;->f:[B

    iput-object v0, p0, Ll4/q6;->b:[B

    return-void
.end method

.method public constructor <init>([B)V
    .locals 1

    const/4 v0, 0x2

    iput v0, p0, Ll4/q6;->a:I

    .line 3
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Ll4/q6;->b:[B

    .line 4
    array-length p1, p1

    iput p1, p0, Ll4/q6;->c:I

    return-void
.end method

.method public constructor <init>([BII)V
    .locals 1

    iput p3, p0, Ll4/q6;->a:I

    const/4 v0, 0x3

    if-eq p3, v0, :cond_0

    .line 5
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Ll4/q6;->b:[B

    iput p2, p0, Ll4/q6;->e:I

    return-void

    .line 6
    :cond_0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Ll4/q6;->b:[B

    iput p2, p0, Ll4/q6;->e:I

    return-void
.end method

.method public constructor <init>([BIII)V
    .locals 2

    iput p4, p0, Ll4/q6;->a:I

    const/4 v0, 0x0

    const/4 v1, 0x4

    if-eq p4, v1, :cond_0

    .line 7
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 8
    iput-object p1, p0, Ll4/q6;->b:[B

    iput p2, p0, Ll4/q6;->d:I

    iput p3, p0, Ll4/q6;->c:I

    iput v0, p0, Ll4/q6;->e:I

    .line 9
    invoke-virtual {p0}, Ll4/q6;->B()V

    return-void

    .line 10
    :cond_0
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Ll4/q6;->b:[B

    iput p2, p0, Ll4/q6;->d:I

    iput p3, p0, Ll4/q6;->c:I

    iput v0, p0, Ll4/q6;->e:I

    .line 11
    invoke-virtual {p0}, Ll4/q6;->y()V

    return-void
.end method


# virtual methods
.method public A(I)Z
    .locals 3

    const/4 v0, 0x2

    if-lt p1, v0, :cond_0

    iget v0, p0, Ll4/q6;->c:I

    if-ge p1, v0, :cond_0

    iget-object v0, p0, Ll4/q6;->b:[B

    .line 1
    aget-byte v1, v0, p1

    const/4 v2, 0x3

    if-ne v1, v2, :cond_0

    add-int/lit8 v1, p1, -0x2

    aget-byte v1, v0, v1

    if-nez v1, :cond_0

    add-int/lit8 p1, p1, -0x1

    aget-byte p1, v0, p1

    if-nez p1, :cond_0

    const/4 p1, 0x1

    return p1

    :cond_0
    const/4 p1, 0x0

    return p1
.end method

.method public B()V
    .locals 4

    iget v0, p0, Ll4/q6;->a:I

    const/4 v1, 0x0

    const/4 v2, 0x1

    packed-switch v0, :pswitch_data_0

    goto :goto_1

    .line 1
    :pswitch_0
    iget v0, p0, Ll4/q6;->d:I

    if-nez v0, :cond_0

    goto :goto_0

    :cond_0
    iput v1, p0, Ll4/q6;->d:I

    iget v0, p0, Ll4/q6;->c:I

    add-int/2addr v0, v2

    iput v0, p0, Ll4/q6;->c:I

    .line 2
    invoke-virtual {p0}, Ll4/q6;->D()V

    :goto_0
    return-void

    .line 3
    :goto_1
    iget v0, p0, Ll4/q6;->d:I

    if-ltz v0, :cond_2

    iget v3, p0, Ll4/q6;->c:I

    if-lt v0, v3, :cond_1

    if-ne v0, v3, :cond_2

    iget v0, p0, Ll4/q6;->e:I

    if-nez v0, :cond_2

    :cond_1
    const/4 v1, 0x1

    .line 4
    :cond_2
    invoke-static {v1}, Lcom/google/android/gms/internal/ads/e;->q(Z)V

    return-void

    nop

    :pswitch_data_0
    .packed-switch 0x0
        :pswitch_0
    .end packed-switch
.end method

.method public C(I)V
    .locals 1

    iget v0, p0, Ll4/q6;->d:I

    if-nez v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 1
    :goto_0
    invoke-static {v0}, Lcom/google/android/gms/internal/ads/e;->q(Z)V

    iget v0, p0, Ll4/q6;->c:I

    add-int/2addr v0, p1

    iput v0, p0, Ll4/q6;->c:I

    .line 2
    invoke-virtual {p0}, Ll4/q6;->D()V

    return-void
.end method

.method public D()V
    .locals 4

    iget v0, p0, Ll4/q6;->c:I

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-ltz v0, :cond_0

    iget v3, p0, Ll4/q6;->e:I

    if-lt v0, v3, :cond_1

    if-ne v0, v3, :cond_0

    iget v0, p0, Ll4/q6;->d:I

    if-nez v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    .line 1
    :cond_1
    :goto_0
    invoke-static {v1}, Lcom/google/android/gms/internal/ads/e;->q(Z)V

    return-void
.end method

.method public a(I)I
    .locals 10

    shr-int/lit8 v0, p1, 0x3

    const/4 v1, 0x0

    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_0
    const/4 v4, 0x1

    const/16 v5, 0xff

    if-ge v2, v0, :cond_1

    iget v6, p0, Ll4/q6;->d:I

    if-eqz v6, :cond_0

    iget-object v7, p0, Ll4/q6;->b:[B

    iget v8, p0, Ll4/q6;->c:I

    .line 1
    aget-byte v9, v7, v8

    and-int/2addr v9, v5

    shl-int/2addr v9, v6

    add-int/2addr v8, v4

    aget-byte v7, v7, v8

    and-int/2addr v7, v5

    rsub-int/lit8 v6, v6, 0x8

    ushr-int v6, v7, v6

    or-int/2addr v6, v9

    goto :goto_1

    :cond_0
    iget-object v6, p0, Ll4/q6;->b:[B

    iget v7, p0, Ll4/q6;->c:I

    .line 2
    aget-byte v6, v6, v7

    :goto_1
    add-int/lit8 p1, p1, -0x8

    and-int/2addr v5, v6

    shl-int/2addr v5, p1

    or-int/2addr v3, v5

    .line 3
    iget v5, p0, Ll4/q6;->c:I

    add-int/2addr v5, v4

    iput v5, p0, Ll4/q6;->c:I

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    if-lez p1, :cond_4

    .line 4
    iget v0, p0, Ll4/q6;->d:I

    add-int/2addr v0, p1

    const/16 v2, 0x8

    rsub-int/lit8 p1, p1, 0x8

    shr-int p1, v5, p1

    int-to-byte p1, p1

    if-le v0, v2, :cond_2

    iget-object v6, p0, Ll4/q6;->b:[B

    iget v7, p0, Ll4/q6;->c:I

    add-int/lit8 v8, v7, 0x1

    .line 5
    aget-byte v7, v6, v7

    and-int/2addr v7, v5

    add-int/lit8 v9, v0, -0x8

    shl-int/2addr v7, v9

    aget-byte v6, v6, v8

    and-int/2addr v5, v6

    rsub-int/lit8 v6, v0, 0x10

    shr-int/2addr v5, v6

    or-int/2addr v5, v7

    and-int/2addr p1, v5

    or-int/2addr p1, v3

    iput v8, p0, Ll4/q6;->c:I

    goto :goto_2

    .line 6
    :cond_2
    iget-object v6, p0, Ll4/q6;->b:[B

    iget v7, p0, Ll4/q6;->c:I

    .line 7
    aget-byte v6, v6, v7

    and-int/2addr v5, v6

    rsub-int/lit8 v6, v0, 0x8

    shr-int/2addr v5, v6

    and-int/2addr p1, v5

    or-int/2addr p1, v3

    if-ne v0, v2, :cond_3

    add-int/2addr v7, v4

    iput v7, p0, Ll4/q6;->c:I

    :cond_3
    :goto_2
    move v3, p1

    .line 8
    rem-int/2addr v0, v2

    iput v0, p0, Ll4/q6;->d:I

    :cond_4
    iget p1, p0, Ll4/q6;->c:I

    if-ltz p1, :cond_6

    iget v0, p0, Ll4/q6;->d:I

    if-ltz v0, :cond_6

    iget v2, p0, Ll4/q6;->e:I

    if-lt p1, v2, :cond_5

    if-ne p1, v2, :cond_6

    if-nez v0, :cond_6

    :cond_5
    const/4 v1, 0x1

    .line 9
    :cond_6
    invoke-static {v1}, Ll4/bg1;->l(Z)V

    return v3
.end method

.method public b(I)V
    .locals 4

    iget v0, p0, Ll4/q6;->d:I

    shr-int/lit8 v1, p1, 0x3

    add-int/2addr v1, v0

    iput v1, p0, Ll4/q6;->d:I

    iget v2, p0, Ll4/q6;->e:I

    const/4 v3, 0x7

    and-int/2addr p1, v3

    add-int/2addr v2, p1

    iput v2, p0, Ll4/q6;->e:I

    if-le v2, v3, :cond_0

    add-int/lit8 v1, v1, 0x1

    iput v1, p0, Ll4/q6;->d:I

    add-int/lit8 v2, v2, -0x8

    iput v2, p0, Ll4/q6;->e:I

    :cond_0
    :goto_0
    add-int/lit8 v0, v0, 0x1

    iget p1, p0, Ll4/q6;->d:I

    if-gt v0, p1, :cond_1

    .line 1
    invoke-virtual {p0, v0}, Ll4/q6;->v(I)Z

    move-result p1

    if-eqz p1, :cond_0

    iget p1, p0, Ll4/q6;->d:I

    add-int/lit8 p1, p1, 0x1

    iput p1, p0, Ll4/q6;->d:I

    add-int/lit8 v0, v0, 0x2

    goto :goto_0

    .line 2
    :cond_1
    invoke-virtual {p0}, Ll4/q6;->y()V

    return-void
.end method

.method public c([BI)V
    .locals 0

    iput-object p1, p0, Ll4/q6;->b:[B

    const/4 p1, 0x0

    iput p1, p0, Ll4/q6;->c:I

    iput p1, p0, Ll4/q6;->d:I

    iput p2, p0, Ll4/q6;->e:I

    return-void
.end method

.method public d()Z
    .locals 3

    iget-object v0, p0, Ll4/q6;->b:[B

    iget v1, p0, Ll4/q6;->d:I

    .line 1
    aget-byte v0, v0, v1

    iget v1, p0, Ll4/q6;->e:I

    const/4 v2, 0x1

    .line 2
    invoke-virtual {p0, v2}, Ll4/q6;->k(I)V

    and-int/lit16 v0, v0, 0xff

    shr-int/2addr v0, v1

    and-int/2addr v0, v2

    if-eq v2, v0, :cond_0

    const/4 v0, 0x0

    return v0

    :cond_0
    return v2
.end method

.method public e()I
    .locals 2

    iget v0, p0, Ll4/q6;->e:I

    iget v1, p0, Ll4/q6;->c:I

    sub-int/2addr v0, v1

    mul-int/lit8 v0, v0, 0x8

    iget v1, p0, Ll4/q6;->d:I

    sub-int/2addr v0, v1

    return v0
.end method

.method public f(I)I
    .locals 6

    iget v0, p0, Ll4/q6;->d:I

    iget v1, p0, Ll4/q6;->e:I

    rsub-int/lit8 v1, v1, 0x8

    .line 1
    invoke-static {p1, v1}, Ljava/lang/Math;->min(II)I

    move-result v1

    add-int/lit8 v2, v0, 0x1

    iget-object v3, p0, Ll4/q6;->b:[B

    .line 2
    aget-byte v0, v3, v0

    const/16 v3, 0xff

    and-int/2addr v0, v3

    iget v4, p0, Ll4/q6;->e:I

    shr-int/2addr v0, v4

    rsub-int/lit8 v4, v1, 0x8

    shr-int v4, v3, v4

    and-int/2addr v0, v4

    :goto_0
    if-ge v1, p1, :cond_0

    add-int/lit8 v4, v2, 0x1

    iget-object v5, p0, Ll4/q6;->b:[B

    .line 3
    aget-byte v2, v5, v2

    and-int/2addr v2, v3

    shl-int/2addr v2, v1

    or-int/2addr v0, v2

    add-int/lit8 v1, v1, 0x8

    move v2, v4

    goto :goto_0

    .line 4
    :cond_0
    invoke-virtual {p0, p1}, Ll4/q6;->k(I)V

    const/4 v1, -0x1

    rsub-int/lit8 p1, p1, 0x20

    ushr-int p1, v1, p1

    and-int/2addr p1, v0

    return p1
.end method

.method public g()V
    .locals 3

    iget v0, p0, Ll4/q6;->e:I

    const/4 v1, 0x1

    add-int/2addr v0, v1

    iput v0, p0, Ll4/q6;->e:I

    const/16 v2, 0x8

    if-ne v0, v2, :cond_1

    const/4 v0, 0x0

    iput v0, p0, Ll4/q6;->e:I

    iget v0, p0, Ll4/q6;->d:I

    add-int/lit8 v2, v0, 0x1

    .line 1
    invoke-virtual {p0, v2}, Ll4/q6;->A(I)Z

    move-result v2

    if-eq v1, v2, :cond_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x2

    :goto_0
    add-int/2addr v0, v1

    iput v0, p0, Ll4/q6;->d:I

    .line 2
    :cond_1
    invoke-virtual {p0}, Ll4/q6;->B()V

    return-void
.end method

.method public h()Z
    .locals 2

    const/4 v0, 0x1

    .line 1
    invoke-virtual {p0, v0}, Ll4/q6;->j(I)I

    move-result v1

    if-ne v1, v0, :cond_0

    return v0

    :cond_0
    const/4 v0, 0x0

    return v0
.end method

.method public i()I
    .locals 2

    iget v0, p0, Ll4/q6;->c:I

    mul-int/lit8 v0, v0, 0x8

    iget v1, p0, Ll4/q6;->d:I

    add-int/2addr v0, v1

    return v0
.end method

.method public j(I)I
    .locals 8

    shr-int/lit8 v0, p1, 0x3

    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_0
    const/16 v3, 0xff

    if-ge v1, v0, :cond_2

    iget v4, p0, Ll4/q6;->d:I

    add-int/lit8 v4, v4, 0x1

    .line 1
    invoke-virtual {p0, v4}, Ll4/q6;->v(I)Z

    move-result v4

    if-eqz v4, :cond_0

    iget v4, p0, Ll4/q6;->d:I

    add-int/lit8 v4, v4, 0x2

    goto :goto_1

    .line 2
    :cond_0
    iget v4, p0, Ll4/q6;->d:I

    add-int/lit8 v4, v4, 0x1

    .line 3
    :goto_1
    iget v5, p0, Ll4/q6;->e:I

    if-eqz v5, :cond_1

    iget-object v6, p0, Ll4/q6;->b:[B

    iget v7, p0, Ll4/q6;->d:I

    .line 4
    aget-byte v7, v6, v7

    and-int/2addr v7, v3

    shl-int/2addr v7, v5

    aget-byte v6, v6, v4

    and-int/2addr v6, v3

    rsub-int/lit8 v5, v5, 0x8

    ushr-int v5, v6, v5

    or-int/2addr v5, v7

    goto :goto_2

    :cond_1
    iget-object v5, p0, Ll4/q6;->b:[B

    iget v6, p0, Ll4/q6;->d:I

    .line 5
    aget-byte v5, v5, v6

    :goto_2
    add-int/lit8 p1, p1, -0x8

    and-int/2addr v3, v5

    shl-int/2addr v3, p1

    or-int/2addr v2, v3

    .line 6
    iput v4, p0, Ll4/q6;->d:I

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_2
    if-lez p1, :cond_6

    .line 7
    iget v0, p0, Ll4/q6;->e:I

    add-int/2addr v0, p1

    const/16 v1, 0x8

    rsub-int/lit8 p1, p1, 0x8

    shr-int p1, v3, p1

    int-to-byte p1, p1

    iget v4, p0, Ll4/q6;->d:I

    add-int/lit8 v4, v4, 0x1

    .line 8
    invoke-virtual {p0, v4}, Ll4/q6;->v(I)Z

    move-result v4

    if-eqz v4, :cond_3

    iget v4, p0, Ll4/q6;->d:I

    add-int/lit8 v4, v4, 0x2

    goto :goto_3

    .line 9
    :cond_3
    iget v4, p0, Ll4/q6;->d:I

    add-int/lit8 v4, v4, 0x1

    :goto_3
    if-le v0, v1, :cond_5

    .line 10
    iget-object v5, p0, Ll4/q6;->b:[B

    iget v6, p0, Ll4/q6;->d:I

    .line 11
    aget-byte v6, v5, v6

    and-int/2addr v6, v3

    add-int/lit8 v7, v0, -0x8

    shl-int/2addr v6, v7

    aget-byte v5, v5, v4

    and-int/2addr v3, v5

    rsub-int/lit8 v5, v0, 0x10

    shr-int/2addr v3, v5

    or-int/2addr v3, v6

    and-int/2addr p1, v3

    or-int/2addr p1, v2

    iput v4, p0, Ll4/q6;->d:I

    :cond_4
    :goto_4
    move v2, p1

    goto :goto_5

    .line 12
    :cond_5
    iget-object v5, p0, Ll4/q6;->b:[B

    iget v6, p0, Ll4/q6;->d:I

    .line 13
    aget-byte v5, v5, v6

    and-int/2addr v3, v5

    rsub-int/lit8 v5, v0, 0x8

    shr-int/2addr v3, v5

    and-int/2addr p1, v3

    or-int/2addr p1, v2

    if-ne v0, v1, :cond_4

    iput v4, p0, Ll4/q6;->d:I

    goto :goto_4

    .line 14
    :goto_5
    rem-int/2addr v0, v1

    iput v0, p0, Ll4/q6;->e:I

    .line 15
    :cond_6
    invoke-virtual {p0}, Ll4/q6;->y()V

    return v2
.end method

.method public k(I)V
    .locals 6

    iget v0, p0, Ll4/q6;->a:I

    const/4 v1, 0x1

    const/4 v2, 0x7

    packed-switch v0, :pswitch_data_0

    goto :goto_1

    .line 1
    :pswitch_0
    iget v0, p0, Ll4/q6;->d:I

    div-int/lit8 v3, p1, 0x8

    add-int v4, v0, v3

    iput v4, p0, Ll4/q6;->d:I

    iget v5, p0, Ll4/q6;->e:I

    mul-int/lit8 v3, v3, 0x8

    sub-int/2addr p1, v3

    add-int/2addr p1, v5

    iput p1, p0, Ll4/q6;->e:I

    if-le p1, v2, :cond_0

    add-int/2addr v4, v1

    iput v4, p0, Ll4/q6;->d:I

    add-int/lit8 p1, p1, -0x8

    iput p1, p0, Ll4/q6;->e:I

    :cond_0
    :goto_0
    add-int/2addr v0, v1

    iget p1, p0, Ll4/q6;->d:I

    if-gt v0, p1, :cond_1

    .line 2
    invoke-virtual {p0, v0}, Ll4/q6;->A(I)Z

    move-result p1

    if-eqz p1, :cond_0

    iget p1, p0, Ll4/q6;->d:I

    add-int/2addr p1, v1

    iput p1, p0, Ll4/q6;->d:I

    add-int/lit8 v0, v0, 0x2

    goto :goto_0

    .line 3
    :cond_1
    invoke-virtual {p0}, Ll4/q6;->B()V

    return-void

    .line 4
    :goto_1
    div-int/lit8 v0, p1, 0x8

    iget v3, p0, Ll4/q6;->d:I

    add-int/2addr v3, v0

    iput v3, p0, Ll4/q6;->d:I

    iget v4, p0, Ll4/q6;->e:I

    mul-int/lit8 v0, v0, 0x8

    sub-int/2addr p1, v0

    add-int/2addr p1, v4

    iput p1, p0, Ll4/q6;->e:I

    if-le p1, v2, :cond_2

    add-int/lit8 v3, v3, 0x1

    iput v3, p0, Ll4/q6;->d:I

    add-int/lit8 p1, p1, -0x8

    iput p1, p0, Ll4/q6;->e:I

    :cond_2
    if-ltz v3, :cond_3

    iget v0, p0, Ll4/q6;->c:I

    if-lt v3, v0, :cond_4

    if-ne v3, v0, :cond_3

    if-nez p1, :cond_3

    goto :goto_2

    :cond_3
    const/4 v1, 0x0

    .line 5
    :cond_4
    :goto_2
    invoke-static {v1}, Lcom/google/android/gms/internal/ads/e;->q(Z)V

    return-void

    nop

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method public l()I
    .locals 2

    iget v0, p0, Ll4/q6;->a:I

    packed-switch v0, :pswitch_data_0

    goto :goto_0

    .line 1
    :pswitch_0
    iget v0, p0, Ll4/q6;->d:I

    mul-int/lit8 v0, v0, 0x8

    iget v1, p0, Ll4/q6;->e:I

    add-int/2addr v0, v1

    return v0

    .line 2
    :goto_0
    invoke-virtual {p0}, Ll4/q6;->r()I

    move-result v0

    return v0

    nop

    :pswitch_data_0
    .packed-switch 0x2
        :pswitch_0
    .end packed-switch
.end method

.method public m(I)V
    .locals 1

    div-int/lit8 v0, p1, 0x8

    iput v0, p0, Ll4/q6;->c:I

    mul-int/lit8 v0, v0, 0x8

    sub-int/2addr p1, v0

    iput p1, p0, Ll4/q6;->d:I

    .line 1
    invoke-virtual {p0}, Ll4/q6;->D()V

    return-void
.end method

.method public n()Z
    .locals 3

    iget-object v0, p0, Ll4/q6;->b:[B

    iget v1, p0, Ll4/q6;->d:I

    .line 1
    aget-byte v0, v0, v1

    iget v1, p0, Ll4/q6;->e:I

    const/16 v2, 0x80

    shr-int v1, v2, v1

    and-int/2addr v0, v1

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 2
    :goto_0
    invoke-virtual {p0}, Ll4/q6;->g()V

    return v0
.end method

.method public o()I
    .locals 3

    .line 1
    invoke-virtual {p0}, Ll4/q6;->r()I

    move-result v0

    rem-int/lit8 v1, v0, 0x2

    const/4 v2, 0x1

    if-nez v1, :cond_0

    const/4 v1, -0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x1

    :goto_0
    add-int/2addr v0, v2

    div-int/lit8 v0, v0, 0x2

    mul-int v0, v0, v1

    return v0
.end method

.method public p(I)I
    .locals 9

    iget v0, p0, Ll4/q6;->e:I

    add-int/2addr v0, p1

    iput v0, p0, Ll4/q6;->e:I

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_0
    iget v2, p0, Ll4/q6;->e:I

    const/4 v3, 0x2

    const/16 v4, 0x8

    const/4 v5, 0x1

    if-le v2, v4, :cond_1

    add-int/lit8 v2, v2, -0x8

    iput v2, p0, Ll4/q6;->e:I

    iget-object v4, p0, Ll4/q6;->b:[B

    iget v6, p0, Ll4/q6;->d:I

    .line 1
    aget-byte v4, v4, v6

    and-int/lit16 v4, v4, 0xff

    shl-int v2, v4, v2

    or-int/2addr v1, v2

    add-int/lit8 v2, v6, 0x1

    .line 2
    invoke-virtual {p0, v2}, Ll4/q6;->A(I)Z

    move-result v2

    if-eq v5, v2, :cond_0

    const/4 v3, 0x1

    :cond_0
    add-int/2addr v6, v3

    iput v6, p0, Ll4/q6;->d:I

    goto :goto_0

    :cond_1
    iget-object v6, p0, Ll4/q6;->b:[B

    iget v7, p0, Ll4/q6;->d:I

    .line 3
    aget-byte v6, v6, v7

    and-int/lit16 v6, v6, 0xff

    rsub-int/lit8 v8, v2, 0x8

    shr-int/2addr v6, v8

    or-int/2addr v1, v6

    const/4 v6, -0x1

    rsub-int/lit8 p1, p1, 0x20

    ushr-int p1, v6, p1

    and-int/2addr p1, v1

    if-ne v2, v4, :cond_3

    iput v0, p0, Ll4/q6;->e:I

    add-int/lit8 v0, v7, 0x1

    .line 4
    invoke-virtual {p0, v0}, Ll4/q6;->A(I)Z

    move-result v0

    if-eq v5, v0, :cond_2

    const/4 v3, 0x1

    :cond_2
    add-int/2addr v7, v3

    iput v7, p0, Ll4/q6;->d:I

    .line 5
    :cond_3
    invoke-virtual {p0}, Ll4/q6;->B()V

    return p1
.end method

.method public q()V
    .locals 2

    iget v0, p0, Ll4/q6;->d:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Ll4/q6;->d:I

    const/16 v1, 0x8

    if-ne v0, v1, :cond_0

    const/4 v0, 0x0

    iput v0, p0, Ll4/q6;->d:I

    iget v0, p0, Ll4/q6;->c:I

    add-int/lit8 v0, v0, 0x1

    iput v0, p0, Ll4/q6;->c:I

    .line 1
    :cond_0
    invoke-virtual {p0}, Ll4/q6;->D()V

    return-void
.end method

.method public r()I
    .locals 3

    iget v0, p0, Ll4/q6;->a:I

    packed-switch v0, :pswitch_data_0

    goto :goto_0

    .line 1
    :pswitch_0
    invoke-virtual {p0}, Ll4/q6;->w()I

    move-result v0

    return v0

    :goto_0
    const/4 v0, 0x0

    const/4 v1, 0x0

    .line 2
    :goto_1
    invoke-virtual {p0}, Ll4/q6;->h()Z

    move-result v2

    if-nez v2, :cond_0

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_0
    const/4 v2, 0x1

    shl-int/2addr v2, v1

    add-int/lit8 v2, v2, -0x1

    if-lez v1, :cond_1

    .line 3
    invoke-virtual {p0, v1}, Ll4/q6;->j(I)I

    move-result v0

    :cond_1
    add-int/2addr v2, v0

    return v2

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_0
    .end packed-switch
.end method

.method public s(I)V
    .locals 3

    div-int/lit8 v0, p1, 0x8

    iget v1, p0, Ll4/q6;->c:I

    add-int/2addr v1, v0

    iput v1, p0, Ll4/q6;->c:I

    iget v2, p0, Ll4/q6;->d:I

    mul-int/lit8 v0, v0, 0x8

    sub-int/2addr p1, v0

    add-int/2addr p1, v2

    iput p1, p0, Ll4/q6;->d:I

    const/4 v0, 0x7

    if-le p1, v0, :cond_0

    add-int/lit8 v1, v1, 0x1

    iput v1, p0, Ll4/q6;->c:I

    add-int/lit8 p1, p1, -0x8

    iput p1, p0, Ll4/q6;->d:I

    .line 1
    :cond_0
    invoke-virtual {p0}, Ll4/q6;->D()V

    return-void
.end method

.method public t()I
    .locals 3

    .line 1
    invoke-virtual {p0}, Ll4/q6;->w()I

    move-result v0

    rem-int/lit8 v1, v0, 0x2

    const/4 v2, 0x1

    if-nez v1, :cond_0

    const/4 v1, -0x1

    goto :goto_0

    :cond_0
    const/4 v1, 0x1

    :goto_0
    add-int/2addr v0, v2

    div-int/lit8 v0, v0, 0x2

    mul-int v0, v0, v1

    return v0
.end method

.method public u()Z
    .locals 3

    iget-object v0, p0, Ll4/q6;->b:[B

    iget v1, p0, Ll4/q6;->c:I

    .line 1
    aget-byte v0, v0, v1

    iget v1, p0, Ll4/q6;->d:I

    const/16 v2, 0x80

    shr-int v1, v2, v1

    and-int/2addr v0, v1

    if-eqz v0, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 2
    :goto_0
    invoke-virtual {p0}, Ll4/q6;->q()V

    return v0
.end method

.method public v(I)Z
    .locals 3

    const/4 v0, 0x2

    if-lt p1, v0, :cond_0

    iget v0, p0, Ll4/q6;->c:I

    if-ge p1, v0, :cond_0

    iget-object v0, p0, Ll4/q6;->b:[B

    .line 1
    aget-byte v1, v0, p1

    const/4 v2, 0x3

    if-ne v1, v2, :cond_0

    add-int/lit8 v1, p1, -0x2

    aget-byte v1, v0, v1

    if-nez v1, :cond_0

    add-int/lit8 p1, p1, -0x1

    aget-byte p1, v0, p1

    if-nez p1, :cond_0

    const/4 p1, 0x1

    return p1

    :cond_0
    const/4 p1, 0x0

    return p1
.end method

.method public w()I
    .locals 3

    const/4 v0, 0x0

    const/4 v1, 0x0

    .line 1
    :goto_0
    invoke-virtual {p0}, Ll4/q6;->n()Z

    move-result v2

    if-nez v2, :cond_0

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v2, 0x1

    shl-int/2addr v2, v1

    add-int/lit8 v2, v2, -0x1

    if-lez v1, :cond_1

    .line 2
    invoke-virtual {p0, v1}, Ll4/q6;->p(I)I

    move-result v0

    :cond_1
    add-int/2addr v2, v0

    return v2
.end method

.method public x(I)I
    .locals 7

    const/4 v0, 0x0

    if-nez p1, :cond_0

    return v0

    :cond_0
    iget v1, p0, Ll4/q6;->d:I

    add-int/2addr v1, p1

    iput v1, p0, Ll4/q6;->d:I

    const/4 v1, 0x0

    :goto_0
    iget v2, p0, Ll4/q6;->d:I

    const/16 v3, 0x8

    if-le v2, v3, :cond_1

    add-int/lit8 v2, v2, -0x8

    iput v2, p0, Ll4/q6;->d:I

    iget-object v3, p0, Ll4/q6;->b:[B

    iget v4, p0, Ll4/q6;->c:I

    add-int/lit8 v5, v4, 0x1

    iput v5, p0, Ll4/q6;->c:I

    .line 1
    aget-byte v3, v3, v4

    and-int/lit16 v3, v3, 0xff

    shl-int v2, v3, v2

    or-int/2addr v1, v2

    goto :goto_0

    :cond_1
    iget-object v4, p0, Ll4/q6;->b:[B

    iget v5, p0, Ll4/q6;->c:I

    .line 2
    aget-byte v4, v4, v5

    and-int/lit16 v4, v4, 0xff

    rsub-int/lit8 v6, v2, 0x8

    shr-int/2addr v4, v6

    or-int/2addr v1, v4

    const/4 v4, -0x1

    rsub-int/lit8 p1, p1, 0x20

    ushr-int p1, v4, p1

    and-int/2addr p1, v1

    if-ne v2, v3, :cond_2

    iput v0, p0, Ll4/q6;->d:I

    add-int/lit8 v5, v5, 0x1

    iput v5, p0, Ll4/q6;->c:I

    .line 3
    :cond_2
    invoke-virtual {p0}, Ll4/q6;->D()V

    return p1
.end method

.method public y()V
    .locals 5

    iget v0, p0, Ll4/q6;->d:I

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-ltz v0, :cond_0

    iget v3, p0, Ll4/q6;->e:I

    if-ltz v3, :cond_0

    const/16 v4, 0x8

    if-ge v3, v4, :cond_0

    iget v4, p0, Ll4/q6;->c:I

    if-lt v0, v4, :cond_1

    if-ne v0, v4, :cond_0

    if-nez v3, :cond_0

    goto :goto_0

    :cond_0
    const/4 v1, 0x0

    .line 1
    :cond_1
    :goto_0
    invoke-static {v1}, Ll4/bg1;->l(Z)V

    return-void
.end method

.method public z([BII)V
    .locals 8

    shr-int/lit8 p2, p3, 0x3

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_0
    const/16 v2, 0xff

    const/16 v3, 0x8

    if-ge v1, p2, :cond_0

    iget-object v4, p0, Ll4/q6;->b:[B

    iget v5, p0, Ll4/q6;->c:I

    add-int/lit8 v6, v5, 0x1

    iput v6, p0, Ll4/q6;->c:I

    .line 1
    aget-byte v5, v4, v5

    iget v7, p0, Ll4/q6;->d:I

    shl-int/2addr v5, v7

    int-to-byte v5, v5

    aput-byte v5, p1, v1

    .line 2
    aget-byte v4, v4, v6

    and-int/2addr v2, v4

    sub-int/2addr v3, v7

    shr-int/2addr v2, v3

    or-int/2addr v2, v5

    int-to-byte v2, v2

    aput-byte v2, p1, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    and-int/lit8 p3, p3, 0x7

    if-nez p3, :cond_1

    return-void

    .line 3
    :cond_1
    aget-byte v1, p1, p2

    shr-int v4, v2, p3

    and-int/2addr v1, v4

    int-to-byte v1, v1

    aput-byte v1, p1, p2

    iget v4, p0, Ll4/q6;->d:I

    add-int v5, v4, p3

    if-le v5, v3, :cond_2

    iget-object v5, p0, Ll4/q6;->b:[B

    iget v6, p0, Ll4/q6;->c:I

    add-int/lit8 v7, v6, 0x1

    iput v7, p0, Ll4/q6;->c:I

    .line 4
    aget-byte v5, v5, v6

    and-int/2addr v5, v2

    shl-int/2addr v5, v4

    or-int/2addr v1, v5

    int-to-byte v1, v1

    aput-byte v1, p1, p2

    add-int/lit8 v4, v4, -0x8

    :cond_2
    add-int/2addr v4, p3

    iput v4, p0, Ll4/q6;->d:I

    iget-object v5, p0, Ll4/q6;->b:[B

    iget v6, p0, Ll4/q6;->c:I

    .line 5
    aget-byte v5, v5, v6

    and-int/2addr v2, v5

    rsub-int/lit8 v5, v4, 0x8

    shr-int/2addr v2, v5

    rsub-int/lit8 p3, p3, 0x8

    shl-int p3, v2, p3

    int-to-byte p3, p3

    or-int/2addr p3, v1

    int-to-byte p3, p3

    .line 6
    aput-byte p3, p1, p2

    if-ne v4, v3, :cond_3

    iput v0, p0, Ll4/q6;->d:I

    add-int/lit8 v6, v6, 0x1

    iput v6, p0, Ll4/q6;->c:I

    .line 7
    :cond_3
    invoke-virtual {p0}, Ll4/q6;->D()V

    return-void
.end method
