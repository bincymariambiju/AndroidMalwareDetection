.class public final Lob/g2;
.super Lob/c0;
.source "Unconfined.kt"


# static fields
.field public static final b:Lob/g2;
    .annotation build Lorg/jetbrains/annotations/NotNull;
    .end annotation
.end field


# direct methods
.method public static constructor <clinit>()V
    .locals 1

    new-instance v0, Lob/g2;

    invoke-direct {v0}, Lob/g2;-><init>()V

    sput-object v0, Lob/g2;->b:Lob/g2;

    return-void
.end method

.method public constructor <init>()V
    .locals 0

    .line 1
    invoke-direct {p0}, Lob/c0;-><init>()V

    return-void
.end method


# virtual methods
.method public l(Lxa/f;Ljava/lang/Runnable;)V
    .locals 0
    .param p1    # Lxa/f;
        .annotation build Lorg/jetbrains/annotations/NotNull;
        .end annotation
    .end param
    .param p2    # Ljava/lang/Runnable;
        .annotation build Lorg/jetbrains/annotations/NotNull;
        .end annotation
    .end param

    .line 1
    sget-object p2, Lob/j2;->a:Lob/j2$a;

    invoke-interface {p1, p2}, Lxa/f;->get(Lxa/f$c;)Lxa/f$b;

    move-result-object p1

    check-cast p1, Lob/j2;

    if-eqz p1, :cond_0

    return-void

    .line 2
    :cond_0
    new-instance p1, Ljava/lang/UnsupportedOperationException;

    const-string p2, "Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls."

    invoke-direct {p1, p2}, Ljava/lang/UnsupportedOperationException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public toString()Ljava/lang/String;
    .locals 1
    .annotation build Lorg/jetbrains/annotations/NotNull;
    .end annotation

    const-string v0, "Dispatchers.Unconfined"

    return-object v0
.end method
