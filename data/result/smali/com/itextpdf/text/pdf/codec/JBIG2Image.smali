.class public Lcom/itextpdf/text/pdf/codec/JBIG2Image;
.super Ljava/lang/Object;
.source "JBIG2Image.java"


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    return-void
.end method

.method public static getGlobalSegment(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B
    .locals 1

    .line 1
    :try_start_0
    new-instance v0, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    .line 2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;->read()V

    const/4 p0, 0x1

    .line 3
    invoke-virtual {v0, p0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;->getGlobal(Z)[B

    move-result-object p0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object p0

    :catch_0
    const/4 p0, 0x0

    return-object p0
.end method

.method public static getJbig2Image(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;I)Lcom/itextpdf/text/Image;
    .locals 4

    const/4 v0, 0x1

    if-lt p1, v0, :cond_0

    .line 1
    :try_start_0
    new-instance v1, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;

    invoke-direct {v1, p0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    .line 2
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;->read()V

    .line 3
    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;->getPage(I)Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page;

    move-result-object p0

    .line 4
    new-instance p1, Lcom/itextpdf/text/ImgJBIG2;

    iget v2, p0, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page;->pageBitmapWidth:I

    iget v3, p0, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page;->pageBitmapHeight:I

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader$JBIG2Page;->getData(Z)[B

    move-result-object p0

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;->getGlobal(Z)[B

    move-result-object v0

    invoke-direct {p1, v2, v3, p0, v0}, Lcom/itextpdf/text/ImgJBIG2;-><init>(II[B[B)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-object p1

    :catch_0
    move-exception p0

    .line 5
    new-instance p1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {p1, p0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw p1

    .line 6
    :cond_0
    new-instance p0, Ljava/lang/IllegalArgumentException;

    const/4 p1, 0x0

    new-array p1, p1, [Ljava/lang/Object;

    const-string v0, "the.page.number.must.be.gt.eq.1"

    invoke-static {v0, p1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p0
.end method

.method public static getNumberOfPages(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)I
    .locals 1

    .line 1
    :try_start_0
    new-instance v0, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    .line 2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;->read()V

    .line 3
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/codec/JBIG2SegmentReader;->numberOfPages()I

    move-result p0
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return p0

    :catch_0
    move-exception p0

    .line 4
    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method
