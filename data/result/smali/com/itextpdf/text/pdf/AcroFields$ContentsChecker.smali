.class Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;
.super Lcom/itextpdf/text/pdf/PdfReader;
.source "AcroFields.java"


# annotations
.annotation system Ldalvik/annotation/EnclosingClass;
    value = Lcom/itextpdf/text/pdf/AcroFields;
.end annotation

.annotation system Ldalvik/annotation/InnerClass;
    accessFlags = 0x9
    name = "ContentsChecker"
.end annotation


# instance fields
.field private contentsEnd:J

.field private contentsLevel:I

.field private contentsStart:J

.field private currentLevel:I

.field private rangeIsCorrect:Z

.field private searchInV:Z


# direct methods
.method public constructor <init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V
    .locals 1

    const/4 v0, 0x0

    .line 1
    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;[B)V

    const/4 p1, 0x0

    .line 2
    iput p1, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->currentLevel:I

    const/4 v0, 0x1

    .line 3
    iput v0, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsLevel:I

    .line 4
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->searchInV:Z

    .line 5
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->rangeIsCorrect:Z

    return-void
.end method


# virtual methods
.method public checkWhetherSignatureCoversWholeDocument(Lcom/itextpdf/text/pdf/AcroFields$Item;)Z
    .locals 10

    const/4 v0, 0x0

    .line 1
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->rangeIsCorrect:Z

    .line 2
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    instance-of v1, v1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    const/4 v3, 0x1

    if-eqz v1, :cond_0

    .line 3
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    iget p1, p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;->number:I

    .line 4
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 5
    iput-boolean v3, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->searchInV:Z

    goto :goto_0

    .line 6
    :cond_0
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getValue(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 7
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/AcroFields$Item;->getWidgetRef(I)Lcom/itextpdf/text/pdf/PdfIndirectReference;

    move-result-object p1

    iget p1, p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;->number:I

    .line 8
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->searchInV:Z

    .line 9
    iget v2, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsLevel:I

    add-int/2addr v2, v3

    iput v2, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsLevel:I

    .line 10
    :goto_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BYTERANGE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfArray;->asLongArray()[J

    move-result-object v1

    const/4 v2, 0x4

    .line 11
    array-length v4, v1

    if-ne v2, v4, :cond_2

    const-wide/16 v4, 0x0

    aget-wide v6, v1, v0

    cmp-long v2, v4, v6

    if-nez v2, :cond_2

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getFileLength()J

    move-result-wide v4

    const/4 v2, 0x2

    aget-wide v6, v1, v2

    const/4 v8, 0x3

    aget-wide v8, v1, v8

    add-long/2addr v6, v8

    cmp-long v8, v4, v6

    if-eqz v8, :cond_1

    goto :goto_1

    .line 12
    :cond_1
    aget-wide v3, v1, v3

    iput-wide v3, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsStart:J

    .line 13
    aget-wide v3, v1, v2

    iput-wide v3, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsEnd:J

    .line 14
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    mul-int/lit8 p1, p1, 0x2

    aget-wide v2, v1, p1

    .line 15
    :try_start_0
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1, v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 16
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 17
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 18
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 19
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 20
    iget-boolean p1, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->rangeIsCorrect:Z

    return p1

    :catch_0
    :cond_2
    :goto_1
    return v0
.end method

.method public readDictionary()Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 13

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->currentLevel:I

    const/4 v1, 0x1

    add-int/2addr v0, v1

    iput v0, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->currentLevel:I

    .line 2
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 3
    :goto_0
    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->rangeIsCorrect:Z

    if-nez v2, :cond_9

    .line 4
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 5
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->END_DIC:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-ne v2, v3, :cond_0

    .line 6
    iget v2, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->currentLevel:I

    sub-int/2addr v2, v1

    iput v2, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->currentLevel:I

    goto/16 :goto_2

    .line 7
    :cond_0
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v2

    sget-object v3, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NAME:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    const/4 v4, 0x0

    if-eq v2, v3, :cond_1

    .line 8
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v3, v1, [Ljava/lang/Object;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v4

    const-string v5, "dictionary.key.1.is.not.a.name"

    invoke-static {v5, v3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 9
    :cond_1
    new-instance v2, Lcom/itextpdf/text/pdf/PdfName;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;Z)V

    .line 10
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4

    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->searchInV:Z

    if-eqz v3, :cond_4

    iget v3, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsLevel:I

    iget v5, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->currentLevel:I

    if-ne v3, v5, :cond_4

    .line 11
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v5

    const/4 v3, -0x1

    const/4 v7, -0x1

    .line 12
    :cond_2
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->read()I

    move-result v8

    add-int/2addr v7, v1

    if-eq v8, v3, :cond_3

    .line 13
    invoke-static {v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->isWhitespace(I)Z

    move-result v8

    if-nez v8, :cond_2

    .line 14
    :cond_3
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3, v5, v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 15
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 16
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v8

    .line 17
    iget-wide v10, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsEnd:J

    cmp-long v12, v8, v10

    if-nez v12, :cond_6

    int-to-long v7, v7

    add-long/2addr v5, v7

    iget-wide v7, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->contentsStart:J

    cmp-long v9, v5, v7

    if-nez v9, :cond_6

    .line 18
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->rangeIsCorrect:Z

    goto :goto_1

    .line 19
    :cond_4
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5

    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->searchInV:Z

    if-nez v3, :cond_5

    iget v3, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->currentLevel:I

    if-ne v1, v3, :cond_5

    .line 20
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->searchInV:Z

    .line 21
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 22
    iput-boolean v4, p0, Lcom/itextpdf/text/pdf/AcroFields$ContentsChecker;->searchInV:Z

    goto :goto_1

    .line 23
    :cond_5
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 24
    :cond_6
    :goto_1
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v5

    neg-int v5, v5

    .line 25
    sget-object v6, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->END_DIC:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    invoke-virtual {v6}, Ljava/lang/Enum;->ordinal()I

    move-result v6

    if-ne v5, v6, :cond_7

    .line 26
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v7, v4, [Ljava/lang/Object;

    const-string v8, "unexpected.gt.gt"

    invoke-static {v8, v7}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 27
    :cond_7
    sget-object v6, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->END_ARRAY:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    invoke-virtual {v6}, Ljava/lang/Enum;->ordinal()I

    move-result v6

    if-ne v5, v6, :cond_8

    .line 28
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v4, v4, [Ljava/lang/Object;

    const-string v6, "unexpected.close.bracket"

    invoke-static {v6, v4}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 29
    :cond_8
    invoke-virtual {v0, v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto/16 :goto_0

    :cond_9
    :goto_2
    return-object v0
.end method
