.class public Lcom/itextpdf/text/pdf/DocumentFont;
.super Lcom/itextpdf/text/pdf/BaseFont;
.source "DocumentFont.java"


# static fields
.field private static final stdEnc:[I


# instance fields
.field private ascender:F

.field private byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

.field private capHeight:F

.field public cjkEncoding:Ljava/lang/String;

.field private cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

.field public defaultWidth:I

.field private descender:F

.field private diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

.field private font:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private fontName:Ljava/lang/String;

.field private fontWeight:F

.field private hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

.field public isType0:Z

.field private italicAngle:F

.field private llx:F

.field private lly:F

.field private metrics:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/Integer;",
            "[I>;"
        }
    .end annotation
.end field

.field private refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

.field private uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

.field public uniMap:Ljava/lang/String;

.field private urx:F

.field private ury:F


# direct methods
.method public static constructor <clinit>()V
    .locals 1

    const/16 v0, 0x100

    new-array v0, v0, [I

    .line 1
    fill-array-data v0, :array_0

    sput-object v0, Lcom/itextpdf/text/pdf/DocumentFont;->stdEnc:[I

    return-void

    :array_0
    .array-data 4
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x20
        0x21
        0x22
        0x23
        0x24
        0x25
        0x26
        0x2019
        0x28
        0x29
        0x2a
        0x2b
        0x2c
        0x2d
        0x2e
        0x2f
        0x30
        0x31
        0x32
        0x33
        0x34
        0x35
        0x36
        0x37
        0x38
        0x39
        0x3a
        0x3b
        0x3c
        0x3d
        0x3e
        0x3f
        0x40
        0x41
        0x42
        0x43
        0x44
        0x45
        0x46
        0x47
        0x48
        0x49
        0x4a
        0x4b
        0x4c
        0x4d
        0x4e
        0x4f
        0x50
        0x51
        0x52
        0x53
        0x54
        0x55
        0x56
        0x57
        0x58
        0x59
        0x5a
        0x5b
        0x5c
        0x5d
        0x5e
        0x5f
        0x2018
        0x61
        0x62
        0x63
        0x64
        0x65
        0x66
        0x67
        0x68
        0x69
        0x6a
        0x6b
        0x6c
        0x6d
        0x6e
        0x6f
        0x70
        0x71
        0x72
        0x73
        0x74
        0x75
        0x76
        0x77
        0x78
        0x79
        0x7a
        0x7b
        0x7c
        0x7d
        0x7e
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0xa1
        0xa2
        0xa3
        0x2044
        0xa5
        0x192
        0xa7
        0xa4
        0x27
        0x201c
        0xab
        0x2039
        0x203a
        0xfb01
        0xfb02
        0x0
        0x2013
        0x2020
        0x2021
        0xb7
        0x0
        0xb6
        0x2022
        0x201a
        0x201e
        0x201d
        0xbb
        0x2026
        0x2030
        0x0
        0xbf
        0x0
        0x60
        0xb4
        0x2c6
        0x2dc
        0xaf
        0x2d8
        0x2d9
        0xa8
        0x0
        0x2da
        0xb8
        0x0
        0x2dd
        0x2db
        0x2c7
        0x2014
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0x0
        0xc6
        0x0
        0xaa
        0x0
        0x0
        0x0
        0x0
        0x141
        0xd8
        0x152
        0xba
        0x0
        0x0
        0x0
        0x0
        0x0
        0xe6
        0x0
        0x0
        0x0
        0x131
        0x0
        0x0
        0x142
        0xf8
        0x153
        0xdf
        0x0
        0x0
        0x0
        0x0
    .end array-data
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PRIndirectReference;)V
    .locals 2

    .line 19
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/BaseFont;-><init>()V

    .line 20
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    .line 21
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    .line 22
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    const/high16 v0, 0x44480000    # 800.0f

    .line 23
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/high16 v0, 0x442f0000    # 700.0f

    .line 24
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/high16 v0, -0x3cb80000    # -200.0f

    .line 25
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x0

    .line 26
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    .line 27
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/high16 v1, -0x3db80000    # -50.0f

    .line 28
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    .line 29
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/high16 v0, 0x42c80000    # 100.0f

    .line 30
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/high16 v0, 0x44610000    # 900.0f

    .line 31
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    const/4 v0, 0x0

    .line 32
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/16 v0, 0x3e8

    .line 33
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    .line 34
    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 35
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 36
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->init()V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PRIndirectReference;Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .locals 3

    .line 37
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/BaseFont;-><init>()V

    .line 38
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    .line 39
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    .line 40
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    const/high16 v0, 0x44480000    # 800.0f

    .line 41
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/high16 v0, 0x442f0000    # 700.0f

    .line 42
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/high16 v0, -0x3cb80000    # -200.0f

    .line 43
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x0

    .line 44
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    .line 45
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/high16 v1, -0x3db80000    # -50.0f

    .line 46
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    .line 47
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/high16 v0, 0x42c80000    # 100.0f

    .line 48
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/high16 v0, 0x44610000    # 900.0f

    .line 49
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    const/4 v0, 0x0

    .line 50
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/16 v0, 0x3e8

    .line 51
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    .line 52
    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 53
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 54
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    if-nez p1, :cond_0

    if-eqz p2, :cond_0

    .line 55
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object p1

    invoke-interface {p1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object p1

    :goto_0
    invoke-interface {p1}, Ljava/util/Iterator;->hasNext()Z

    move-result v0

    if-eqz v0, :cond_0

    invoke-interface {p1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfName;

    .line 56
    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-virtual {v1, v2, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_0

    .line 57
    :cond_0
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->init()V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .locals 2

    .line 1
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/BaseFont;-><init>()V

    .line 2
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    .line 3
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    .line 4
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    const/high16 v0, 0x44480000    # 800.0f

    .line 5
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/high16 v0, 0x442f0000    # 700.0f

    .line 6
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/high16 v0, -0x3cb80000    # -200.0f

    .line 7
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x0

    .line 8
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    .line 9
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/high16 v1, -0x3db80000    # -50.0f

    .line 10
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    .line 11
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/high16 v0, 0x42c80000    # 100.0f

    .line 12
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/high16 v0, 0x44610000    # 900.0f

    .line 13
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    const/4 v0, 0x0

    .line 14
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/16 v0, 0x3e8

    .line 15
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    const/4 v0, 0x0

    .line 16
    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 17
    iput-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 18
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->init()V

    return-void
.end method

.method private decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;
    .locals 1

    .line 1
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->isHexWriting()Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->getBytes()[B

    move-result-object p1

    const-string v0, "UnicodeBigUnmarked"

    invoke-static {p1, v0}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToString([BLjava/lang/String;)Ljava/lang/String;

    move-result-object p1

    return-object p1

    .line 3
    :cond_0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method private doType1TT()V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_2

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v0

    .line 3
    sget-object v2, Lcom/itextpdf/text/pdf/BaseFont;->BuiltinFonts14:Ljava/util/HashMap;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    invoke-virtual {v2, v3}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->SYMBOL:Lcom/itextpdf/text/pdf/PdfName;

    .line 4
    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_0

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ZAPFDINGBATS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    .line 5
    :cond_0
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_0

    .line 6
    :cond_1
    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 7
    :goto_0
    :try_start_0
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->processToUnicode()Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    move-result-object v0

    if-eqz v0, :cond_5

    .line 8
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;->createReverseMapping()Ljava/util/Map;

    move-result-object v0

    .line 9
    invoke-interface {v0}, Ljava/util/Map;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_1
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_5

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 10
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/lang/Integer;

    invoke-virtual {v5}, Ljava/lang/Integer;->intValue()I

    move-result v5

    invoke-virtual {v3, v4, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 11
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Ljava/lang/Integer;

    invoke-virtual {v4}, Ljava/lang/Integer;->intValue()I

    move-result v4

    invoke-interface {v2}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    invoke-virtual {v3, v4, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    :catch_0
    move-exception v0

    .line 12
    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1

    .line 13
    :cond_2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v2

    if-eqz v2, :cond_3

    .line 14
    check-cast v0, Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_3

    .line 15
    :cond_3
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v2

    if-eqz v2, :cond_5

    .line 16
    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 17
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BASEENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-nez v2, :cond_4

    .line 18
    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_2

    .line 19
    :cond_4
    check-cast v2, Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 20
    :goto_2
    invoke-direct {p0, v0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillDiffMap(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;)V

    .line 21
    :cond_5
    :goto_3
    sget-object v0, Lcom/itextpdf/text/pdf/BaseFont;->BuiltinFonts14:Ljava/util/HashMap;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    invoke-virtual {v0, v2}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_9

    .line 22
    :try_start_1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    const-string v2, "Cp1252"

    const/4 v3, 0x0

    invoke-static {v0, v2, v3}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;Z)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object v0
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 23
    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/IntHashtable;->toOrderedKeys()[I

    move-result-object v2

    const/4 v4, 0x0

    .line 24
    :goto_4
    array-length v5, v2

    if-ge v4, v5, :cond_6

    .line 25
    iget-object v5, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v6, v2, v4

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v5

    .line 26
    iget-object v6, p0, Lcom/itextpdf/text/pdf/BaseFont;->widths:[I

    aget v7, v2, v4

    invoke-static {v7}, Lcom/itextpdf/text/pdf/GlyphList;->unicodeToName(I)Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v0, v5, v7}, Lcom/itextpdf/text/pdf/BaseFont;->getRawWidth(ILjava/lang/String;)I

    move-result v7

    aput v7, v6, v5

    add-int/lit8 v4, v4, 0x1

    goto :goto_4

    .line 27
    :cond_6
    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    if-eqz v2, :cond_8

    .line 28
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/IntHashtable;->toOrderedKeys()[I

    move-result-object v2

    .line 29
    :goto_5
    array-length v4, v2

    if-ge v3, v4, :cond_7

    .line 30
    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v5, v2, v3

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v4

    .line 31
    iget-object v5, p0, Lcom/itextpdf/text/pdf/BaseFont;->widths:[I

    aget v6, v2, v3

    invoke-static {v6}, Lcom/itextpdf/text/pdf/GlyphList;->unicodeToName(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v0, v4, v6}, Lcom/itextpdf/text/pdf/BaseFont;->getRawWidth(ILjava/lang/String;)I

    move-result v6

    aput v6, v5, v4

    add-int/lit8 v3, v3, 0x1

    goto :goto_5

    .line 32
    :cond_7
    iput-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    :cond_8
    const/4 v1, 0x1

    const/high16 v2, 0x447a0000    # 1000.0f

    .line 33
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    const/4 v1, 0x2

    .line 34
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    const/4 v1, 0x3

    .line 35
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    const/4 v1, 0x4

    .line 36
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    const/16 v1, 0x17

    .line 37
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    const/4 v1, 0x5

    .line 38
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    const/4 v1, 0x6

    .line 39
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/4 v1, 0x7

    .line 40
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/16 v1, 0x8

    .line 41
    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    goto :goto_6

    :catch_1
    move-exception v0

    .line 42
    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1

    .line 43
    :cond_9
    :goto_6
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillWidths()V

    .line 44
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    return-void
.end method

.method private fillDiffMap(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;)V
    .locals 6

    .line 1
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->DIFFERENCES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    if-eqz p1, :cond_4

    .line 2
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    const/4 v0, 0x0

    const/4 v1, 0x0

    const/4 v2, 0x0

    .line 3
    :goto_0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v1, v3, :cond_4

    .line 4
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 5
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v4

    if-eqz v4, :cond_0

    .line 6
    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    goto :goto_2

    .line 7
    :cond_0
    check-cast v3, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/GlyphList;->nameToUnicode(Ljava/lang/String;)[I

    move-result-object v3

    if-eqz v3, :cond_1

    .line 8
    array-length v4, v3

    if-lez v4, :cond_1

    .line 9
    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v5, v3, v0

    invoke-virtual {v4, v5, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 10
    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v5, v3, v0

    invoke-virtual {v4, v2, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 11
    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v3, v3, v0

    invoke-virtual {v4, v3, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    goto :goto_1

    :cond_1
    if-nez p2, :cond_2

    .line 12
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->processToUnicode()Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    move-result-object p2

    if-nez p2, :cond_2

    .line 13
    new-instance p2, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    invoke-direct {p2}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;-><init>()V

    :cond_2
    const/4 v3, 0x1

    new-array v4, v3, [B

    int-to-byte v5, v2

    aput-byte v5, v4, v0

    .line 14
    invoke-virtual {p2, v4, v0, v3}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;->lookup([BII)Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_3

    .line 15
    invoke-virtual {v4}, Ljava/lang/String;->length()I

    move-result v5

    if-ne v5, v3, :cond_3

    .line 16
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v5

    invoke-virtual {v3, v5, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 17
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v5

    invoke-virtual {v3, v2, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 18
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v4, v0}, Ljava/lang/String;->charAt(I)C

    move-result v4

    invoke-virtual {v3, v4, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    :cond_3
    :goto_1
    add-int/lit8 v2, v2, 0x1

    :goto_2
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_4
    return-void
.end method

.method private fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V
    .locals 5

    const/4 v0, 0x0

    const/16 v1, 0x100

    if-nez p1, :cond_0

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->isSymbolic()Z

    move-result v2

    if-eqz v2, :cond_0

    :goto_0
    if-ge v0, v1, :cond_8

    .line 2
    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {p1, v0, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 3
    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {p1, v0, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 4
    :cond_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->MAC_ROMAN_ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->WIN_ANSI_ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->SYMBOL:Lcom/itextpdf/text/pdf/PdfName;

    .line 5
    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_2

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ZAPFDINGBATS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    goto :goto_2

    :cond_1
    :goto_1
    if-ge v0, v1, :cond_8

    .line 6
    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    sget-object v2, Lcom/itextpdf/text/pdf/DocumentFont;->stdEnc:[I

    aget v3, v2, v0

    invoke-virtual {p1, v3, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 7
    iget-object p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    aget v2, v2, v0

    invoke-virtual {p1, v0, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_2
    :goto_2
    new-array v2, v1, [B

    const/4 v3, 0x0

    :goto_3
    if-ge v3, v1, :cond_3

    int-to-byte v4, v3

    .line 8
    aput-byte v4, v2, v3

    add-int/lit8 v3, v3, 0x1

    goto :goto_3

    .line 9
    :cond_3
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->MAC_ROMAN_ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_4

    const-string p1, "MacRoman"

    goto :goto_4

    .line 10
    :cond_4
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->SYMBOL:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_5

    const-string p1, "Symbol"

    goto :goto_4

    .line 11
    :cond_5
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ZAPFDINGBATS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, p1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_6

    const-string p1, "ZapfDingbats"

    goto :goto_4

    :cond_6
    const-string p1, "Cp1252"

    .line 12
    :goto_4
    invoke-static {v2, p1}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToString([BLjava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 13
    invoke-virtual {v2}, Ljava/lang/String;->toCharArray()[C

    move-result-object v2

    :goto_5
    if-ge v0, v1, :cond_7

    .line 14
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v4, v2, v0

    invoke-virtual {v3, v4, v0}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 15
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v4, v2, v0

    invoke-virtual {v3, v0, v4}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v0, v0, 0x1

    goto :goto_5

    .line 16
    :cond_7
    iput-object p1, p0, Lcom/itextpdf/text/pdf/BaseFont;->encoding:Ljava/lang/String;

    :cond_8
    return-void
.end method

.method private fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .locals 3

    if-nez p1, :cond_0

    return-void

    .line 1
    :cond_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ASCENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_1

    .line 2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    .line 3
    :cond_1
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->CAPHEIGHT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 4
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    .line 5
    :cond_2
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->DESCENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_3

    .line 6
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    .line 7
    :cond_3
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ITALICANGLE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_4

    .line 8
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    .line 9
    :cond_4
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FONTWEIGHT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-eqz v0, :cond_5

    .line 10
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    .line 11
    :cond_5
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FONTBBOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    if-eqz p1, :cond_7

    const/4 v0, 0x0

    .line 12
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    const/4 v0, 0x1

    .line 13
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    const/4 v0, 0x2

    .line 14
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    const/4 v0, 0x3

    .line 15
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result p1

    iput p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    .line 16
    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    iget v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    cmpl-float v2, v0, v1

    if-lez v2, :cond_6

    .line 17
    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    .line 18
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    .line 19
    :cond_6
    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    cmpl-float v1, v0, p1

    if-lez v1, :cond_7

    .line 20
    iput p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    .line 21
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    .line 22
    :cond_7
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    invoke-static {p1, v0}, Ljava/lang/Math;->max(FF)F

    move-result p1

    .line 23
    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    iget v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    invoke-static {v0, v1}, Ljava/lang/Math;->min(FF)F

    move-result v0

    const/high16 v1, 0x447a0000    # 1000.0f

    mul-float v2, p1, v1

    sub-float/2addr p1, v0

    div-float/2addr v2, p1

    .line 24
    iput v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    mul-float v0, v0, v1

    div-float/2addr v0, p1

    .line 25
    iput v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    return-void
.end method

.method private fillMetrics([BLcom/itextpdf/text/pdf/IntHashtable;I)V
    .locals 16

    move-object/from16 v1, p0

    move-object/from16 v0, p2

    .line 1
    :try_start_0
    new-instance v2, Lcom/itextpdf/text/pdf/PdfContentParser;

    new-instance v3, Lcom/itextpdf/text/pdf/PRTokeniser;

    new-instance v4, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    new-instance v5, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v5}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    move-object/from16 v6, p1

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object v5

    invoke-direct {v4, v5}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfContentParser;-><init>(Lcom/itextpdf/text/pdf/PRTokeniser;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    const/16 v3, 0x32

    const/4 v4, 0x0

    const/4 v5, 0x1

    const/4 v6, 0x1

    const/4 v7, 0x0

    :cond_0
    :goto_0
    if-nez v6, :cond_1

    if-lez v7, :cond_f

    .line 2
    :cond_1
    :try_start_1
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    if-nez v8, :cond_2

    goto/16 :goto_7

    .line 3
    :cond_2
    :try_start_2
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v9

    const/16 v10, 0xc8

    if-ne v9, v10, :cond_0

    .line 4
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "begin"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_3

    add-int/lit8 v7, v7, 0x1

    const/4 v6, 0x0

    goto :goto_0

    .line 5
    :cond_3
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "end"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_4

    add-int/lit8 v7, v7, -0x1

    goto :goto_0

    .line 6
    :cond_4
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v10, "beginbfchar"

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    const/4 v10, 0x2

    if-eqz v9, :cond_8

    .line 7
    :cond_5
    :goto_1
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    .line 8
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v11, "endbfchar"

    invoke-virtual {v9, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_6

    goto :goto_0

    .line 9
    :cond_6
    check-cast v8, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v8}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v8

    .line 10
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v9}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v9

    .line 11
    invoke-virtual {v9}, Ljava/lang/String;->length()I

    move-result v11

    if-ne v11, v5, :cond_5

    .line 12
    invoke-virtual {v8, v4}, Ljava/lang/String;->charAt(I)C

    move-result v8

    .line 13
    invoke-virtual {v9}, Ljava/lang/String;->length()I

    move-result v11

    sub-int/2addr v11, v5

    invoke-virtual {v9, v11}, Ljava/lang/String;->charAt(I)C

    move-result v9

    .line 14
    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v11

    if-eqz v11, :cond_7

    .line 15
    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v11

    goto :goto_2

    :cond_7
    move/from16 v11, p3

    .line 16
    :goto_2
    iget-object v12, v1, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v9}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v9

    new-array v13, v10, [I

    aput v8, v13, v4

    aput v11, v13, v5

    invoke-virtual {v12, v9, v13}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_1

    .line 17
    :cond_8
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v8

    const-string v9, "beginbfrange"

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_0

    .line 18
    :cond_9
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    .line 19
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v9

    const-string v11, "endbfrange"

    invoke-virtual {v9, v11}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_a

    goto/16 :goto_0

    .line 20
    :cond_a
    check-cast v8, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v8}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v8

    .line 21
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v9}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v9

    .line 22
    invoke-virtual {v8, v4}, Ljava/lang/String;->charAt(I)C

    move-result v8

    .line 23
    invoke-virtual {v9, v4}, Ljava/lang/String;->charAt(I)C

    move-result v9

    .line 24
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfContentParser;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v11

    .line 25
    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v12

    if-eqz v12, :cond_c

    .line 26
    check-cast v11, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, v11}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v11

    .line 27
    invoke-virtual {v11}, Ljava/lang/String;->length()I

    move-result v12

    if-ne v12, v5, :cond_9

    .line 28
    invoke-virtual {v11}, Ljava/lang/String;->length()I

    move-result v12

    sub-int/2addr v12, v5

    invoke-virtual {v11, v12}, Ljava/lang/String;->charAt(I)C

    move-result v11

    :goto_3
    if-gt v8, v9, :cond_9

    .line 29
    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v12

    if-eqz v12, :cond_b

    .line 30
    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v12

    goto :goto_4

    :cond_b
    move/from16 v12, p3

    .line 31
    :goto_4
    iget-object v13, v1, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v14

    new-array v15, v10, [I

    aput v8, v15, v4

    aput v12, v15, v5

    invoke-virtual {v13, v14, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v8, v8, 0x1

    add-int/lit8 v11, v11, 0x1

    goto :goto_3

    .line 32
    :cond_c
    check-cast v11, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v9, 0x0

    .line 33
    :goto_5
    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v12

    if-ge v9, v12, :cond_9

    .line 34
    invoke-virtual {v11, v9}, Lcom/itextpdf/text/pdf/PdfArray;->getAsString(I)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v12

    invoke-direct {v1, v12}, Lcom/itextpdf/text/pdf/DocumentFont;->decodeString(Lcom/itextpdf/text/pdf/PdfString;)Ljava/lang/String;

    move-result-object v12

    .line 35
    invoke-virtual {v12}, Ljava/lang/String;->length()I

    move-result v13

    if-ne v13, v5, :cond_e

    .line 36
    invoke-virtual {v12}, Ljava/lang/String;->length()I

    move-result v13

    sub-int/2addr v13, v5

    invoke-virtual {v12, v13}, Ljava/lang/String;->charAt(I)C

    move-result v12

    .line 37
    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v13

    if-eqz v13, :cond_d

    .line 38
    invoke-virtual {v0, v8}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v13

    goto :goto_6

    :cond_d
    move/from16 v13, p3

    .line 39
    :goto_6
    iget-object v14, v1, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v12}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v12

    new-array v15, v10, [I

    aput v8, v15, v4

    aput v13, v15, v5

    invoke-virtual {v14, v12, v15}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    :cond_e
    add-int/lit8 v9, v9, 0x1

    add-int/lit8 v8, v8, 0x1

    goto :goto_5

    :catch_0
    add-int/lit8 v3, v3, -0x1

    if-gez v3, :cond_0

    :cond_f
    :goto_7
    return-void

    :catch_1
    move-exception v0

    .line 40
    new-instance v2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v2
.end method

.method private fillMetricsIdentity(Lcom/itextpdf/text/pdf/IntHashtable;I)V
    .locals 7

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_0
    const/high16 v2, 0x10000

    if-ge v1, v2, :cond_1

    .line 1
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 2
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v2

    goto :goto_1

    :cond_0
    move v2, p2

    .line 3
    :goto_1
    iget-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {v1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v4

    const/4 v5, 0x2

    new-array v5, v5, [I

    aput v1, v5, v0

    const/4 v6, 0x1

    aput v2, v5, v6

    invoke-virtual {v3, v4, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method private fillWidths()V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->WIDTHS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FIRSTCHAR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    .line 3
    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->LASTCHAR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v2

    if-eqz v1, :cond_1

    if-eqz v2, :cond_1

    if-eqz v0, :cond_1

    .line 4
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    .line 5
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    add-int/2addr v2, v1

    .line 6
    iget-object v3, p0, Lcom/itextpdf/text/pdf/BaseFont;->widths:[I

    array-length v4, v3

    const/4 v5, 0x0

    if-ge v4, v2, :cond_0

    .line 7
    new-array v2, v2, [I

    .line 8
    invoke-static {v3, v5, v2, v5, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 9
    iput-object v2, p0, Lcom/itextpdf/text/pdf/BaseFont;->widths:[I

    .line 10
    :cond_0
    :goto_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-ge v5, v2, :cond_1

    .line 11
    iget-object v2, p0, Lcom/itextpdf/text/pdf/BaseFont;->widths:[I

    add-int v3, v1, v5

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v4

    aput v4, v2, v3

    add-int/lit8 v5, v5, 0x1

    goto :goto_0

    :cond_1
    return-void
.end method

.method private init()V
    .locals 4

    const-string v0, ""

    .line 1
    iput-object v0, p0, Lcom/itextpdf/text/pdf/BaseFont;->encoding:Ljava/lang/String;

    const/4 v0, 0x0

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/BaseFont;->fontSpecific:Z

    const/4 v1, 0x4

    .line 3
    iput v1, p0, Lcom/itextpdf/text/pdf/BaseFont;->fontType:I

    .line 4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    if-eqz v1, :cond_0

    .line 5
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v1

    goto :goto_0

    :cond_0
    const-string v1, "Unspecified Font Name"

    :goto_0
    iput-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    .line 6
    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    .line 7
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TYPE1:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-nez v2, :cond_6

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TRUETYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    goto/16 :goto_2

    .line 8
    :cond_1
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TYPE3:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    const/4 v0, 0x0

    .line 9
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillEncoding(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 10
    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    invoke-direct {p0, v1, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillDiffMap(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;)V

    .line 11
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillWidths()V

    goto/16 :goto_3

    .line 12
    :cond_2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ENCODING:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v2

    if-eqz v2, :cond_7

    .line 13
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v2

    .line 14
    invoke-static {v2}, Lcom/itextpdf/text/pdf/CJKFont;->GetCompatibleFont(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_3

    .line 15
    :try_start_0
    invoke-static {v3, v2, v0}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;Z)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object v3

    iput-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 16
    iput-object v2, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkEncoding:Ljava/lang/String;

    .line 17
    check-cast v3, Lcom/itextpdf/text/pdf/CJKFont;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/CJKFont;->getUniMap()Ljava/lang/String;

    move-result-object v3

    iput-object v3, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uniMap:Ljava/lang/String;

    goto :goto_1

    :catch_0
    move-exception v0

    .line 18
    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1

    .line 19
    :cond_3
    :goto_1
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->TYPE0:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7

    const/4 v1, 0x1

    .line 20
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const-string v1, "Identity-H"

    .line 21
    invoke-virtual {v2, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_5

    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v1, :cond_5

    .line 22
    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->DESCENDANTFONTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    .line 23
    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 24
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DW:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    if-eqz v1, :cond_4

    .line 25
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    .line 26
    :cond_4
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->W:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->readWidths(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/IntHashtable;

    move-result-object v1

    iput-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    .line 27
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 28
    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    goto :goto_3

    .line 29
    :cond_5
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/DocumentFont;->processType0(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    goto :goto_3

    .line 30
    :cond_6
    :goto_2
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->doType1TT()V

    :cond_7
    :goto_3
    return-void
.end method

.method private processToUnicode()Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->TOUNICODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 2
    instance-of v1, v0, Lcom/itextpdf/text/pdf/PRStream;

    const/4 v2, 0x0

    if-eqz v1, :cond_0

    .line 3
    :try_start_0
    check-cast v0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;)[B

    move-result-object v0

    .line 4
    new-instance v1, Lcom/itextpdf/text/pdf/fonts/cmaps/CidLocationFromByte;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/pdf/fonts/cmaps/CidLocationFromByte;-><init>([B)V

    .line 5
    new-instance v0, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapToUnicode;-><init>()V

    const-string v3, ""

    .line 6
    invoke-static {v3, v0, v1}, Lcom/itextpdf/text/pdf/fonts/cmaps/CMapParserEx;->parseCid(Ljava/lang/String;Lcom/itextpdf/text/pdf/fonts/cmaps/AbstractCMap;Lcom/itextpdf/text/pdf/fonts/cmaps/CidLocation;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    move-object v2, v0

    :catch_0
    :cond_0
    return-object v2
.end method

.method private processType0(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    .locals 4

    .line 1
    :try_start_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TOUNICODE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 2
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DESCENDANTFONTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v1, 0x0

    .line 3
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 4
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DW:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    const/16 v2, 0x3e8

    if-eqz v1, :cond_0

    .line 5
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    .line 6
    :cond_0
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->W:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/DocumentFont;->readWidths(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/IntHashtable;

    move-result-object v1

    .line 7
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 8
    invoke-direct {p0, p1}, Lcom/itextpdf/text/pdf/DocumentFont;->fillFontDesc(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 9
    instance-of p1, v0, Lcom/itextpdf/text/pdf/PRStream;

    if-eqz p1, :cond_1

    .line 10
    check-cast v0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;)[B

    move-result-object p1

    invoke-direct {p0, p1, v1, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->fillMetrics([BLcom/itextpdf/text/pdf/IntHashtable;I)V

    goto :goto_0

    .line 11
    :cond_1
    new-instance p1, Lcom/itextpdf/text/pdf/PdfName;

    const-string v3, "Identity-H"

    invoke-direct {p1, v3}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-eqz p1, :cond_2

    .line 12
    invoke-direct {p0, v1, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->fillMetricsIdentity(Lcom/itextpdf/text/pdf/IntHashtable;I)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    :cond_2
    :goto_0
    return-void

    :catch_0
    move-exception p1

    .line 13
    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method private readWidths(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/pdf/IntHashtable;
    .locals 8

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    if-nez p1, :cond_0

    return-object v0

    :cond_0
    const/4 v1, 0x0

    const/4 v2, 0x0

    .line 2
    :goto_0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_3

    .line 3
    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    add-int/lit8 v2, v2, 0x1

    .line 4
    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-static {v4}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    .line 5
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v5

    if-eqz v5, :cond_1

    .line 6
    check-cast v4, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v5, 0x0

    .line 7
    :goto_1
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v6

    if-ge v5, v6, :cond_2

    .line 8
    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v6

    add-int/lit8 v7, v3, 0x1

    .line 9
    invoke-virtual {v0, v3, v6}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v5, v5, 0x1

    move v3, v7

    goto :goto_1

    .line 10
    :cond_1
    check-cast v4, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v4

    add-int/lit8 v2, v2, 0x1

    .line 11
    invoke-virtual {p1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v5

    :goto_2
    if-gt v3, v4, :cond_2

    .line 12
    invoke-virtual {v0, v3, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    add-int/lit8 v3, v3, 0x1

    goto :goto_2

    :cond_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_3
    return-object v0
.end method


# virtual methods
.method public charExists(I)Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->charExists(I)Z

    move-result p1

    return p1

    .line 3
    :cond_0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    if-eqz v0, :cond_1

    .line 4
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->containsKey(Ljava/lang/Object;)Z

    move-result p1

    return p1

    .line 5
    :cond_1
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->charExists(I)Z

    move-result p1

    return p1
.end method

.method public convertToBytes(I)[B
    .locals 4

    .line 20
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_0

    .line 21
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->convertToBytes(I)[B

    move-result-object p1

    return-object p1

    .line 22
    :cond_0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/4 v1, 0x1

    const/4 v2, 0x0

    if-eqz v0, :cond_2

    .line 23
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [I

    if-eqz p1, :cond_1

    .line 24
    aget p1, p1, v2

    const/4 v0, 0x2

    new-array v0, v0, [B

    .line 25
    div-int/lit16 v3, p1, 0x100

    int-to-byte v3, v3

    aput-byte v3, v0, v2

    int-to-byte p1, p1

    aput-byte p1, v0, v1

    return-object v0

    :cond_1
    new-array p1, v2, [B

    return-object p1

    .line 26
    :cond_2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v0

    if-eqz v0, :cond_3

    new-array v0, v1, [B

    .line 27
    iget-object v1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result p1

    int-to-byte p1, p1

    aput-byte p1, v0, v2

    return-object v0

    :cond_3
    new-array p1, v2, [B

    return-object p1
.end method

.method public convertToBytes(Ljava/lang/String;)[B
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->convertToBytes(Ljava/lang/String;)[B

    move-result-object p1

    return-object p1

    .line 3
    :cond_0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    const/4 v1, 0x0

    if-eqz v0, :cond_4

    .line 4
    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object p1

    .line 5
    array-length v0, p1

    mul-int/lit8 v2, v0, 0x2

    .line 6
    new-array v3, v2, [B

    const/4 v4, 0x0

    const/4 v5, 0x0

    :goto_0
    if-ge v4, v0, :cond_2

    .line 7
    iget-object v6, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    aget-char v7, p1, v4

    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, [I

    if-eqz v6, :cond_1

    .line 8
    aget v6, v6, v1

    add-int/lit8 v7, v5, 0x1

    .line 9
    div-int/lit16 v8, v6, 0x100

    int-to-byte v8, v8

    aput-byte v8, v3, v5

    add-int/lit8 v5, v7, 0x1

    int-to-byte v6, v6

    .line 10
    aput-byte v6, v3, v7

    :cond_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    :cond_2
    if-ne v5, v2, :cond_3

    return-object v3

    .line 11
    :cond_3
    new-array p1, v5, [B

    .line 12
    invoke-static {v3, v1, p1, v1, v5}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    return-object p1

    .line 13
    :cond_4
    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object p1

    .line 14
    array-length v0, p1

    new-array v2, v0, [B

    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 15
    :goto_1
    array-length v5, p1

    if-ge v3, v5, :cond_6

    .line 16
    iget-object v5, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v6, p1, v3

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v5

    if-eqz v5, :cond_5

    add-int/lit8 v5, v4, 0x1

    .line 17
    iget-object v6, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    aget-char v7, p1, v3

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result v6

    int-to-byte v6, v6

    aput-byte v6, v2, v4

    move v4, v5

    :cond_5
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    :cond_6
    if-ne v4, v0, :cond_7

    return-object v2

    .line 18
    :cond_7
    new-array p1, v4, [B

    .line 19
    invoke-static {v2, v1, p1, v1, v4}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    return-object p1
.end method

.method public getAllNameEntries()[[Ljava/lang/String;
    .locals 5

    const/4 v0, 0x1

    new-array v1, v0, [[Ljava/lang/String;

    const/4 v2, 0x5

    new-array v2, v2, [Ljava/lang/String;

    const-string v3, "4"

    const/4 v4, 0x0

    aput-object v3, v2, v4

    const-string v3, ""

    aput-object v3, v2, v0

    const/4 v0, 0x2

    aput-object v3, v2, v0

    const/4 v0, 0x3

    aput-object v3, v2, v0

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    const/4 v3, 0x4

    aput-object v0, v2, v3

    aput-object v2, v1, v4

    return-object v1
.end method

.method public getByte2Uni()Lcom/itextpdf/text/pdf/IntHashtable;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->byte2uni:Lcom/itextpdf/text/pdf/IntHashtable;

    return-object v0
.end method

.method public getCharBBox(I)[I
    .locals 0

    const/4 p1, 0x0

    return-object p1
.end method

.method public getDiffmap()Lcom/itextpdf/text/pdf/IntHashtable;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->diffmap:Lcom/itextpdf/text/pdf/IntHashtable;

    return-object v0
.end method

.method public getFamilyFontName()[[Ljava/lang/String;
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/DocumentFont;->getFullFontName()[[Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getFontDescriptor(IF)F
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {v0, p1, p2}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result p1

    return p1

    :cond_0
    const/16 v0, 0xc

    const/high16 v1, 0x447a0000    # 1000.0f

    if-eq p1, v0, :cond_2

    const/16 v0, 0x17

    if-eq p1, v0, :cond_1

    packed-switch p1, :pswitch_data_0

    const/4 p1, 0x0

    return p1

    .line 3
    :pswitch_0
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ury:F

    :goto_0
    mul-float p1, p1, p2

    div-float/2addr p1, v1

    return p1

    .line 4
    :pswitch_1
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    goto :goto_0

    .line 5
    :pswitch_2
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->lly:F

    goto :goto_0

    .line 6
    :pswitch_3
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    goto :goto_0

    .line 7
    :pswitch_4
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->italicAngle:F

    return p1

    .line 8
    :pswitch_5
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->descender:F

    goto :goto_0

    .line 9
    :pswitch_6
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->capHeight:F

    goto :goto_0

    .line 10
    :pswitch_7
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->ascender:F

    goto :goto_0

    .line 11
    :cond_1
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontWeight:F

    goto :goto_0

    .line 12
    :cond_2
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->urx:F

    iget v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->llx:F

    sub-float/2addr p1, v0

    goto :goto_0

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_7
        :pswitch_6
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
        :pswitch_7
        :pswitch_5
    .end packed-switch
.end method

.method public getFontDictionary()Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    return-object v0
.end method

.method public getFontMatrix()[D
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTMATRIX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->asDoubleArray()[D

    move-result-object v0

    return-object v0

    .line 3
    :cond_0
    sget-object v0, Lcom/itextpdf/text/pdf/BaseFont;->DEFAULT_FONT_MATRIX:[D

    return-object v0
.end method

.method public getFullFontName()[[Ljava/lang/String;
    .locals 5

    const/4 v0, 0x1

    new-array v1, v0, [[Ljava/lang/String;

    const/4 v2, 0x4

    new-array v2, v2, [Ljava/lang/String;

    const/4 v3, 0x0

    const-string v4, ""

    aput-object v4, v2, v3

    aput-object v4, v2, v0

    const/4 v0, 0x2

    aput-object v4, v2, v0

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    const/4 v4, 0x3

    aput-object v0, v2, v4

    aput-object v2, v1, v3

    return-object v1
.end method

.method public getFullFontStream()Lcom/itextpdf/text/pdf/PdfStream;
    .locals 1

    const/4 v0, 0x0

    return-object v0
.end method

.method public getIndirectReference()Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->refFont:Lcom/itextpdf/text/pdf/PRIndirectReference;

    if-eqz v0, :cond_0

    return-object v0

    .line 2
    :cond_0
    new-instance v0, Ljava/lang/IllegalArgumentException;

    const-string v1, "Font reuse not allowed with direct font objects."

    invoke-direct {v0, v1}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getKerning(II)I
    .locals 0

    const/4 p1, 0x0

    return p1
.end method

.method public getPostscriptFontName()Ljava/lang/String;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->fontName:Ljava/lang/String;

    return-object v0
.end method

.method public getRawCharBBox(ILjava/lang/String;)[I
    .locals 0

    const/4 p1, 0x0

    return-object p1
.end method

.method public getRawWidth(ILjava/lang/String;)I
    .locals 0

    const/4 p1, 0x0

    return p1
.end method

.method public getUni2Byte()Lcom/itextpdf/text/pdf/IntHashtable;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->uni2byte:Lcom/itextpdf/text/pdf/IntHashtable;

    return-object v0
.end method

.method public getWidth(I)I
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    if-eqz v0, :cond_3

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    if-eqz v0, :cond_1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_1

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    if-nez v0, :cond_1

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getCidCode(I)I

    move-result p1

    .line 4
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/IntHashtable;->get(I)I

    move-result p1

    if-lez p1, :cond_0

    return p1

    .line 5
    :cond_0
    iget p1, p0, Lcom/itextpdf/text/pdf/DocumentFont;->defaultWidth:I

    return p1

    .line 6
    :cond_1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    invoke-static {p1}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, [I

    if-eqz p1, :cond_2

    const/4 v0, 0x1

    .line 7
    aget p1, p1, v0

    return p1

    :cond_2
    const/4 p1, 0x0

    return p1

    .line 8
    :cond_3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_4

    .line 9
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(I)I

    move-result p1

    return p1

    .line 10
    :cond_4
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(I)I

    move-result p1

    return p1
.end method

.method public getWidth(Ljava/lang/String;)I
    .locals 6

    .line 11
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->isType0:Z

    if-eqz v0, :cond_6

    .line 12
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->hMetrics:Lcom/itextpdf/text/pdf/IntHashtable;

    const/4 v1, 0x0

    const/4 v2, 0x1

    if-eqz v0, :cond_2

    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_2

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    if-nez v0, :cond_2

    .line 13
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    check-cast v0, Lcom/itextpdf/text/pdf/CJKFont;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/CJKFont;->isIdentity()Z

    move-result v0

    if-eqz v0, :cond_0

    const/4 v0, 0x0

    .line 14
    :goto_0
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v2

    if-ge v1, v2, :cond_5

    .line 15
    invoke-virtual {p1, v1}, Ljava/lang/String;->charAt(I)C

    move-result v2

    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/DocumentFont;->getWidth(I)I

    move-result v2

    add-int/2addr v0, v2

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    .line 16
    :goto_1
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v3

    if-ge v1, v3, :cond_5

    .line 17
    invoke-static {p1, v1}, Lcom/itextpdf/text/Utilities;->isSurrogatePair(Ljava/lang/String;I)Z

    move-result v3

    if-eqz v3, :cond_1

    .line 18
    invoke-static {p1, v1}, Lcom/itextpdf/text/Utilities;->convertToUtf32(Ljava/lang/String;I)I

    move-result v3

    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    .line 19
    :cond_1
    invoke-virtual {p1, v1}, Ljava/lang/String;->charAt(I)C

    move-result v3

    .line 20
    :goto_2
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/DocumentFont;->getWidth(I)I

    move-result v3

    add-int/2addr v0, v3

    add-int/2addr v1, v2

    goto :goto_1

    .line 21
    :cond_2
    invoke-virtual {p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object p1

    .line 22
    array-length v0, p1

    const/4 v3, 0x0

    :goto_3
    if-ge v1, v0, :cond_4

    .line 23
    iget-object v4, p0, Lcom/itextpdf/text/pdf/DocumentFont;->metrics:Ljava/util/HashMap;

    aget-char v5, p1, v1

    invoke-static {v5}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, [I

    if-eqz v4, :cond_3

    .line 24
    aget v4, v4, v2

    add-int/2addr v3, v4

    :cond_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_3

    :cond_4
    move v0, v3

    :cond_5
    return v0

    .line 25
    :cond_6
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_7

    .line 26
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(Ljava/lang/String;)I

    move-result p1

    return p1

    .line 27
    :cond_7
    invoke-super {p0, p1}, Lcom/itextpdf/text/pdf/BaseFont;->getWidth(Ljava/lang/String;)I

    move-result p1

    return p1
.end method

.method public hasKernPairs()Z
    .locals 1

    const/4 v0, 0x0

    return v0
.end method

.method public isSymbolic()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->font:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    .line 2
    :cond_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FLAGS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-nez v0, :cond_1

    return v1

    .line 3
    :cond_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v0

    and-int/lit8 v0, v0, 0x4

    if-eqz v0, :cond_2

    const/4 v1, 0x1

    :cond_2
    return v1
.end method

.method public isVertical()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/DocumentFont;->cjkMirror:Lcom/itextpdf/text/pdf/BaseFont;

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    return v0

    .line 3
    :cond_0
    invoke-super {p0}, Lcom/itextpdf/text/pdf/BaseFont;->isVertical()Z

    move-result v0

    return v0
.end method

.method public setKerning(III)Z
    .locals 0

    const/4 p1, 0x0

    return p1
.end method

.method public setPostscriptFontName(Ljava/lang/String;)V
    .locals 0

    return-void
.end method

.method public writeFont(Lcom/itextpdf/text/pdf/PdfWriter;Lcom/itextpdf/text/pdf/PdfIndirectReference;[Ljava/lang/Object;)V
    .locals 0

    return-void
.end method
