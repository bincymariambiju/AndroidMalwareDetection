.class public Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;
.super Ljava/lang/Object;
.source "MemoryLimitsAwareHandler.java"


# static fields
.field private static final SINGLE_DECOMPRESSED_PDF_STREAM_MIN_SIZE:I = 0x147ae14

.field private static final SINGLE_SCALE_COEFFICIENT:I = 0x64

.field private static final SUM_OF_DECOMPRESSED_PDF_STREAMW_MIN_SIZE:J = 0x6666666L

.field private static final SUM_SCALE_COEFFICIENT:I = 0x1f4


# instance fields
.field private allMemoryUsedForDecompression:J

.field public considerCurrentPdfStream:Z

.field private maxSizeOfDecompressedPdfStreamsSum:J

.field private maxSizeOfSingleDecompressedPdfStream:I

.field private memoryUsedForCurrentPdfStreamDecompression:J


# direct methods
.method public constructor <init>()V
    .locals 2

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-wide/16 v0, 0x0

    .line 2
    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->allMemoryUsedForDecompression:J

    .line 3
    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->memoryUsedForCurrentPdfStreamDecompression:J

    const/4 v0, 0x0

    .line 4
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->considerCurrentPdfStream:Z

    const v0, 0x147ae14

    .line 5
    iput v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfSingleDecompressedPdfStream:I

    const-wide/32 v0, 0x6666666

    .line 6
    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfDecompressedPdfStreamsSum:J

    return-void
.end method

.method public constructor <init>(J)V
    .locals 3

    .line 7
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const-wide/16 v0, 0x0

    .line 8
    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->allMemoryUsedForDecompression:J

    .line 9
    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->memoryUsedForCurrentPdfStreamDecompression:J

    const/4 v0, 0x0

    .line 10
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->considerCurrentPdfStream:Z

    const/16 v0, 0x64

    const-wide/32 v1, 0x147ae14

    .line 11
    invoke-static {p1, p2, v0, v1, v2}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->calculateDefaultParameter(JIJ)J

    move-result-wide v0

    long-to-int v1, v0

    iput v1, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfSingleDecompressedPdfStream:I

    const/16 v0, 0x1f4

    const-wide/32 v1, 0x6666666

    .line 12
    invoke-static {p1, p2, v0, v1, v2}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->calculateDefaultParameter(JIJ)J

    move-result-wide p1

    iput-wide p1, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfDecompressedPdfStreamsSum:J

    return-void
.end method

.method private static calculateDefaultParameter(JIJ)J
    .locals 2

    int-to-long v0, p2

    mul-long p0, p0, v0

    cmp-long p2, p0, p3

    if-gez p2, :cond_0

    move-wide p0, p3

    :cond_0
    mul-long p3, p3, v0

    cmp-long p2, p0, p3

    if-lez p2, :cond_1

    move-wide p0, p3

    :cond_1
    return-wide p0
.end method

.method private ensureCurrentStreamIsReset()V
    .locals 2

    const-wide/16 v0, 0x0

    .line 1
    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->memoryUsedForCurrentPdfStreamDecompression:J

    return-void
.end method


# virtual methods
.method public beginDecompressedPdfStreamProcessing()Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;
    .locals 1

    .line 1
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->ensureCurrentStreamIsReset()V

    const/4 v0, 0x1

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->considerCurrentPdfStream:Z

    return-object p0
.end method

.method public considerBytesOccupiedByDecompressedPdfStream(J)Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;
    .locals 3

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->considerCurrentPdfStream:Z

    if-eqz v0, :cond_1

    .line 2
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->memoryUsedForCurrentPdfStreamDecompression:J

    cmp-long v2, v0, p1

    if-gez v2, :cond_1

    .line 3
    iput-wide p1, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->memoryUsedForCurrentPdfStreamDecompression:J

    .line 4
    iget v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfSingleDecompressedPdfStream:I

    int-to-long v0, v0

    cmp-long v2, p1, v0

    if-gtz v2, :cond_0

    goto :goto_0

    .line 5
    :cond_0
    new-instance p1, Lcom/itextpdf/text/pdf/MemoryLimitsAwareException;

    const-string p2, "During decompression a single stream occupied more memory than allowed. Please either check your pdf or increase the allowed multiple decompressed pdf streams maximum size value by setting the appropriate parameter of ReaderProperties\'s MemoryLimitsAwareHandler."

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareException;-><init>(Ljava/lang/String;)V

    throw p1

    :cond_1
    :goto_0
    return-object p0
.end method

.method public endDecompressedPdfStreamProcessing()Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;
    .locals 5

    .line 1
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->allMemoryUsedForDecompression:J

    iget-wide v2, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->memoryUsedForCurrentPdfStreamDecompression:J

    add-long/2addr v0, v2

    iput-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->allMemoryUsedForDecompression:J

    .line 2
    iget-wide v2, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfDecompressedPdfStreamsSum:J

    cmp-long v4, v0, v2

    if-gtz v4, :cond_0

    .line 3
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->ensureCurrentStreamIsReset()V

    const/4 v0, 0x0

    .line 4
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->considerCurrentPdfStream:Z

    return-object p0

    .line 5
    :cond_0
    new-instance v0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareException;

    const-string v1, "During decompression multiple streams in sum occupied more memory than allowed. Please either check your pdf or increase the allowed single decompressed pdf stream maximum size value by setting the appropriate parameter of ReaderProperties\'s MemoryLimitsAwareHandler."

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public getAllMemoryUsedForDecompression()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->allMemoryUsedForDecompression:J

    return-wide v0
.end method

.method public getMaxSizeOfDecompressedPdfStreamsSum()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfDecompressedPdfStreamsSum:J

    return-wide v0
.end method

.method public getMaxSizeOfSingleDecompressedPdfStream()I
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfSingleDecompressedPdfStream:I

    return v0
.end method

.method public setMaxSizeOfDecompressedPdfStreamsSum(J)Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;
    .locals 0

    .line 1
    iput-wide p1, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfDecompressedPdfStreamsSum:J

    return-object p0
.end method

.method public setMaxSizeOfSingleDecompressedPdfStream(I)Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;
    .locals 0

    .line 1
    iput p1, p0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->maxSizeOfSingleDecompressedPdfStream:I

    return-object p0
.end method
