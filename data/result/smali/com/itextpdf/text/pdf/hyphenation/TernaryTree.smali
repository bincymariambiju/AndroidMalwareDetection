.class public Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;
.super Ljava/lang/Object;
.source "TernaryTree.java"

# interfaces
.implements Ljava/lang/Cloneable;
.implements Ljava/io/Serializable;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;
    }
.end annotation


# static fields
.field public static final BLOCK_SIZE:I = 0x800

.field private static final serialVersionUID:J = 0x49bcdeaf673c3056L


# instance fields
.field public eq:[C

.field public freenode:C

.field public hi:[C

.field public kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

.field public length:I

.field public lo:[C

.field public root:C

.field public sc:[C


# direct methods
.method public constructor <init>()V
    .locals 0

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->init()V

    return-void
.end method

.method private compact(Lcom/itextpdf/text/pdf/hyphenation/CharVector;Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;C)V
    .locals 4

    if-nez p3, :cond_0

    return-void

    .line 1
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aget-char v0, v0, p3

    const v1, 0xffff

    if-ne v0, v1, :cond_2

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object v0

    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v1, v1, p3

    invoke-virtual {p2, v0, v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->find([CI)I

    move-result v0

    if-gez v0, :cond_1

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object v0

    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v1, v1, p3

    invoke-static {v0, v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->strlen([CI)I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->alloc(I)I

    move-result v0

    .line 4
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object v1

    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object v2

    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v3, v3, p3

    invoke-static {v1, v0, v2, v3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->strcpy([CI[CI)V

    .line 5
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object p1

    int-to-char v1, v0

    invoke-virtual {p2, p1, v0, v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert([CIC)V

    .line 6
    :cond_1
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    int-to-char p2, v0

    aput-char p2, p1, p3

    goto :goto_0

    .line 7
    :cond_2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v0, v0, p3

    invoke-direct {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->compact(Lcom/itextpdf/text/pdf/hyphenation/CharVector;Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;C)V

    .line 8
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aget-char v0, v0, p3

    if-eqz v0, :cond_3

    .line 9
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aget-char v0, v0, p3

    invoke-direct {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->compact(Lcom/itextpdf/text/pdf/hyphenation/CharVector;Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;C)V

    .line 10
    :cond_3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    aget-char p3, v0, p3

    invoke-direct {p0, p1, p2, p3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->compact(Lcom/itextpdf/text/pdf/hyphenation/CharVector;Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;C)V

    :goto_0
    return-void
.end method

.method private insert(C[CIC)C
    .locals 8

    .line 12
    invoke-static {p2, p3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->strlen([CI)I

    move-result v0

    const v1, 0xffff

    const/4 v2, 0x0

    if-nez p1, :cond_1

    .line 13
    iget-char p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    add-int/lit8 v3, p1, 0x1

    int-to-char v3, v3

    iput-char v3, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    .line 14
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aput-char p4, v3, p1

    .line 15
    iget p4, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    add-int/lit8 p4, p4, 0x1

    iput p4, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    .line 16
    iget-object p4, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    aput-char v2, p4, p1

    if-lez v0, :cond_0

    .line 17
    iget-object p4, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aput-char v1, p4, p1

    .line 18
    iget-object p4, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    add-int/lit8 v0, v0, 0x1

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->alloc(I)I

    move-result v0

    int-to-char v0, v0

    aput-char v0, p4, p1

    .line 19
    iget-object p4, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-virtual {p4}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object p4

    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v0, v0, p1

    invoke-static {p4, v0, p2, p3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->strcpy([CI[CI)V

    goto :goto_0

    .line 20
    :cond_0
    iget-object p2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aput-char v2, p2, p1

    .line 21
    iget-object p2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aput-char v2, p2, p1

    :goto_0
    return p1

    .line 22
    :cond_1
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aget-char v4, v3, p1

    if-ne v4, v1, :cond_4

    .line 23
    iget-char v4, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    add-int/lit8 v5, v4, 0x1

    int-to-char v5, v5

    iput-char v5, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    .line 24
    iget-object v5, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v6, v5, p1

    aput-char v6, v5, v4

    .line 25
    iget-object v6, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aget-char v7, v6, p1

    aput-char v7, v6, v4

    .line 26
    aput-char v2, v5, p1

    if-lez v0, :cond_3

    .line 27
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    aget-char v5, v5, v4

    invoke-virtual {v0, v5}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->get(I)C

    move-result v0

    aput-char v0, v3, p1

    .line 28
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aput-char v4, v0, p1

    .line 29
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v3, v0, v4

    add-int/lit8 v3, v3, 0x1

    int-to-char v3, v3

    aput-char v3, v0, v4

    .line 30
    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    aget-char v0, v0, v4

    invoke-virtual {v3, v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->get(I)C

    move-result v0

    if-nez v0, :cond_2

    .line 31
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aput-char v2, v0, v4

    .line 32
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aput-char v2, v0, v4

    .line 33
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    aput-char v2, v0, v4

    goto :goto_1

    .line 34
    :cond_2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aput-char v1, v0, v4

    goto :goto_1

    .line 35
    :cond_3
    aput-char v1, v3, v4

    .line 36
    iget-object p2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    aput-char v4, p2, p1

    .line 37
    aput-char v2, v3, p1

    .line 38
    aput-char p4, v6, p1

    .line 39
    iget p2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    add-int/lit8 p2, p2, 0x1

    iput p2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    return p1

    .line 40
    :cond_4
    :goto_1
    aget-char v0, p2, p3

    .line 41
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aget-char v2, v1, p1

    if-ge v0, v2, :cond_5

    .line 42
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v1, v0, p1

    invoke-direct {p0, v1, p2, p3, p4}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert(C[CIC)C

    move-result p2

    aput-char p2, v0, p1

    goto :goto_2

    .line 43
    :cond_5
    aget-char v1, v1, p1

    if-ne v0, v1, :cond_7

    if-eqz v0, :cond_6

    .line 44
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aget-char v1, v0, p1

    add-int/lit8 p3, p3, 0x1

    invoke-direct {p0, v1, p2, p3, p4}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert(C[CIC)C

    move-result p2

    aput-char p2, v0, p1

    goto :goto_2

    .line 45
    :cond_6
    iget-object p2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aput-char p4, p2, p1

    goto :goto_2

    .line 46
    :cond_7
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    aget-char v1, v0, p1

    invoke-direct {p0, v1, p2, p3, p4}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert(C[CIC)C

    move-result p2

    aput-char p2, v0, p1

    :goto_2
    return p1
.end method

.method private redimNodeArrays(I)V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    array-length v1, v0

    if-ge p1, v1, :cond_0

    move v1, p1

    goto :goto_0

    :cond_0
    array-length v1, v0

    .line 2
    :goto_0
    new-array v2, p1, [C

    const/4 v3, 0x0

    .line 3
    invoke-static {v0, v3, v2, v3, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 4
    iput-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    .line 5
    new-array v0, p1, [C

    .line 6
    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    invoke-static {v2, v3, v0, v3, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 7
    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    .line 8
    new-array v0, p1, [C

    .line 9
    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    invoke-static {v2, v3, v0, v3, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 10
    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    .line 11
    new-array p1, p1, [C

    .line 12
    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    invoke-static {v0, v3, p1, v3, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 13
    iput-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    return-void
.end method

.method public static strcmp(Ljava/lang/String;[CI)I
    .locals 6

    .line 4
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v0, :cond_2

    .line 5
    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v3

    add-int v4, p2, v2

    aget-char v5, p1, v4

    sub-int/2addr v3, v5

    if-eqz v3, :cond_0

    return v3

    .line 6
    :cond_0
    aget-char v4, p1, v4

    if-nez v4, :cond_1

    return v3

    :cond_1
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_2
    add-int/2addr p2, v2

    .line 7
    aget-char p0, p1, p2

    if-eqz p0, :cond_3

    .line 8
    aget-char p0, p1, p2

    neg-int p0, p0

    return p0

    :cond_3
    return v1
.end method

.method public static strcmp([CI[CI)I
    .locals 2

    .line 1
    :goto_0
    aget-char v0, p0, p1

    aget-char v1, p2, p3

    if-ne v0, v1, :cond_1

    .line 2
    aget-char v0, p0, p1

    if-nez v0, :cond_0

    const/4 p0, 0x0

    return p0

    :cond_0
    add-int/lit8 p1, p1, 0x1

    add-int/lit8 p3, p3, 0x1

    goto :goto_0

    .line 3
    :cond_1
    aget-char p0, p0, p1

    aget-char p1, p2, p3

    sub-int/2addr p0, p1

    return p0
.end method

.method public static strcpy([CI[CI)V
    .locals 2

    .line 1
    :goto_0
    aget-char v0, p2, p3

    if-eqz v0, :cond_0

    add-int/lit8 v0, p1, 0x1

    add-int/lit8 v1, p3, 0x1

    .line 2
    aget-char p3, p2, p3

    aput-char p3, p0, p1

    move p1, v0

    move p3, v1

    goto :goto_0

    :cond_0
    const/4 p2, 0x0

    .line 3
    aput-char p2, p0, p1

    return-void
.end method

.method public static strlen([C)I
    .locals 1

    const/4 v0, 0x0

    .line 2
    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->strlen([CI)I

    move-result p0

    return p0
.end method

.method public static strlen([CI)I
    .locals 2

    const/4 v0, 0x0

    .line 1
    :goto_0
    array-length v1, p0

    if-ge p1, v1, :cond_0

    aget-char v1, p0, p1

    if-eqz v1, :cond_0

    add-int/lit8 v0, v0, 0x1

    add-int/lit8 p1, p1, 0x1

    goto :goto_0

    :cond_0
    return v0
.end method


# virtual methods
.method public balance()V
    .locals 8

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    .line 2
    new-array v1, v0, [Ljava/lang/String;

    .line 3
    new-array v2, v0, [C

    .line 4
    new-instance v3, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;

    invoke-direct {v3, p0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;-><init>(Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;)V

    const/4 v4, 0x0

    const/4 v5, 0x0

    .line 5
    :goto_0
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;->hasMoreElements()Z

    move-result v6

    if-eqz v6, :cond_0

    .line 6
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;->getValue()C

    move-result v6

    aput-char v6, v2, v5

    add-int/lit8 v6, v5, 0x1

    .line 7
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;->nextElement()Ljava/lang/String;

    move-result-object v7

    aput-object v7, v1, v5

    move v5, v6

    goto :goto_0

    .line 8
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->init()V

    .line 9
    invoke-virtual {p0, v1, v2, v4, v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insertBalanced([Ljava/lang/String;[CII)V

    return-void
.end method

.method public clone()Ljava/lang/Object;
    .locals 2

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;-><init>()V

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    invoke-virtual {v1}, [C->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [C

    iput-object v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    invoke-virtual {v1}, [C->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [C

    iput-object v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    .line 4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    invoke-virtual {v1}, [C->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [C

    iput-object v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    .line 5
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    invoke-virtual {v1}, [C->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [C

    iput-object v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    .line 6
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->clone()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    iput-object v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    .line 7
    iget-char v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    iput-char v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    .line 8
    iget-char v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    iput-char v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    .line 9
    iget v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    iput v1, v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    return-object v0
.end method

.method public find(Ljava/lang/String;)I
    .locals 3

    .line 1
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    add-int/lit8 v1, v0, 0x1

    .line 2
    new-array v1, v1, [C

    const/4 v2, 0x0

    .line 3
    invoke-virtual {p1, v2, v0, v1, v2}, Ljava/lang/String;->getChars(II[CI)V

    .line 4
    aput-char v2, v1, v0

    .line 5
    invoke-virtual {p0, v1, v2}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->find([CI)I

    move-result p1

    return p1
.end method

.method public find([CI)I
    .locals 5

    .line 6
    iget-char v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    :goto_0
    const/4 v1, -0x1

    if-eqz v0, :cond_5

    .line 7
    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    aget-char v3, v2, v0

    const v4, 0xffff

    if-ne v3, v4, :cond_1

    .line 8
    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->getArray()[C

    move-result-object v2

    iget-object v3, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v3, v3, v0

    invoke-static {p1, p2, v2, v3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->strcmp([CI[CI)I

    move-result p1

    if-nez p1, :cond_0

    .line 9
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aget-char p1, p1, v0

    return p1

    :cond_0
    return v1

    .line 10
    :cond_1
    aget-char v1, p1, p2

    .line 11
    aget-char v2, v2, v0

    sub-int v2, v1, v2

    if-nez v2, :cond_3

    if-nez v1, :cond_2

    .line 12
    iget-object p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aget-char p1, p1, v0

    return p1

    :cond_2
    add-int/lit8 p2, p2, 0x1

    .line 13
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    aget-char v0, v1, v0

    goto :goto_0

    :cond_3
    if-gez v2, :cond_4

    .line 14
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    aget-char v0, v1, v0

    goto :goto_0

    .line 15
    :cond_4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    aget-char v0, v1, v0

    goto :goto_0

    :cond_5
    return v1
.end method

.method public init()V
    .locals 2

    const/4 v0, 0x0

    .line 1
    iput-char v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    const/4 v1, 0x1

    .line 2
    iput-char v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    .line 3
    iput v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    const/16 v0, 0x800

    new-array v1, v0, [C

    .line 4
    iput-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->lo:[C

    new-array v1, v0, [C

    .line 5
    iput-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->hi:[C

    new-array v1, v0, [C

    .line 6
    iput-object v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    new-array v0, v0, [C

    .line 7
    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->sc:[C

    .line 8
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    return-void
.end method

.method public insert(Ljava/lang/String;C)V
    .locals 4

    .line 1
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    .line 2
    iget-char v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    add-int/2addr v1, v0

    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    array-length v3, v2

    if-le v1, v3, :cond_0

    .line 3
    array-length v1, v2

    add-int/lit16 v1, v1, 0x800

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->redimNodeArrays(I)V

    :cond_0
    add-int/lit8 v1, v0, -0x1

    .line 4
    new-array v0, v0, [C

    const/4 v2, 0x0

    .line 5
    invoke-virtual {p1, v2, v1, v0, v2}, Ljava/lang/String;->getChars(II[CI)V

    .line 6
    aput-char v2, v0, v1

    .line 7
    iget-char p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    invoke-direct {p0, p1, v0, v2, p2}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert(C[CIC)C

    move-result p1

    iput-char p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    return-void
.end method

.method public insert([CIC)V
    .locals 3

    .line 8
    invoke-static {p1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->strlen([C)I

    move-result v0

    add-int/lit8 v0, v0, 0x1

    .line 9
    iget-char v1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    add-int/2addr v1, v0

    iget-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->eq:[C

    array-length v2, v0

    if-le v1, v2, :cond_0

    .line 10
    array-length v0, v0

    add-int/lit16 v0, v0, 0x800

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->redimNodeArrays(I)V

    .line 11
    :cond_0
    iget-char v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    invoke-direct {p0, v0, p1, p2, p3}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert(C[CIC)C

    move-result p1

    iput-char p1, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    return-void
.end method

.method public insertBalanced([Ljava/lang/String;[CII)V
    .locals 5

    const/4 v0, 0x1

    if-ge p4, v0, :cond_0

    return-void

    :cond_0
    shr-int/lit8 v1, p4, 0x1

    add-int v2, v1, p3

    .line 1
    aget-object v3, p1, v2

    aget-char v4, p2, v2

    invoke-virtual {p0, v3, v4}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insert(Ljava/lang/String;C)V

    .line 2
    invoke-virtual {p0, p1, p2, p3, v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insertBalanced([Ljava/lang/String;[CII)V

    add-int/2addr v2, v0

    sub-int/2addr p4, v1

    sub-int/2addr p4, v0

    .line 3
    invoke-virtual {p0, p1, p2, v2, p4}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->insertBalanced([Ljava/lang/String;[CII)V

    return-void
.end method

.method public keys()Ljava/util/Enumeration;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/Enumeration<",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree$Iterator;-><init>(Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;)V

    return-object v0
.end method

.method public knows(Ljava/lang/String;)Z
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->find(Ljava/lang/String;)I

    move-result p1

    if-ltz p1, :cond_0

    const/4 p1, 0x1

    goto :goto_0

    :cond_0
    const/4 p1, 0x0

    :goto_0
    return p1
.end method

.method public printStats()V
    .locals 3

    .line 1
    sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;

    const-string v1, "Number of keys = "

    invoke-static {v1}, Landroidx/activity/c;->a(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    .line 2
    sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;

    const-string v1, "Node count = "

    invoke-static {v1}, Landroidx/activity/c;->a(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-char v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    .line 3
    sget-object v0, Ljava/lang/System;->out:Ljava/io/PrintStream;

    const-string v1, "Key Array length = "

    invoke-static {v1}, Landroidx/activity/c;->a(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-object v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    .line 4
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->length()I

    move-result v2

    invoke-static {v2}, Ljava/lang/Integer;->toString(I)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v1

    .line 5
    invoke-virtual {v0, v1}, Ljava/io/PrintStream;->println(Ljava/lang/String;)V

    return-void
.end method

.method public size()I
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->length:I

    return v0
.end method

.method public trimToSize()V
    .locals 3

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->balance()V

    .line 2
    iget-char v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->freenode:C

    invoke-direct {p0, v0}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->redimNodeArrays(I)V

    .line 3
    new-instance v0, Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;-><init>()V

    const/4 v1, 0x1

    .line 4
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->alloc(I)I

    .line 5
    new-instance v1, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;-><init>()V

    .line 6
    iget-char v2, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->root:C

    invoke-direct {p0, v0, v1, v2}, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->compact(Lcom/itextpdf/text/pdf/hyphenation/CharVector;Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;C)V

    .line 7
    iput-object v0, p0, Lcom/itextpdf/text/pdf/hyphenation/TernaryTree;->kv:Lcom/itextpdf/text/pdf/hyphenation/CharVector;

    .line 8
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/hyphenation/CharVector;->trimToSize()V

    return-void
.end method
