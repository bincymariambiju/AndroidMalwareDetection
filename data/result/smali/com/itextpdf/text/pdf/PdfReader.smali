.class public Lcom/itextpdf/text/pdf/PdfReader;
.super Ljava/lang/Object;
.source "PdfReader.java"

# interfaces
.implements Lcom/itextpdf/text/pdf/interfaces/PdfViewerPreferences;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/PdfReader$PageRefs;
    }
.end annotation


# static fields
.field public static COUNTER:Lcom/itextpdf/text/log/Counter; = null

.field private static final LOGGER:Lcom/itextpdf/text/log/Logger;

.field public static debugmode:Z = false

.field public static final endobj:[B

.field public static final endstream:[B

.field public static final pageInhCandidates:[Lcom/itextpdf/text/pdf/PdfName;

.field public static unethicalreading:Z = false


# instance fields
.field public acroForm:Lcom/itextpdf/text/pdf/PRAcroForm;

.field public acroFormParsed:Z

.field private appendable:Z

.field public catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

.field public certificate:Ljava/security/cert/Certificate;

.field public certificateKey:Ljava/security/Key;

.field public certificateKeyProvider:Ljava/lang/String;

.field public consolidateNamedDestinations:Z

.field private cryptoRef:Lcom/itextpdf/text/pdf/PRIndirectReference;

.field public decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

.field public encrypted:Z

.field private encryptionError:Z

.field public eofPos:J

.field public externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

.field private fileLength:J

.field public freeXref:I

.field private hybridXref:Z

.field public lastXref:J

.field private lastXrefPartial:I

.field public memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

.field public newXrefType:Z

.field private objGen:I

.field private objNum:I

.field public objStmMark:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/Integer;",
            "Lcom/itextpdf/text/pdf/IntHashtable;",
            ">;"
        }
    .end annotation
.end field

.field public objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

.field private ownerPasswordUsed:Z

.field public pValue:J

.field public pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

.field private partial:Z

.field public password:[B

.field public pdfVersion:C

.field public rValue:I

.field private readDepth:I

.field public rebuilt:Z

.field public remoteToLocalNamedDestinations:Z

.field public rootPages:Lcom/itextpdf/text/pdf/PdfDictionary;

.field public sharedStreams:Z

.field public strings:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfString;",
            ">;"
        }
    .end annotation
.end field

.field public tampered:Z

.field public tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

.field public trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

.field private final viewerPreferences:Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

.field public xref:[J

.field public xrefObj:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public static constructor <clinit>()V
    .locals 4

    .line 1
    const-class v0, Lcom/itextpdf/text/pdf/PdfReader;

    invoke-static {v0}, Lcom/itextpdf/text/log/LoggerFactory;->getLogger(Ljava/lang/Class;)Lcom/itextpdf/text/log/Logger;

    move-result-object v1

    sput-object v1, Lcom/itextpdf/text/pdf/PdfReader;->LOGGER:Lcom/itextpdf/text/log/Logger;

    const/4 v1, 0x4

    new-array v1, v1, [Lcom/itextpdf/text/pdf/PdfName;

    .line 2
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->MEDIABOX:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v3, 0x0

    aput-object v2, v1, v3

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ROTATE:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v3, 0x1

    aput-object v2, v1, v3

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->RESOURCES:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v3, 0x2

    aput-object v2, v1, v3

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->CROPBOX:Lcom/itextpdf/text/pdf/PdfName;

    const/4 v3, 0x3

    aput-object v2, v1, v3

    sput-object v1, Lcom/itextpdf/text/pdf/PdfReader;->pageInhCandidates:[Lcom/itextpdf/text/pdf/PdfName;

    const-string v1, "endstream"

    const/4 v2, 0x0

    .line 3
    invoke-static {v1, v2}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToBytes(Ljava/lang/String;Ljava/lang/String;)[B

    move-result-object v1

    sput-object v1, Lcom/itextpdf/text/pdf/PdfReader;->endstream:[B

    const-string v1, "endobj"

    .line 4
    invoke-static {v1, v2}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToBytes(Ljava/lang/String;Ljava/lang/String;)[B

    move-result-object v1

    sput-object v1, Lcom/itextpdf/text/pdf/PdfReader;->endobj:[B

    .line 5
    invoke-static {v0}, Lcom/itextpdf/text/log/CounterFactory;->getCounter(Ljava/lang/Class;)Lcom/itextpdf/text/log/Counter;

    move-result-object v0

    sput-object v0, Lcom/itextpdf/text/pdf/PdfReader;->COUNTER:Lcom/itextpdf/text/log/Counter;

    return-void
.end method

.method private constructor <init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V
    .locals 3

    .line 4
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    .line 5
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroForm:Lcom/itextpdf/text/pdf/PRAcroForm;

    const/4 v1, 0x0

    .line 6
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroFormParsed:Z

    .line 7
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    .line 8
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    .line 9
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tampered:Z

    .line 10
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    .line 11
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificateKey:Ljava/security/Key;

    .line 12
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificate:Ljava/security/cert/Certificate;

    .line 13
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificateKeyProvider:Ljava/lang/String;

    .line 14
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

    .line 15
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    const/4 v2, 0x1

    .line 16
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->sharedStreams:Z

    .line 17
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations:Z

    .line 18
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->remoteToLocalNamedDestinations:Z

    const/4 v2, -0x1

    .line 19
    iput v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 20
    new-instance v2, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    invoke-direct {v2}, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;-><init>()V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->viewerPreferences:Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    .line 21
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    .line 22
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    .line 23
    iget-object v0, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->certificate:Ljava/security/cert/Certificate;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificate:Ljava/security/cert/Certificate;

    .line 24
    iget-object v0, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->certificateKey:Ljava/security/Key;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificateKey:Ljava/security/Key;

    .line 25
    iget-object v0, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->certificateKeyProvider:Ljava/lang/String;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificateKeyProvider:Ljava/lang/String;

    .line 26
    iget-object v0, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

    .line 27
    iget-object v0, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->ownerPassword:[B

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    .line 28
    iget-boolean v0, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->partialRead:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    .line 29
    iget-object v0, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    .line 30
    :try_start_0
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getOffsetTokeniser(Lcom/itextpdf/text/io/RandomAccessSource;)Lcom/itextpdf/text/pdf/PRTokeniser;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    .line 31
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-eqz v0, :cond_0

    .line 32
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPdfPartial()V

    goto :goto_0

    .line 33
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPdf()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    .line 34
    :goto_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getCounter()Lcom/itextpdf/text/log/Counter;

    move-result-object p1

    iget-wide v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    invoke-interface {p1, v0, v1}, Lcom/itextpdf/text/log/Counter;->read(J)V

    return-void

    :catch_0
    move-exception v0

    .line 35
    iget-boolean p2, p2, Lcom/itextpdf/text/pdf/ReaderProperties;->closeSourceOnconstructorError:Z

    if-eqz p2, :cond_1

    .line 36
    invoke-interface {p1}, Lcom/itextpdf/text/io/RandomAccessSource;->close()V

    .line 37
    :cond_1
    throw v0
.end method

.method private constructor <init>(Lcom/itextpdf/text/io/RandomAccessSource;Z[BLjava/security/cert/Certificate;Ljava/security/Key;Ljava/lang/String;Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;Z)V
    .locals 1

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-virtual {v0, p4}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificate(Ljava/security/cert/Certificate;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p4

    invoke-virtual {p4, p5}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificateKey(Ljava/security/Key;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p4

    invoke-virtual {p4, p6}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificateKeyProvider(Ljava/lang/String;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p4

    invoke-virtual {p4, p7}, Lcom/itextpdf/text/pdf/ReaderProperties;->setExternalDecryptionProcess(Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p4

    .line 2
    invoke-virtual {p4, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p3

    invoke-virtual {p3, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setPartialRead(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-virtual {p2, p8}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCloseSourceOnconstructorError(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 3
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfReader;)V
    .locals 4

    .line 85
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    const/4 v0, 0x0

    .line 86
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroForm:Lcom/itextpdf/text/pdf/PRAcroForm;

    const/4 v1, 0x0

    .line 87
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroFormParsed:Z

    .line 88
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    .line 89
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    .line 90
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tampered:Z

    .line 91
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    .line 92
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificateKey:Ljava/security/Key;

    .line 93
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificate:Ljava/security/cert/Certificate;

    .line 94
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->certificateKeyProvider:Ljava/lang/String;

    .line 95
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

    .line 96
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    const/4 v2, 0x1

    .line 97
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->sharedStreams:Z

    .line 98
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations:Z

    .line 99
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->remoteToLocalNamedDestinations:Z

    const/4 v2, -0x1

    .line 100
    iput v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 101
    new-instance v2, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    invoke-direct {v2}, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;-><init>()V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->viewerPreferences:Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    .line 102
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    .line 103
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    .line 104
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->appendable:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->appendable:Z

    .line 105
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations:Z

    .line 106
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    .line 107
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    .line 108
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->sharedStreams:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->sharedStreams:Z

    .line 109
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->tampered:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tampered:Z

    .line 110
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    .line 111
    iget-char v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->pdfVersion:C

    iput-char v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pdfVersion:C

    .line 112
    iget-wide v2, p1, Lcom/itextpdf/text/pdf/PdfReader;->eofPos:J

    iput-wide v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->eofPos:J

    .line 113
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    .line 114
    iget-wide v2, p1, Lcom/itextpdf/text/pdf/PdfReader;->lastXref:J

    iput-wide v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXref:J

    .line 115
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->newXrefType:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->newXrefType:Z

    .line 116
    new-instance v0, Lcom/itextpdf/text/pdf/PRTokeniser;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    .line 117
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    if-eqz v0, :cond_0

    .line 118
    new-instance v0, Lcom/itextpdf/text/pdf/PdfEncryption;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    invoke-direct {v0, v2}, Lcom/itextpdf/text/pdf/PdfEncryption;-><init>(Lcom/itextpdf/text/pdf/PdfEncryption;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    .line 119
    :cond_0
    iget-wide v2, p1, Lcom/itextpdf/text/pdf/PdfReader;->pValue:J

    iput-wide v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->pValue:J

    .line 120
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    .line 121
    new-instance v0, Ljava/util/ArrayList;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-direct {v0, v2}, Ljava/util/ArrayList;-><init>(Ljava/util/Collection;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    .line 122
    :goto_0
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v1, v0, :cond_1

    .line 123
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    iget-object v2, p1, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfObject;

    invoke-static {v2, p0}, Lcom/itextpdf/text/pdf/PdfReader;->duplicatePdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-virtual {v0, v1, v2}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 124
    :cond_1
    new-instance v0, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-direct {v0, v1, p0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;-><init>(Lcom/itextpdf/text/pdf/PdfReader$PageRefs;Lcom/itextpdf/text/pdf/PdfReader;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    .line 125
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {v0, p0}, Lcom/itextpdf/text/pdf/PdfReader;->duplicatePdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 126
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 127
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PAGES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->rootPages:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 128
    iget-wide v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    iput-wide v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    .line 129
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    .line 130
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->hybridXref:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->hybridXref:Z

    .line 131
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    .line 132
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    .line 133
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfReader;->cryptoRef:Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-static {v0, p0}, Lcom/itextpdf/text/pdf/PdfReader;->duplicatePdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->cryptoRef:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 134
    iget-boolean p1, p1, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;[B)V
    .locals 1

    .line 83
    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    const/4 v0, 0x1

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/ReaderProperties;->setPartialRead(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    const/4 v0, 0x0

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCloseSourceOnconstructorError(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-direct {p0, p2, p1}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/pdf/ReaderProperties;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;[BZ)V
    .locals 1

    .line 84
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->getByteSource()Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-virtual {v0, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setPartialRead(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p3

    invoke-virtual {p3, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    const/4 p3, 0x0

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCloseSourceOnconstructorError(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/ReaderProperties;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V
    .locals 0

    .line 82
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->getByteSource()Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p2

    invoke-direct {p0, p2, p1}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/ReaderProperties;Ljava/io/InputStream;)V
    .locals 1

    .line 81
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource(Ljava/io/InputStream;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p2

    invoke-direct {p0, p2, p1}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/ReaderProperties;Ljava/lang/String;)V
    .locals 2

    .line 39
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    const/4 v1, 0x0

    .line 40
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setForceRead(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    sget-boolean v1, Lcom/itextpdf/text/Document;->plainRandomAccess:Z

    .line 41
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setUsePlainRandomAccess(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    .line 42
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createBestSource(Ljava/lang/String;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p2

    .line 43
    invoke-direct {p0, p2, p1}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/io/InputStream;)V
    .locals 2

    .line 80
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource(Ljava/io/InputStream;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCloseSourceOnconstructorError(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object v0

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/io/InputStream;Ljava/security/cert/Certificate;Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;)V
    .locals 2

    .line 70
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    const/4 v1, 0x0

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setForceRead(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    sget-boolean v1, Lcom/itextpdf/text/Document;->plainRandomAccess:Z

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setUsePlainRandomAccess(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource(Ljava/io/InputStream;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    .line 71
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificate(Ljava/security/cert/Certificate;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setExternalDecryptionProcess(Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 72
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/io/InputStream;[B)V
    .locals 1

    .line 77
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource(Ljava/io/InputStream;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    .line 78
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    const/4 v0, 0x0

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCloseSourceOnconstructorError(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 79
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;)V
    .locals 1

    const/4 v0, 0x0

    .line 38
    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Ljava/lang/String;[B)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;Ljava/security/cert/Certificate;Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;)V
    .locals 2

    .line 58
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    const/4 v1, 0x0

    .line 59
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setForceRead(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    sget-boolean v1, Lcom/itextpdf/text/Document;->plainRandomAccess:Z

    .line 60
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setUsePlainRandomAccess(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    .line 61
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createBestSource(Ljava/lang/String;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    .line 62
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificate(Ljava/security/cert/Certificate;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setExternalDecryptionProcess(Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 63
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;Ljava/security/cert/Certificate;Ljava/security/Key;Ljava/lang/String;)V
    .locals 2

    .line 52
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    const/4 v1, 0x0

    .line 53
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setForceRead(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    sget-boolean v1, Lcom/itextpdf/text/Document;->plainRandomAccess:Z

    .line 54
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setUsePlainRandomAccess(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    .line 55
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createBestSource(Ljava/lang/String;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    .line 56
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificate(Ljava/security/cert/Certificate;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificateKey(Ljava/security/Key;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-virtual {p2, p4}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificateKeyProvider(Ljava/lang/String;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 57
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;[B)V
    .locals 1

    .line 44
    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-direct {p0, p2, p1}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/pdf/ReaderProperties;Ljava/lang/String;)V

    return-void
.end method

.method public constructor <init>(Ljava/lang/String;[BZ)V
    .locals 2

    .line 45
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    const/4 v1, 0x0

    .line 46
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setForceRead(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    sget-boolean v1, Lcom/itextpdf/text/Document;->plainRandomAccess:Z

    .line 47
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setUsePlainRandomAccess(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    .line 48
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createBestSource(Ljava/lang/String;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setPartialRead(Z)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 49
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/net/URL;)V
    .locals 1

    .line 73
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource(Ljava/net/URL;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>(Ljava/net/URL;[B)V
    .locals 1

    .line 74
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource(Ljava/net/URL;)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    .line 75
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 76
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>([B)V
    .locals 1

    .line 50
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-direct {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>([BLjava/security/cert/Certificate;Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;)V
    .locals 2

    .line 64
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    const/4 v1, 0x0

    .line 65
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setForceRead(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    sget-boolean v1, Lcom/itextpdf/text/Document;->plainRandomAccess:Z

    .line 66
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->setUsePlainRandomAccess(Z)Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    move-result-object v0

    .line 67
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    .line 68
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setCertificate(Ljava/security/cert/Certificate;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-virtual {p2, p3}, Lcom/itextpdf/text/pdf/ReaderProperties;->setExternalDecryptionProcess(Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    .line 69
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public constructor <init>([B[B)V
    .locals 1

    .line 51
    new-instance v0, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v0}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    new-instance v0, Lcom/itextpdf/text/pdf/ReaderProperties;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ReaderProperties;-><init>()V

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/ReaderProperties;->setOwnerPassword([B)Lcom/itextpdf/text/pdf/ReaderProperties;

    move-result-object p2

    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;Lcom/itextpdf/text/pdf/ReaderProperties;)V

    return-void
.end method

.method public static ASCII85Decode([B)[B
    .locals 1

    .line 1
    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->ASCII85Decode([BLjava/io/ByteArrayOutputStream;)[B

    move-result-object p0

    return-object p0
.end method

.method public static ASCII85Decode([BLjava/io/ByteArrayOutputStream;)[B
    .locals 7

    const/4 v0, 0x5

    new-array v1, v0, [I

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 2
    :goto_0
    array-length v5, p0

    if-ge v3, v5, :cond_6

    .line 3
    aget-byte v5, p0, v3

    and-int/lit16 v5, v5, 0xff

    const/16 v6, 0x7e

    if-ne v5, v6, :cond_0

    goto :goto_3

    .line 4
    :cond_0
    invoke-static {v5}, Lcom/itextpdf/text/pdf/PRTokeniser;->isWhitespace(I)Z

    move-result v6

    if-eqz v6, :cond_1

    goto :goto_2

    :cond_1
    const/16 v6, 0x7a

    if-ne v5, v6, :cond_2

    if-nez v4, :cond_2

    .line 5
    invoke-virtual {p1, v2}, Ljava/io/ByteArrayOutputStream;->write(I)V

    .line 6
    invoke-virtual {p1, v2}, Ljava/io/ByteArrayOutputStream;->write(I)V

    .line 7
    invoke-virtual {p1, v2}, Ljava/io/ByteArrayOutputStream;->write(I)V

    .line 8
    invoke-virtual {p1, v2}, Ljava/io/ByteArrayOutputStream;->write(I)V

    goto :goto_2

    :cond_2
    const/16 v6, 0x21

    if-lt v5, v6, :cond_5

    const/16 v6, 0x75

    if-gt v5, v6, :cond_5

    add-int/lit8 v5, v5, -0x21

    .line 9
    aput v5, v1, v4

    add-int/lit8 v4, v4, 0x1

    if-ne v4, v0, :cond_4

    const/4 v4, 0x0

    const/4 v5, 0x0

    :goto_1
    if-ge v4, v0, :cond_3

    mul-int/lit8 v5, v5, 0x55

    .line 10
    aget v6, v1, v4

    add-int/2addr v5, v6

    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    :cond_3
    shr-int/lit8 v4, v5, 0x18

    int-to-byte v4, v4

    .line 11
    invoke-virtual {p1, v4}, Ljava/io/ByteArrayOutputStream;->write(I)V

    shr-int/lit8 v4, v5, 0x10

    int-to-byte v4, v4

    .line 12
    invoke-virtual {p1, v4}, Ljava/io/ByteArrayOutputStream;->write(I)V

    shr-int/lit8 v4, v5, 0x8

    int-to-byte v4, v4

    .line 13
    invoke-virtual {p1, v4}, Ljava/io/ByteArrayOutputStream;->write(I)V

    int-to-byte v4, v5

    .line 14
    invoke-virtual {p1, v4}, Ljava/io/ByteArrayOutputStream;->write(I)V

    const/4 v4, 0x0

    :cond_4
    :goto_2
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 15
    :cond_5
    new-instance p0, Ljava/lang/RuntimeException;

    new-array p1, v2, [Ljava/lang/Object;

    const-string v0, "illegal.character.in.ascii85decode"

    invoke-static {v0, p1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_6
    :goto_3
    const/4 p0, 0x2

    const/4 v0, 0x1

    if-ne v4, p0, :cond_7

    .line 16
    aget p0, v1, v2

    mul-int/lit8 p0, p0, 0x55

    mul-int/lit8 p0, p0, 0x55

    mul-int/lit8 p0, p0, 0x55

    mul-int/lit8 p0, p0, 0x55

    aget v0, v1, v0

    mul-int/lit8 v0, v0, 0x55

    mul-int/lit8 v0, v0, 0x55

    mul-int/lit8 v0, v0, 0x55

    add-int/2addr v0, p0

    const p0, 0x95eed

    add-int/2addr v0, p0

    add-int/lit16 v0, v0, 0x1c39

    add-int/lit8 v0, v0, 0x55

    shr-int/lit8 p0, v0, 0x18

    int-to-byte p0, p0

    .line 17
    invoke-virtual {p1, p0}, Ljava/io/ByteArrayOutputStream;->write(I)V

    goto :goto_4

    :cond_7
    const/4 v3, 0x3

    if-ne v4, v3, :cond_8

    .line 18
    aget v2, v1, v2

    mul-int/lit8 v2, v2, 0x55

    mul-int/lit8 v2, v2, 0x55

    mul-int/lit8 v2, v2, 0x55

    mul-int/lit8 v2, v2, 0x55

    aget v0, v1, v0

    mul-int/lit8 v0, v0, 0x55

    mul-int/lit8 v0, v0, 0x55

    mul-int/lit8 v0, v0, 0x55

    add-int/2addr v0, v2

    aget p0, v1, p0

    mul-int/lit8 p0, p0, 0x55

    mul-int/lit8 p0, p0, 0x55

    add-int/2addr p0, v0

    add-int/lit16 p0, p0, 0x1c39

    add-int/lit8 p0, p0, 0x55

    shr-int/lit8 v0, p0, 0x18

    int-to-byte v0, v0

    .line 19
    invoke-virtual {p1, v0}, Ljava/io/ByteArrayOutputStream;->write(I)V

    shr-int/lit8 p0, p0, 0x10

    int-to-byte p0, p0

    .line 20
    invoke-virtual {p1, p0}, Ljava/io/ByteArrayOutputStream;->write(I)V

    goto :goto_4

    :cond_8
    const/4 v5, 0x4

    if-ne v4, v5, :cond_9

    .line 21
    aget v2, v1, v2

    mul-int/lit8 v2, v2, 0x55

    mul-int/lit8 v2, v2, 0x55

    mul-int/lit8 v2, v2, 0x55

    mul-int/lit8 v2, v2, 0x55

    aget v0, v1, v0

    mul-int/lit8 v0, v0, 0x55

    mul-int/lit8 v0, v0, 0x55

    mul-int/lit8 v0, v0, 0x55

    add-int/2addr v0, v2

    aget p0, v1, p0

    mul-int/lit8 p0, p0, 0x55

    mul-int/lit8 p0, p0, 0x55

    add-int/2addr p0, v0

    aget v0, v1, v3

    mul-int/lit8 v0, v0, 0x55

    add-int/2addr v0, p0

    add-int/lit8 v0, v0, 0x55

    shr-int/lit8 p0, v0, 0x18

    int-to-byte p0, p0

    .line 22
    invoke-virtual {p1, p0}, Ljava/io/ByteArrayOutputStream;->write(I)V

    shr-int/lit8 p0, v0, 0x10

    int-to-byte p0, p0

    .line 23
    invoke-virtual {p1, p0}, Ljava/io/ByteArrayOutputStream;->write(I)V

    shr-int/lit8 p0, v0, 0x8

    int-to-byte p0, p0

    .line 24
    invoke-virtual {p1, p0}, Ljava/io/ByteArrayOutputStream;->write(I)V

    .line 25
    :cond_9
    :goto_4
    invoke-virtual {p1}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p0

    return-object p0
.end method

.method public static ASCIIHexDecode([B)[B
    .locals 1

    .line 1
    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->ASCIIHexDecode([BLjava/io/ByteArrayOutputStream;)[B

    move-result-object p0

    return-object p0
.end method

.method public static ASCIIHexDecode([BLjava/io/ByteArrayOutputStream;)[B
    .locals 6

    const/4 v0, 0x0

    const/4 v1, 0x1

    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 2
    :goto_0
    array-length v4, p0

    if-ge v2, v4, :cond_4

    .line 3
    aget-byte v4, p0, v2

    and-int/lit16 v4, v4, 0xff

    const/16 v5, 0x3e

    if-ne v4, v5, :cond_0

    goto :goto_3

    .line 4
    :cond_0
    invoke-static {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->isWhitespace(I)Z

    move-result v5

    if-eqz v5, :cond_1

    goto :goto_2

    .line 5
    :cond_1
    invoke-static {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->getHex(I)I

    move-result v4

    const/4 v5, -0x1

    if-eq v4, v5, :cond_3

    if-eqz v1, :cond_2

    move v3, v4

    goto :goto_1

    :cond_2
    shl-int/lit8 v5, v3, 0x4

    add-int/2addr v5, v4

    int-to-byte v4, v5

    .line 6
    invoke-virtual {p1, v4}, Ljava/io/ByteArrayOutputStream;->write(I)V

    :goto_1
    xor-int/lit8 v1, v1, 0x1

    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 7
    :cond_3
    new-instance p0, Ljava/lang/RuntimeException;

    new-array p1, v0, [Ljava/lang/Object;

    const-string v0, "illegal.character.in.asciihexdecode"

    invoke-static {v0, p1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_4
    :goto_3
    if-nez v1, :cond_5

    shl-int/lit8 p0, v3, 0x4

    int-to-byte p0, p0

    .line 8
    invoke-virtual {p1, p0}, Ljava/io/ByteArrayOutputStream;->write(I)V

    .line 9
    :cond_5
    invoke-virtual {p1}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p0

    return-object p0
.end method

.method public static FlateDecode([B)[B
    .locals 1

    const/4 v0, 0x1

    .line 1
    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->FlateDecode([BZ)[B

    move-result-object v0

    if-nez v0, :cond_0

    const/4 v0, 0x0

    .line 2
    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->FlateDecode([BZ)[B

    move-result-object p0

    return-object p0

    :cond_0
    return-object v0
.end method

.method public static FlateDecode([BLjava/io/ByteArrayOutputStream;)[B
    .locals 1

    const/4 v0, 0x1

    .line 3
    invoke-static {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->FlateDecode([BZLjava/io/ByteArrayOutputStream;)[B

    move-result-object v0

    if-nez v0, :cond_0

    const/4 v0, 0x0

    .line 4
    invoke-static {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->FlateDecode([BZLjava/io/ByteArrayOutputStream;)[B

    move-result-object p0

    return-object p0

    :cond_0
    return-object v0
.end method

.method public static FlateDecode([BZ)[B
    .locals 1

    .line 5
    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    invoke-static {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;->FlateDecode([BZLjava/io/ByteArrayOutputStream;)[B

    move-result-object p0

    return-object p0
.end method

.method private static FlateDecode([BZLjava/io/ByteArrayOutputStream;)[B
    .locals 3

    .line 6
    new-instance v0, Ljava/io/ByteArrayInputStream;

    invoke-direct {v0, p0}, Ljava/io/ByteArrayInputStream;-><init>([B)V

    .line 7
    new-instance p0, Ljava/util/zip/InflaterInputStream;

    invoke-direct {p0, v0}, Ljava/util/zip/InflaterInputStream;-><init>(Ljava/io/InputStream;)V

    if-eqz p1, :cond_0

    const/16 v0, 0xffc

    goto :goto_0

    :cond_0
    const/4 v0, 0x1

    .line 8
    :goto_0
    new-array v0, v0, [B

    .line 9
    :goto_1
    :try_start_0
    invoke-virtual {p0, v0}, Ljava/util/zip/InflaterInputStream;->read([B)I

    move-result v1

    if-ltz v1, :cond_1

    const/4 v2, 0x0

    .line 10
    invoke-virtual {p2, v0, v2, v1}, Ljava/io/ByteArrayOutputStream;->write([BII)V

    goto :goto_1

    .line 11
    :cond_1
    invoke-virtual {p0}, Ljava/util/zip/InflaterInputStream;->close()V

    .line 12
    invoke-virtual {p2}, Ljava/io/ByteArrayOutputStream;->close()V

    .line 13
    invoke-virtual {p2}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p1
    :try_end_0
    .catch Lcom/itextpdf/text/pdf/MemoryLimitsAwareException; {:try_start_0 .. :try_end_0} :catch_7
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_2
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 14
    :try_start_1
    invoke-virtual {p0}, Ljava/util/zip/InflaterInputStream;->close()V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    .line 15
    :catch_0
    :try_start_2
    invoke-virtual {p2}, Ljava/io/ByteArrayOutputStream;->close()V
    :try_end_2
    .catch Ljava/io/IOException; {:try_start_2 .. :try_end_2} :catch_1

    :catch_1
    return-object p1

    :catchall_0
    move-exception p1

    goto :goto_2

    :catch_2
    nop

    if-eqz p1, :cond_2

    const/4 p1, 0x0

    .line 16
    :try_start_3
    invoke-virtual {p0}, Ljava/util/zip/InflaterInputStream;->close()V
    :try_end_3
    .catch Ljava/io/IOException; {:try_start_3 .. :try_end_3} :catch_3

    .line 17
    :catch_3
    :try_start_4
    invoke-virtual {p2}, Ljava/io/ByteArrayOutputStream;->close()V
    :try_end_4
    .catch Ljava/io/IOException; {:try_start_4 .. :try_end_4} :catch_4

    :catch_4
    return-object p1

    .line 18
    :cond_2
    :try_start_5
    invoke-virtual {p2}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p1
    :try_end_5
    .catchall {:try_start_5 .. :try_end_5} :catchall_0

    .line 19
    :try_start_6
    invoke-virtual {p0}, Ljava/util/zip/InflaterInputStream;->close()V
    :try_end_6
    .catch Ljava/io/IOException; {:try_start_6 .. :try_end_6} :catch_5

    .line 20
    :catch_5
    :try_start_7
    invoke-virtual {p2}, Ljava/io/ByteArrayOutputStream;->close()V
    :try_end_7
    .catch Ljava/io/IOException; {:try_start_7 .. :try_end_7} :catch_6

    :catch_6
    return-object p1

    :catch_7
    move-exception p1

    .line 21
    :try_start_8
    throw p1
    :try_end_8
    .catchall {:try_start_8 .. :try_end_8} :catchall_0

    .line 22
    :goto_2
    :try_start_9
    invoke-virtual {p0}, Ljava/util/zip/InflaterInputStream;->close()V
    :try_end_9
    .catch Ljava/io/IOException; {:try_start_9 .. :try_end_9} :catch_8

    .line 23
    :catch_8
    :try_start_a
    invoke-virtual {p2}, Ljava/io/ByteArrayOutputStream;->close()V
    :try_end_a
    .catch Ljava/io/IOException; {:try_start_a .. :try_end_a} :catch_9

    .line 24
    :catch_9
    throw p1
.end method

.method public static LZWDecode([B)[B
    .locals 1

    .line 1
    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->LZWDecode([BLjava/io/ByteArrayOutputStream;)[B

    move-result-object p0

    return-object p0
.end method

.method public static LZWDecode([BLjava/io/ByteArrayOutputStream;)[B
    .locals 1

    .line 2
    new-instance v0, Lcom/itextpdf/text/pdf/LZWDecoder;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/LZWDecoder;-><init>()V

    .line 3
    invoke-virtual {v0, p0, p1}, Lcom/itextpdf/text/pdf/LZWDecoder;->decode([BLjava/io/OutputStream;)V

    .line 4
    invoke-virtual {p1}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p0

    return-object p0
.end method

.method public static synthetic access$200(Lcom/itextpdf/text/pdf/PdfReader;)Z
    .locals 0

    .line 1
    iget-boolean p0, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    return p0
.end method

.method public static synthetic access$300(Lcom/itextpdf/text/pdf/PdfReader;)I
    .locals 0

    .line 1
    iget p0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    return p0
.end method

.method public static synthetic access$302(Lcom/itextpdf/text/pdf/PdfReader;I)I
    .locals 0

    .line 1
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    return p1
.end method

.method private checkPRStreamLength(Lcom/itextpdf/text/pdf/PRStream;)V
    .locals 18

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    .line 1
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->length()J

    move-result-wide v2

    .line 2
    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/PRStream;->getOffset()J

    move-result-wide v4

    .line 3
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    const-string v7, "endstream"

    const/4 v8, 0x0

    const/4 v9, 0x1

    const-wide/16 v10, 0x0

    if-eqz v6, :cond_2

    .line 4
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v12

    const/4 v13, 0x2

    if-ne v12, v13, :cond_2

    .line 5
    check-cast v6, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v6

    int-to-long v12, v6

    add-long v14, v12, v4

    const-wide/16 v16, 0x14

    sub-long v2, v2, v16

    cmp-long v6, v14, v2

    if-lez v6, :cond_0

    goto :goto_0

    .line 6
    :cond_0
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2, v14, v15}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 7
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const/16 v3, 0x14

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->readString(I)Ljava/lang/String;

    move-result-object v2

    const-string v3, "\nendstream"

    .line 8
    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_1

    const-string v3, "\r\nendstream"

    .line 9
    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_1

    const-string v3, "\rendstream"

    .line 10
    invoke-virtual {v2, v3}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v3

    if-nez v3, :cond_1

    .line 11
    invoke-virtual {v2, v7}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_1

    goto :goto_0

    :cond_1
    const/4 v9, 0x0

    goto :goto_0

    :cond_2
    move-wide v12, v10

    :goto_0
    if-eqz v9, :cond_9

    const/16 v2, 0x10

    new-array v3, v2, [B

    .line 12
    iget-object v6, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v6, v4, v5}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 13
    :cond_3
    iget-object v6, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v14

    .line 14
    iget-object v6, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v6, v3, v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->readLineSegment([BZ)Z

    move-result v6

    if-nez v6, :cond_4

    goto :goto_2

    .line 15
    :cond_4
    sget-object v6, Lcom/itextpdf/text/pdf/PdfReader;->endstream:[B

    invoke-static {v3, v6}, Lcom/itextpdf/text/pdf/PdfReader;->equalsn([B[B)Z

    move-result v6

    if-eqz v6, :cond_6

    :cond_5
    :goto_1
    sub-long v12, v14, v4

    goto :goto_2

    .line 16
    :cond_6
    sget-object v6, Lcom/itextpdf/text/pdf/PdfReader;->endobj:[B

    invoke-static {v3, v6}, Lcom/itextpdf/text/pdf/PdfReader;->equalsn([B[B)Z

    move-result v6

    if-eqz v6, :cond_3

    .line 17
    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const-wide/16 v8, 0x10

    sub-long v8, v14, v8

    invoke-virtual {v3, v8, v9}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 18
    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->readString(I)Ljava/lang/String;

    move-result-object v2

    .line 19
    invoke-virtual {v2, v7}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v2

    if-ltz v2, :cond_5

    int-to-long v2, v2

    add-long/2addr v8, v2

    move-wide v14, v8

    goto :goto_1

    .line 20
    :goto_2
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const-wide/16 v3, 0x2

    sub-long v3, v14, v3

    invoke-virtual {v2, v3, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 21
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->read()I

    move-result v2

    const/16 v3, 0xd

    const-wide/16 v4, 0x1

    if-ne v2, v3, :cond_7

    sub-long/2addr v12, v4

    .line 22
    :cond_7
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    sub-long/2addr v14, v4

    invoke-virtual {v2, v14, v15}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 23
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->read()I

    move-result v2

    const/16 v3, 0xa

    if-ne v2, v3, :cond_8

    sub-long/2addr v12, v4

    :cond_8
    cmp-long v2, v12, v10

    if-gez v2, :cond_9

    goto :goto_3

    :cond_9
    move-wide v10, v12

    :goto_3
    long-to-int v2, v10

    .line 24
    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PRStream;->setLength(I)V

    return-void
.end method

.method private convertNamedDestination(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)Z
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            "Ljava/util/HashMap<",
            "Ljava/lang/Object;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;)Z"
        }
    .end annotation

    .line 1
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 2
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial()V

    if-eqz p1, :cond_2

    .line 4
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 5
    move-object v1, p1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->A:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-eqz v1, :cond_2

    .line 6
    iget v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial()V

    .line 8
    move-object v3, v1

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 9
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->S:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfName;

    .line 10
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->GOTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 11
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->D:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    const/4 v6, 0x0

    if-eqz v5, :cond_2

    .line 12
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v7

    if-eqz v7, :cond_0

    goto :goto_0

    .line 13
    :cond_0
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v7

    if-eqz v7, :cond_1

    .line 14
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v5

    goto :goto_0

    :cond_1
    move-object v5, v6

    .line 15
    :goto_0
    invoke-virtual {p2, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/itextpdf/text/pdf/PdfArray;

    if-eqz p2, :cond_2

    .line 16
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->F:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 17
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->NEWWINDOW:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 18
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->GOTO:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 19
    invoke-direct {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    .line 20
    invoke-direct {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    const/4 p1, 0x1

    return p1

    :cond_2
    const/4 p1, 0x0

    return p1
.end method

.method public static decodeBytes([BLcom/itextpdf/text/pdf/PdfDictionary;)[B
    .locals 1

    .line 1
    invoke-static {}, Lcom/itextpdf/text/pdf/FilterHandlers;->getDefaultFilterHandlers()Ljava/util/Map;

    move-result-object v0

    invoke-static {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;->decodeBytes([BLcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/Map;)[B

    move-result-object p0

    return-object p0
.end method

.method public static decodeBytes([BLcom/itextpdf/text/pdf/PdfDictionary;Ljava/util/Map;)[B
    .locals 12
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "([B",
            "Lcom/itextpdf/text/pdf/PdfDictionary;",
            "Ljava/util/Map<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            "Lcom/itextpdf/text/pdf/FilterHandlers$FilterHandler;",
            ">;)[B"
        }
    .end annotation

    .line 2
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 3
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    if-eqz v0, :cond_1

    .line 4
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v2

    if-eqz v2, :cond_0

    .line 5
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 6
    :cond_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 7
    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->getArrayList()Ljava/util/ArrayList;

    move-result-object v1

    .line 8
    :cond_1
    :goto_0
    instance-of v0, p1, Lcom/itextpdf/text/pdf/PRStream;

    const/4 v2, 0x0

    if-eqz v0, :cond_2

    move-object v0, p1

    check-cast v0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRStream;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v3

    if-eqz v3, :cond_2

    .line 9
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRStream;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getMemoryLimitsAwareHandler()Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    move-result-object v0

    goto :goto_1

    :cond_2
    move-object v0, v2

    :goto_1
    const/4 v3, 0x0

    if-eqz v0, :cond_5

    .line 10
    new-instance v4, Ljava/util/HashSet;

    invoke-direct {v4}, Ljava/util/HashSet;-><init>()V

    const/4 v5, 0x0

    .line 11
    :goto_2
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-ge v5, v6, :cond_4

    .line 12
    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PdfName;

    .line 13
    invoke-virtual {v4, v6}, Ljava/util/HashSet;->add(Ljava/lang/Object;)Z

    move-result v6

    if-nez v6, :cond_3

    .line 14
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->beginDecompressedPdfStreamProcessing()Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    goto :goto_3

    :cond_3
    add-int/lit8 v5, v5, 0x1

    goto :goto_2

    .line 15
    :cond_4
    :goto_3
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ne v5, v4, :cond_5

    move-object v0, v2

    .line 16
    :cond_5
    new-instance v4, Ljava/util/ArrayList;

    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 17
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->DECODEPARMS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    if-eqz v5, :cond_6

    .line 18
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v6

    if-nez v6, :cond_7

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v6

    if-nez v6, :cond_7

    .line 19
    :cond_6
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->DP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    :cond_7
    if-eqz v5, :cond_9

    .line 20
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v6

    if-eqz v6, :cond_8

    .line 21
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_4

    .line 22
    :cond_8
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v6

    if-eqz v6, :cond_9

    .line 23
    check-cast v5, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfArray;->getArrayList()Ljava/util/ArrayList;

    move-result-object v4

    :cond_9
    :goto_4
    const/4 v5, 0x0

    .line 24
    :goto_5
    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v6

    if-ge v5, v6, :cond_f

    .line 25
    invoke-virtual {v1, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PdfName;

    .line 26
    invoke-interface {p2, v6}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/FilterHandlers$FilterHandler;

    const/4 v8, 0x1

    if-eqz v7, :cond_e

    .line 27
    invoke-virtual {v4}, Ljava/util/ArrayList;->size()I

    move-result v9

    if-ge v5, v9, :cond_c

    .line 28
    invoke-virtual {v4, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/PdfObject;

    invoke-static {v9}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    .line 29
    instance-of v10, v9, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v10, :cond_a

    .line 30
    check-cast v9, Lcom/itextpdf/text/pdf/PdfDictionary;

    goto :goto_7

    :cond_a
    if-eqz v9, :cond_c

    .line 31
    instance-of v10, v9, Lcom/itextpdf/text/pdf/PdfNull;

    if-nez v10, :cond_c

    instance-of v10, v9, Lcom/itextpdf/text/pdf/PdfLiteral;

    if-eqz v10, :cond_b

    const-string v10, "null"

    .line 32
    invoke-virtual {v10}, Ljava/lang/String;->getBytes()[B

    move-result-object v10

    move-object v11, v9

    check-cast v11, Lcom/itextpdf/text/pdf/PdfLiteral;

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/PdfObject;->getBytes()[B

    move-result-object v11

    invoke-static {v10, v11}, Ljava/util/Arrays;->equals([B[B)Z

    move-result v10

    if-eqz v10, :cond_b

    goto :goto_6

    .line 33
    :cond_b
    new-instance p0, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;

    new-array p1, v8, [Ljava/lang/Object;

    invoke-virtual {v9}, Ljava/lang/Object;->getClass()Ljava/lang/Class;

    move-result-object p2

    invoke-virtual {p2}, Ljava/lang/Class;->toString()Ljava/lang/String;

    move-result-object p2

    aput-object p2, p1, v3

    const-string p2, "the.decode.parameter.type.1.is.not.supported"

    invoke-static {p2, p1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_c
    :goto_6
    move-object v9, v2

    .line 34
    :goto_7
    invoke-interface {v7, p0, v6, v9, p1}, Lcom/itextpdf/text/pdf/FilterHandlers$FilterHandler;->decode([BLcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfDictionary;)[B

    move-result-object p0

    if-eqz v0, :cond_d

    .line 35
    array-length v6, p0

    int-to-long v6, v6

    invoke-virtual {v0, v6, v7}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->considerBytesOccupiedByDecompressedPdfStream(J)Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    :cond_d
    add-int/lit8 v5, v5, 0x1

    goto :goto_5

    .line 36
    :cond_e
    new-instance p0, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;

    new-array p1, v8, [Ljava/lang/Object;

    aput-object v6, p1, v3

    const-string p2, "the.filter.1.is.not.supported"

    invoke-static {p2, p1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    invoke-direct {p0, p1}, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;-><init>(Ljava/lang/String;)V

    throw p0

    :cond_f
    if-eqz v0, :cond_10

    .line 37
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->endDecompressedPdfStreamProcessing()Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    :cond_10
    return-object p0
.end method

.method public static decodePredictor([BLcom/itextpdf/text/pdf/PdfObject;)[B
    .locals 17

    move-object/from16 v0, p0

    if-eqz p1, :cond_13

    .line 1
    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-nez v1, :cond_0

    goto/16 :goto_d

    .line 2
    :cond_0
    move-object/from16 v1, p1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 3
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->PREDICTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_13

    .line 4
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v3

    if-nez v3, :cond_1

    goto/16 :goto_d

    .line 5
    :cond_1
    check-cast v2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    const/16 v3, 0xa

    const/4 v4, 0x2

    if-ge v2, v3, :cond_2

    if-eq v2, v4, :cond_2

    return-object v0

    .line 6
    :cond_2
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->COLUMNS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    const/4 v5, 0x1

    if-eqz v3, :cond_3

    .line 7
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v6

    if-eqz v6, :cond_3

    .line 8
    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v3

    goto :goto_0

    :cond_3
    const/4 v3, 0x1

    .line 9
    :goto_0
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->COLORS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    if-eqz v6, :cond_4

    .line 10
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v7

    if-eqz v7, :cond_4

    .line 11
    check-cast v6, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v6

    goto :goto_1

    :cond_4
    const/4 v6, 0x1

    .line 12
    :goto_1
    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->BITSPERCOMPONENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    const/16 v7, 0x8

    if-eqz v1, :cond_5

    .line 13
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v8

    if-eqz v8, :cond_5

    .line 14
    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    goto :goto_2

    :cond_5
    const/16 v1, 0x8

    .line 15
    :goto_2
    new-instance v8, Ljava/io/DataInputStream;

    new-instance v9, Ljava/io/ByteArrayInputStream;

    invoke-direct {v9, v0}, Ljava/io/ByteArrayInputStream;-><init>([B)V

    invoke-direct {v8, v9}, Ljava/io/DataInputStream;-><init>(Ljava/io/InputStream;)V

    .line 16
    new-instance v9, Ljava/io/ByteArrayOutputStream;

    array-length v10, v0

    invoke-direct {v9, v10}, Ljava/io/ByteArrayOutputStream;-><init>(I)V

    mul-int v10, v6, v1

    .line 17
    div-int/2addr v10, v7

    mul-int v6, v6, v3

    mul-int v6, v6, v1

    add-int/lit8 v6, v6, 0x7

    .line 18
    div-int/2addr v6, v7

    .line 19
    new-array v3, v6, [B

    .line 20
    new-array v11, v6, [B

    const/4 v12, 0x0

    if-ne v2, v4, :cond_8

    if-ne v1, v7, :cond_7

    .line 21
    array-length v1, v0

    div-int/2addr v1, v6

    :goto_3
    if-ge v12, v1, :cond_7

    mul-int v2, v12, v6

    add-int/lit8 v3, v10, 0x0

    :goto_4
    if-ge v3, v6, :cond_6

    add-int v4, v2, v3

    .line 22
    aget-byte v5, v0, v4

    sub-int v7, v4, v10

    aget-byte v7, v0, v7

    add-int/2addr v5, v7

    int-to-byte v5, v5

    aput-byte v5, v0, v4

    add-int/lit8 v3, v3, 0x1

    goto :goto_4

    :cond_6
    add-int/lit8 v12, v12, 0x1

    goto :goto_3

    :cond_7
    return-object v0

    .line 23
    :cond_8
    :goto_5
    :try_start_0
    invoke-virtual {v8}, Ljava/io/DataInputStream;->read()I

    move-result v0

    if-gez v0, :cond_9

    .line 24
    invoke-virtual {v9}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    return-object v0

    .line 25
    :cond_9
    invoke-virtual {v8, v3, v12, v6}, Ljava/io/DataInputStream;->readFully([BII)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_1

    if-eqz v0, :cond_12

    if-eq v0, v5, :cond_11

    if-eq v0, v4, :cond_10

    const/4 v1, 0x3

    if-eq v0, v1, :cond_e

    const/4 v1, 0x4

    if-ne v0, v1, :cond_d

    const/4 v0, 0x0

    :goto_6
    if-ge v0, v10, :cond_a

    .line 26
    aget-byte v1, v3, v0

    aget-byte v2, v11, v0

    add-int/2addr v1, v2

    int-to-byte v1, v1

    aput-byte v1, v3, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_6

    :cond_a
    move v0, v10

    :goto_7
    if-ge v0, v6, :cond_12

    sub-int v1, v0, v10

    .line 27
    aget-byte v2, v3, v1

    and-int/lit16 v2, v2, 0xff

    .line 28
    aget-byte v7, v11, v0

    and-int/lit16 v7, v7, 0xff

    .line 29
    aget-byte v1, v11, v1

    and-int/lit16 v1, v1, 0xff

    add-int v13, v2, v7

    sub-int/2addr v13, v1

    sub-int v14, v13, v2

    .line 30
    invoke-static {v14}, Ljava/lang/Math;->abs(I)I

    move-result v14

    sub-int v15, v13, v7

    .line 31
    invoke-static {v15}, Ljava/lang/Math;->abs(I)I

    move-result v15

    sub-int/2addr v13, v1

    .line 32
    invoke-static {v13}, Ljava/lang/Math;->abs(I)I

    move-result v13

    if-gt v14, v15, :cond_b

    if-gt v14, v13, :cond_b

    goto :goto_8

    :cond_b
    if-gt v15, v13, :cond_c

    move v2, v7

    goto :goto_8

    :cond_c
    move v2, v1

    .line 33
    :goto_8
    aget-byte v1, v3, v0

    int-to-byte v2, v2

    add-int/2addr v1, v2

    int-to-byte v1, v1

    aput-byte v1, v3, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_7

    .line 34
    :cond_d
    new-instance v0, Ljava/lang/RuntimeException;

    new-array v1, v12, [Ljava/lang/Object;

    const-string v2, "png.filter.unknown"

    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_e
    const/4 v0, 0x0

    :goto_9
    if-ge v0, v10, :cond_f

    .line 35
    aget-byte v1, v3, v0

    aget-byte v2, v11, v0

    div-int/2addr v2, v4

    add-int/2addr v2, v1

    int-to-byte v1, v2

    aput-byte v1, v3, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_9

    :cond_f
    move v0, v10

    :goto_a
    if-ge v0, v6, :cond_12

    .line 36
    aget-byte v1, v3, v0

    sub-int v2, v0, v10

    aget-byte v2, v3, v2

    and-int/lit16 v2, v2, 0xff

    aget-byte v7, v11, v0

    and-int/lit16 v7, v7, 0xff

    add-int/2addr v2, v7

    div-int/2addr v2, v4

    add-int/2addr v2, v1

    int-to-byte v1, v2

    aput-byte v1, v3, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_a

    :cond_10
    const/4 v0, 0x0

    :goto_b
    if-ge v0, v6, :cond_12

    .line 37
    aget-byte v1, v3, v0

    aget-byte v2, v11, v0

    add-int/2addr v1, v2

    int-to-byte v1, v1

    aput-byte v1, v3, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_b

    :cond_11
    move v0, v10

    :goto_c
    if-ge v0, v6, :cond_12

    .line 38
    aget-byte v1, v3, v0

    sub-int v2, v0, v10

    aget-byte v2, v3, v2

    add-int/2addr v1, v2

    int-to-byte v1, v1

    aput-byte v1, v3, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_c

    .line 39
    :cond_12
    :try_start_1
    invoke-virtual {v9, v3}, Ljava/io/ByteArrayOutputStream;->write([B)V
    :try_end_1
    .catch Ljava/io/IOException; {:try_start_1 .. :try_end_1} :catch_0

    :catch_0
    move-object/from16 v16, v11

    move-object v11, v3

    move-object/from16 v3, v16

    goto/16 :goto_5

    .line 40
    :catch_1
    invoke-virtual {v9}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    :cond_13
    :goto_d
    return-object v0
.end method

.method public static duplicatePdfDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 3

    if-nez p1, :cond_0

    .line 1
    new-instance p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfDictionary;->size()I

    move-result v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>(I)V

    .line 2
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_1

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    .line 3
    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    .line 4
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2, p2}, Lcom/itextpdf/text/pdf/PdfReader;->duplicatePdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-virtual {p1, v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_0

    :cond_1
    return-object p1
.end method

.method public static duplicatePdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 3

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return-object v0

    .line 1
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v1

    const/4 v2, 0x5

    if-eq v1, v2, :cond_4

    const/4 v2, 0x6

    if-eq v1, v2, :cond_3

    const/4 v2, 0x7

    if-eq v1, v2, :cond_2

    const/16 v0, 0xa

    if-eq v1, v0, :cond_1

    return-object p0

    .line 2
    :cond_1
    check-cast p0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 3
    new-instance v0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getGeneration()I

    move-result p0

    invoke-direct {v0, p1, v1, p0}, Lcom/itextpdf/text/pdf/PRIndirectReference;-><init>(Lcom/itextpdf/text/pdf/PdfReader;II)V

    return-object v0

    .line 4
    :cond_2
    check-cast p0, Lcom/itextpdf/text/pdf/PRStream;

    .line 5
    new-instance v1, Lcom/itextpdf/text/pdf/PRStream;

    invoke-direct {v1, p0, v0, p1}, Lcom/itextpdf/text/pdf/PRStream;-><init>(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfReader;)V

    .line 6
    invoke-static {p0, v1, p1}, Lcom/itextpdf/text/pdf/PdfReader;->duplicatePdfDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfDictionary;

    return-object v1

    .line 7
    :cond_3
    check-cast p0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->duplicatePdfDictionary(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p0

    return-object p0

    .line 8
    :cond_4
    check-cast p0, Lcom/itextpdf/text/pdf/PdfArray;

    .line 9
    new-instance v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;-><init>(I)V

    .line 10
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->listIterator()Ljava/util/ListIterator;

    move-result-object p0

    :goto_0
    invoke-interface {p0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 11
    invoke-interface {p0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfObject;

    invoke-static {v1, p1}, Lcom/itextpdf/text/pdf/PdfReader;->duplicatePdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfReader;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_0

    :cond_5
    return-object v0
.end method

.method private ensureXrefSize(I)V
    .locals 3

    if-nez p1, :cond_0

    return-void

    .line 1
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    if-nez v0, :cond_1

    .line 2
    new-array p1, p1, [J

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    goto :goto_0

    .line 3
    :cond_1
    array-length v1, v0

    if-ge v1, p1, :cond_2

    .line 4
    new-array p1, p1, [J

    .line 5
    array-length v1, v0

    const/4 v2, 0x0

    invoke-static {v0, v2, p1, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    :cond_2
    :goto_0
    return-void
.end method

.method private equalsArray([B[BI)Z
    .locals 4

    const/4 v0, 0x0

    const/4 v1, 0x0

    :goto_0
    if-ge v1, p3, :cond_1

    .line 1
    aget-byte v2, p1, v1

    aget-byte v3, p2, v1

    if-eq v2, v3, :cond_0

    return v0

    :cond_0
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_1
    const/4 p1, 0x1

    return p1
.end method

.method public static equalsn([B[B)Z
    .locals 5

    .line 1
    array-length v0, p1

    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v0, :cond_1

    .line 2
    aget-byte v3, p0, v2

    aget-byte v4, p1, v2

    if-eq v3, v4, :cond_0

    return v1

    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    const/4 p0, 0x1

    return p0
.end method

.method public static existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    if-eqz p0, :cond_1

    .line 2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result p1

    if-nez p1, :cond_0

    goto :goto_0

    .line 3
    :cond_0
    check-cast p0, Lcom/itextpdf/text/pdf/PdfName;

    .line 4
    invoke-virtual {p0, p2}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result p0

    return p0

    :cond_1
    :goto_0
    const/4 p0, 0x0

    return p0
.end method

.method public static getFontName(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;
    .locals 2

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return-object v0

    .line 1
    :cond_0
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    if-eqz p0, :cond_2

    .line 2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v1

    if-nez v1, :cond_1

    goto :goto_0

    .line 3
    :cond_1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object p0

    return-object p0

    :cond_2
    :goto_0
    return-object v0
.end method

.method private static getNameArray(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfArray;
    .locals 2

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return-object v0

    .line 1
    :cond_0
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    if-nez p0, :cond_1

    return-object v0

    .line 2
    :cond_1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v1

    if-eqz v1, :cond_2

    .line 3
    check-cast p0, Lcom/itextpdf/text/pdf/PdfArray;

    return-object p0

    .line 4
    :cond_2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 5
    check-cast p0, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->D:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    if-eqz p0, :cond_3

    .line 6
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v1

    if-eqz v1, :cond_3

    .line 7
    check-cast p0, Lcom/itextpdf/text/pdf/PdfArray;

    return-object p0

    :cond_3
    return-object v0
.end method

.method public static getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;
    .locals 6

    const/4 v0, 0x0

    .line 1
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v0

    const/4 v1, 0x1

    .line 2
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v1

    const/4 v2, 0x2

    .line 3
    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result v2

    const/4 v3, 0x3

    .line 4
    invoke-virtual {p0, v3}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    check-cast p0, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfNumber;->floatValue()F

    move-result p0

    .line 5
    new-instance v3, Lcom/itextpdf/text/Rectangle;

    invoke-static {v0, v2}, Ljava/lang/Math;->min(FF)F

    move-result v4

    invoke-static {v1, p0}, Ljava/lang/Math;->min(FF)F

    move-result v5

    .line 6
    invoke-static {v0, v2}, Ljava/lang/Math;->max(FF)F

    move-result v0

    invoke-static {v1, p0}, Ljava/lang/Math;->max(FF)F

    move-result p0

    invoke-direct {v3, v4, v5, v0, p0}, Lcom/itextpdf/text/Rectangle;-><init>(FFFF)V

    return-object v3
.end method

.method private static getOffsetTokeniser(Lcom/itextpdf/text/io/RandomAccessSource;)Lcom/itextpdf/text/pdf/PRTokeniser;
    .locals 3

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/PRTokeniser;

    new-instance v1, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    invoke-direct {v1, p0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    .line 2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getHeaderOffset()I

    move-result v1

    if-eqz v1, :cond_0

    .line 3
    new-instance v0, Lcom/itextpdf/text/io/WindowRandomAccessSource;

    int-to-long v1, v1

    invoke-direct {v0, p0, v1, v2}, Lcom/itextpdf/text/io/WindowRandomAccessSource;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;J)V

    .line 4
    new-instance p0, Lcom/itextpdf/text/pdf/PRTokeniser;

    new-instance v1, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    move-object v0, p0

    :cond_0
    return-object v0
.end method

.method public static getPageContent(Lcom/itextpdf/text/pdf/PdfDictionary;)[B
    .locals 5

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return-object v0

    .line 20
    :cond_0
    :try_start_0
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    const/4 v1, 0x0

    if-nez p0, :cond_1

    new-array p0, v1, [B

    return-object p0

    .line 21
    :cond_1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v2

    if-eqz v2, :cond_2

    .line 22
    move-object v1, p0

    check-cast v1, Lcom/itextpdf/text/pdf/PRStream;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRStream;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    .line 23
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->reOpen()V

    .line 24
    check-cast p0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 25
    :try_start_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    :catch_0
    return-object p0

    .line 26
    :cond_2
    :try_start_2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v2

    if-eqz v2, :cond_8

    .line 27
    check-cast p0, Lcom/itextpdf/text/pdf/PdfArray;

    .line 28
    new-instance v2, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v2}, Ljava/io/ByteArrayOutputStream;-><init>()V

    .line 29
    :goto_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v1, v3, :cond_6

    .line 30
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_5

    .line 31
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v4

    if-nez v4, :cond_3

    goto :goto_1

    :cond_3
    if-nez v0, :cond_4

    .line 32
    move-object v4, v3

    check-cast v4, Lcom/itextpdf/text/pdf/PRStream;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRStream;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v4

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    .line 33
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->reOpen()V

    .line 34
    :cond_4
    check-cast v3, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v3, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object v3

    .line 35
    invoke-virtual {v2, v3}, Ljava/io/ByteArrayOutputStream;->write([B)V

    .line 36
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    add-int/lit8 v3, v3, -0x1

    if-eq v1, v3, :cond_5

    const/16 v3, 0xa

    .line 37
    invoke-virtual {v2, v3}, Ljava/io/ByteArrayOutputStream;->write(I)V

    :cond_5
    :goto_1
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 38
    :cond_6
    invoke-virtual {v2}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p0
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    if-eqz v0, :cond_7

    .line 39
    :try_start_3
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_1

    :catch_1
    :cond_7
    return-object p0

    :cond_8
    :try_start_4
    new-array p0, v1, [B
    :try_end_4
    .catchall {:try_start_4 .. :try_end_4} :catchall_0

    return-object p0

    :catchall_0
    move-exception p0

    if-eqz v0, :cond_9

    :try_start_5
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_5
    .catch Ljava/lang/Exception; {:try_start_5 .. :try_end_5} :catch_2

    .line 40
    :catch_2
    :cond_9
    throw p0
.end method

.method public static getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 4

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return-object v0

    .line 1
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v1

    if-nez v1, :cond_1

    return-object p0

    .line 2
    :cond_1
    :try_start_0
    check-cast p0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v1

    .line 4
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v2

    iget-boolean v2, v2, Lcom/itextpdf/text/pdf/PdfReader;->appendable:Z

    .line 5
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v3

    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-nez v1, :cond_2

    return-object v0

    :cond_2
    if-eqz v2, :cond_6

    .line 6
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v0

    const/4 v2, 0x1

    if-eq v0, v2, :cond_5

    const/4 v2, 0x4

    if-eq v0, v2, :cond_4

    const/16 v2, 0x8

    if-eq v0, v2, :cond_3

    goto :goto_1

    .line 7
    :cond_3
    new-instance v0, Lcom/itextpdf/text/pdf/PdfNull;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfNull;-><init>()V

    :goto_0
    move-object v1, v0

    goto :goto_1

    .line 8
    :cond_4
    new-instance v0, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->getBytes()[B

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfName;-><init>([B)V

    goto :goto_0

    .line 9
    :cond_5
    new-instance v0, Lcom/itextpdf/text/pdf/PdfBoolean;

    check-cast v1, Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfBoolean;->booleanValue()Z

    move-result v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfBoolean;-><init>(Z)V

    goto :goto_0

    .line 10
    :goto_1
    invoke-virtual {v1, p0}, Lcom/itextpdf/text/pdf/PdfObject;->setIndRef(Lcom/itextpdf/text/pdf/PRIndirectReference;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    :cond_6
    return-object v1

    :catch_0
    move-exception p0

    .line 11
    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method public static getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 2

    if-nez p0, :cond_0

    const/4 p0, 0x0

    return-object p0

    .line 12
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v0

    if-nez v0, :cond_5

    if-eqz p1, :cond_4

    .line 13
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->getIndRef()Lcom/itextpdf/text/pdf/PRIndirectReference;

    move-result-object p1

    if-eqz p1, :cond_4

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->isAppendable()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 14
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v0

    const/4 v1, 0x1

    if-eq v0, v1, :cond_3

    const/4 v1, 0x4

    if-eq v0, v1, :cond_2

    const/16 v1, 0x8

    if-eq v0, v1, :cond_1

    goto :goto_1

    .line 15
    :cond_1
    new-instance p0, Lcom/itextpdf/text/pdf/PdfNull;

    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfNull;-><init>()V

    goto :goto_1

    .line 16
    :cond_2
    new-instance v0, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->getBytes()[B

    move-result-object p0

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/PdfName;-><init>([B)V

    goto :goto_0

    .line 17
    :cond_3
    new-instance v0, Lcom/itextpdf/text/pdf/PdfBoolean;

    check-cast p0, Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfBoolean;->booleanValue()Z

    move-result p0

    invoke-direct {v0, p0}, Lcom/itextpdf/text/pdf/PdfBoolean;-><init>(Z)V

    :goto_0
    move-object p0, v0

    .line 18
    :goto_1
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfObject;->setIndRef(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    :cond_4
    return-object p0

    .line 19
    :cond_5
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p0

    return-object p0
.end method

.method public static getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 1

    .line 1
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 2
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial(Lcom/itextpdf/text/pdf/PdfObject;)V

    return-object v0
.end method

.method public static getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 0

    .line 3
    invoke-static {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 4
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial(Lcom/itextpdf/text/pdf/PdfObject;)V

    return-object p1
.end method

.method public static getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;)[B
    .locals 1

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    .line 4
    :try_start_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->reOpen()V

    .line 5
    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6
    :try_start_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    :catch_0
    return-object p0

    :catchall_0
    move-exception p0

    :try_start_2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 7
    :catch_1
    throw p0
.end method

.method public static getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B
    .locals 0

    .line 1
    invoke-static {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytesRaw(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p1

    .line 2
    invoke-static {p1, p0}, Lcom/itextpdf/text/pdf/PdfReader;->decodeBytes([BLcom/itextpdf/text/pdf/PdfDictionary;)[B

    move-result-object p0

    return-object p0
.end method

.method public static getStreamBytesRaw(Lcom/itextpdf/text/pdf/PRStream;)[B
    .locals 1

    .line 19
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    .line 20
    :try_start_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->reOpen()V

    .line 21
    invoke-static {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytesRaw(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 22
    :try_start_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    :catch_0
    return-object p0

    :catchall_0
    move-exception p0

    :try_start_2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 23
    :catch_1
    throw p0
.end method

.method public static getStreamBytesRaw(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B
    .locals 6

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v0

    .line 2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getOffset()J

    move-result-wide v1

    const-wide/16 v3, 0x0

    cmp-long v5, v1, v3

    if-gez v5, :cond_0

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getBytes()[B

    move-result-object p0

    goto/16 :goto_3

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getLength()I

    move-result v1

    new-array v1, v1, [B

    .line 5
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getOffset()J

    move-result-wide v2

    invoke-virtual {p1, v2, v3}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->seek(J)V

    .line 6
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->readFully([B)V

    .line 7
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getDecrypt()Lcom/itextpdf/text/pdf/PdfEncryption;

    move-result-object p1

    if-eqz p1, :cond_5

    .line 8
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 9
    new-instance v2, Ljava/util/ArrayList;

    invoke-direct {v2}, Ljava/util/ArrayList;-><init>()V

    if-eqz v0, :cond_2

    .line 10
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 11
    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_0

    .line 12
    :cond_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v3

    if-eqz v3, :cond_2

    .line 13
    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->getArrayList()Ljava/util/ArrayList;

    move-result-object v2

    :cond_2
    :goto_0
    const/4 v0, 0x0

    const/4 v3, 0x0

    .line 14
    :goto_1
    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v4

    if-ge v3, v4, :cond_4

    .line 15
    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfObject;

    invoke-static {v4}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    if-eqz v4, :cond_3

    .line 16
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v4

    const-string v5, "/Crypt"

    invoke-virtual {v4, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_3

    const/4 v0, 0x1

    goto :goto_2

    :cond_3
    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    :cond_4
    :goto_2
    if-nez v0, :cond_5

    .line 17
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getObjNum()I

    move-result v0

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRStream;->getObjGen()I

    move-result p0

    invoke-virtual {p1, v0, p0}, Lcom/itextpdf/text/pdf/PdfEncryption;->setHashKey(II)V

    .line 18
    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfEncryption;->decryptByteArray([B)[B

    move-result-object p0

    goto :goto_3

    :cond_5
    move-object p0, v1

    :goto_3
    return-object p0
.end method

.method public static getSubsetPrefix(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;
    .locals 5

    const/4 v0, 0x0

    if-nez p0, :cond_0

    return-object v0

    .line 1
    :cond_0
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getFontName(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;

    move-result-object p0

    if-nez p0, :cond_1

    return-object v0

    .line 2
    :cond_1
    invoke-virtual {p0}, Ljava/lang/String;->length()I

    move-result v1

    const/16 v2, 0x8

    if-lt v1, v2, :cond_6

    const/4 v1, 0x6

    invoke-virtual {p0, v1}, Ljava/lang/String;->charAt(I)C

    move-result v2

    const/16 v3, 0x2b

    if-eq v2, v3, :cond_2

    goto :goto_2

    :cond_2
    const/4 v2, 0x0

    :goto_0
    if-ge v2, v1, :cond_5

    .line 3
    invoke-virtual {p0, v2}, Ljava/lang/String;->charAt(I)C

    move-result v3

    const/16 v4, 0x41

    if-lt v3, v4, :cond_4

    const/16 v4, 0x5a

    if-le v3, v4, :cond_3

    goto :goto_1

    :cond_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_4
    :goto_1
    return-object v0

    :cond_5
    return-object p0

    :cond_6
    :goto_2
    return-object v0
.end method

.method private iterateBookmarks(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            "Ljava/util/HashMap<",
            "Ljava/lang/Object;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;)V"
        }
    .end annotation

    :goto_0
    if-eqz p1, :cond_1

    .line 1
    invoke-direct {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;->replaceNamedDestination(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)Z

    .line 2
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 3
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FIRST:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 4
    invoke-direct {p0, v0, p2}, Lcom/itextpdf/text/pdf/PdfReader;->iterateBookmarks(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)V

    .line 5
    :cond_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->NEXT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    goto :goto_0

    :cond_1
    return-void
.end method

.method public static killIndirect(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 4

    const/4 v0, 0x0

    if-eqz p0, :cond_2

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isNull()Z

    move-result v1

    if-eqz v1, :cond_0

    goto :goto_0

    .line 2
    :cond_0
    invoke-static {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 4
    check-cast p0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 5
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v2

    .line 6
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result p0

    .line 7
    iget-object v3, v2, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v3, p0, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 8
    iget-boolean v0, v2, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-eqz v0, :cond_1

    .line 9
    iget-object v0, v2, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    mul-int/lit8 p0, p0, 0x2

    const-wide/16 v2, -0x1

    aput-wide v2, v0, p0

    :cond_1
    return-object v1

    :cond_2
    :goto_0
    return-object v0
.end method

.method private readDecryptedDocObj()V
    .locals 19

    move-object/from16 v1, p0

    .line 1
    iget-boolean v0, v1, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    if-eqz v0, :cond_0

    return-void

    .line 2
    :cond_0
    iget-object v0, v1, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ENCRYPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-eqz v0, :cond_3c

    .line 3
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v2

    const-string v3, "null"

    invoke-virtual {v2, v3}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_1

    goto/16 :goto_12

    :cond_1
    const/4 v2, 0x1

    .line 4
    iput-boolean v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->encryptionError:Z

    .line 5
    iput-boolean v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    .line 6
    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 7
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->CF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    if-eqz v5, :cond_2

    .line 8
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->STDCF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    if-eqz v5, :cond_2

    .line 9
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->AUTHEVENT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsName(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v5

    if-eqz v5, :cond_2

    .line 10
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->EFOPEN:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfName;->compareTo(Lcom/itextpdf/text/pdf/PdfName;)I

    move-result v5

    if-nez v5, :cond_2

    iget-boolean v5, v1, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    if-nez v5, :cond_2

    return-void

    .line 11
    :cond_2
    iget-object v5, v1, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->ID:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v5

    const/4 v7, 0x0

    if-eqz v5, :cond_3

    .line 12
    invoke-virtual {v5, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    .line 13
    iget-object v9, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v9, v8}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 14
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v8

    .line 15
    invoke-static {v8}, Lcom/itextpdf/text/DocWriter;->getISOBytes(Ljava/lang/String;)[B

    move-result-object v8

    .line 16
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v9

    if-le v9, v2, :cond_4

    .line 17
    iget-object v9, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v5, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-virtual {v9, v5}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    goto :goto_0

    :cond_3
    const/4 v8, 0x0

    :cond_4
    :goto_0
    if-nez v8, :cond_5

    new-array v8, v7, [B

    .line 18
    :cond_5
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->FILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    .line 19
    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->STANDARD:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v9}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    const-string v10, "no.compatible.encryption.found"

    const-string v11, "cf.not.found.encryption"

    const-string v12, "false"

    const-string v15, "illegal.length.value"

    const/4 v13, 0x2

    if-eqz v9, :cond_17

    .line 20
    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->U:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v18

    .line 21
    iget-object v7, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    invoke-virtual {v7, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 22
    invoke-static/range {v18 .. v18}, Lcom/itextpdf/text/DocWriter;->getISOBytes(Ljava/lang/String;)[B

    move-result-object v7

    .line 23
    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->O:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v18

    invoke-virtual/range {v18 .. v18}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v18

    .line 24
    iget-object v14, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    invoke-virtual {v14, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 25
    invoke-static/range {v18 .. v18}, Lcom/itextpdf/text/DocWriter;->getISOBytes(Ljava/lang/String;)[B

    move-result-object v9

    .line 26
    sget-object v14, Lcom/itextpdf/text/pdf/PdfName;->OE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v14}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v18

    if-eqz v18, :cond_6

    .line 27
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v3, v14}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v14

    invoke-virtual {v2, v14}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 28
    :cond_6
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->UE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v14

    if-eqz v14, :cond_7

    .line 29
    iget-object v14, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-virtual {v14, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 30
    :cond_7
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->PERMS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v14

    if-eqz v14, :cond_8

    .line 31
    iget-object v14, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-virtual {v14, v2}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 32
    :cond_8
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->P:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    .line 33
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v14

    if-eqz v14, :cond_16

    .line 34
    check-cast v2, Lcom/itextpdf/text/pdf/PdfNumber;

    move-object v14, v7

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->longValue()J

    move-result-wide v6

    iput-wide v6, v1, Lcom/itextpdf/text/pdf/PdfReader;->pValue:J

    .line 35
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->R:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    .line 36
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v6

    if-eqz v6, :cond_15

    .line 37
    check-cast v2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    iput v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    if-eq v2, v13, :cond_14

    const/4 v6, 0x3

    if-eq v2, v6, :cond_11

    const/4 v6, 0x4

    if-eq v2, v6, :cond_b

    const/4 v6, 0x5

    if-ne v2, v6, :cond_a

    .line 38
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ENCRYPTMETADATA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_9

    .line 39
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    const/16 v2, 0xb

    move-object/from16 v16, v9

    move-object v7, v14

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/16 v6, 0xb

    goto/16 :goto_c

    :cond_9
    move-object/from16 v16, v9

    move-object v7, v14

    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x3

    goto/16 :goto_c

    .line 40
    :cond_a
    new-instance v0, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;

    iget v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    const-string v3, "unknown.encryption.type.r.eq.1"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 41
    :cond_b
    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v2, :cond_10

    .line 42
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->STDCF:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v2, :cond_f

    .line 43
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->V2:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->CFM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-virtual {v4, v7}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_c

    const/4 v13, 0x1

    goto :goto_1

    .line 44
    :cond_c
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->AESV2:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    invoke-virtual {v4, v2}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_e

    .line 45
    :goto_1
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ENCRYPTMETADATA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_d

    .line 46
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v2, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_d

    or-int/lit8 v2, v13, 0x8

    move v6, v2

    move-object/from16 v16, v9

    goto :goto_2

    :cond_d
    move-object/from16 v16, v9

    move v6, v13

    :goto_2
    move-object v7, v14

    const/4 v2, 0x0

    const/4 v4, 0x0

    goto/16 :goto_c

    .line 47
    :cond_e
    new-instance v0, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v10, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_f
    const/4 v2, 0x0

    .line 48
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "stdcf.not.found.encryption"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_10
    const/4 v2, 0x0

    .line 49
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v11, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 50
    :cond_11
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    .line 51
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v4

    if-eqz v4, :cond_13

    .line 52
    check-cast v2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    const/16 v4, 0x80

    if-gt v2, v4, :cond_12

    const/16 v4, 0x28

    if-lt v2, v4, :cond_12

    .line 53
    rem-int/lit8 v4, v2, 0x8

    if-nez v4, :cond_12

    move-object/from16 v16, v9

    move-object v7, v14

    const/4 v4, 0x0

    const/4 v6, 0x1

    goto/16 :goto_c

    .line 54
    :cond_12
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v15, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_13
    const/4 v2, 0x0

    .line 55
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v15, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_14
    const/4 v2, 0x0

    move-object/from16 v16, v9

    move-object v7, v14

    const/4 v4, 0x0

    const/4 v6, 0x0

    goto/16 :goto_c

    :cond_15
    const/4 v2, 0x0

    .line 56
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "illegal.r.value"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_16
    const/4 v2, 0x0

    .line 57
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "illegal.p.value"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 58
    :cond_17
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->PUBSEC:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2f

    .line 59
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->V:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    .line 60
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v6

    if-eqz v6, :cond_2e

    .line 61
    check-cast v2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    const/4 v6, 0x1

    if-eq v2, v6, :cond_23

    if-eq v2, v13, :cond_20

    const/4 v6, 0x4

    if-eq v2, v6, :cond_19

    const/4 v6, 0x5

    if-ne v2, v6, :cond_18

    goto :goto_3

    .line 62
    :cond_18
    new-instance v0, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;

    const-string v3, "unknown.encryption.type.v.eq.1"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 63
    :cond_19
    :goto_3
    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v2, :cond_1f

    .line 64
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->DEFAULTCRYPTFILTER:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v2, :cond_1e

    .line 65
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->V2:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->CFM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-virtual {v4, v7}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1a

    const/4 v4, 0x1

    :goto_4
    const/16 v17, 0x80

    goto :goto_5

    .line 66
    :cond_1a
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->AESV2:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-virtual {v4, v7}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1b

    const/4 v4, 0x2

    goto :goto_4

    .line 67
    :cond_1b
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->AESV3:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    invoke-virtual {v4, v6}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_1d

    const/16 v4, 0x100

    const/4 v4, 0x3

    const/16 v17, 0x100

    .line 68
    :goto_5
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->ENCRYPTMETADATA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    if-eqz v6, :cond_1c

    .line 69
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v6, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_1c

    or-int/lit8 v4, v4, 0x8

    .line 70
    :cond_1c
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->RECIPIENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    goto/16 :goto_6

    .line 71
    :cond_1d
    new-instance v0, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v10, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1e
    const/4 v2, 0x0

    .line 72
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "defaultcryptfilter.not.found.encryption"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_1f
    const/4 v2, 0x0

    .line 73
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v11, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 74
    :cond_20
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    .line 75
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v4

    if-eqz v4, :cond_22

    .line 76
    check-cast v2, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v2

    const/16 v4, 0x80

    if-gt v2, v4, :cond_21

    const/16 v4, 0x28

    if-lt v2, v4, :cond_21

    .line 77
    rem-int/lit8 v4, v2, 0x8

    if-nez v4, :cond_21

    .line 78
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->RECIPIENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfArray;

    move/from16 v17, v2

    move-object v2, v4

    const/4 v4, 0x1

    goto :goto_6

    .line 79
    :cond_21
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v15, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_22
    const/4 v2, 0x0

    .line 80
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v2, v2, [Ljava/lang/Object;

    invoke-static {v15, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_23
    const/16 v4, 0x28

    .line 81
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->RECIPIENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v4, 0x0

    const/16 v17, 0x28

    .line 82
    :goto_6
    :try_start_0
    new-instance v6, Lorg/bouncycastle/cert/X509CertificateHolder;

    iget-object v7, v1, Lcom/itextpdf/text/pdf/PdfReader;->certificate:Ljava/security/cert/Certificate;

    invoke-virtual {v7}, Ljava/security/cert/Certificate;->getEncoded()[B

    move-result-object v7

    invoke-direct {v6, v7}, Lorg/bouncycastle/cert/X509CertificateHolder;-><init>([B)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_3

    .line 83
    iget-object v7, v1, Lcom/itextpdf/text/pdf/PdfReader;->externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

    if-nez v7, :cond_26

    const/4 v7, 0x0

    const/4 v9, 0x0

    const/4 v10, 0x0

    .line 84
    :goto_7
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v11

    if-ge v7, v11, :cond_29

    .line 85
    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v11

    .line 86
    iget-object v12, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v12, v11}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 87
    :try_start_1
    new-instance v12, Lorg/bouncycastle/cms/CMSEnvelopedData;

    invoke-virtual {v11}, Lcom/itextpdf/text/pdf/PdfObject;->getBytes()[B

    move-result-object v11

    invoke-direct {v12, v11}, Lorg/bouncycastle/cms/CMSEnvelopedData;-><init>([B)V

    .line 88
    invoke-virtual {v12}, Lorg/bouncycastle/cms/CMSEnvelopedData;->getRecipientInfos()Lorg/bouncycastle/cms/RecipientInformationStore;

    move-result-object v11

    invoke-virtual {v11}, Lorg/bouncycastle/cms/RecipientInformationStore;->getRecipients()Ljava/util/Collection;

    move-result-object v11

    invoke-interface {v11}, Ljava/util/Collection;->iterator()Ljava/util/Iterator;

    move-result-object v11

    .line 89
    :cond_24
    :goto_8
    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z

    move-result v12

    if-eqz v12, :cond_25

    .line 90
    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v12

    check-cast v12, Lorg/bouncycastle/cms/RecipientInformation;

    .line 91
    invoke-virtual {v12}, Lorg/bouncycastle/cms/RecipientInformation;->getRID()Lorg/bouncycastle/cms/RecipientId;

    move-result-object v14

    invoke-interface {v14, v6}, Lorg/bouncycastle/util/Selector;->match(Ljava/lang/Object;)Z

    move-result v14

    if-eqz v14, :cond_24

    if-nez v9, :cond_24

    .line 92
    iget-object v9, v1, Lcom/itextpdf/text/pdf/PdfReader;->certificateKey:Ljava/security/Key;

    check-cast v9, Ljava/security/PrivateKey;

    iget-object v10, v1, Lcom/itextpdf/text/pdf/PdfReader;->certificateKeyProvider:Ljava/lang/String;

    invoke-static {v12, v9, v10}, Lcom/itextpdf/text/pdf/PdfEncryptor;->getContent(Lorg/bouncycastle/cms/RecipientInformation;Ljava/security/PrivateKey;Ljava/lang/String;)[B

    move-result-object v9
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    move-object v10, v9

    const/4 v9, 0x1

    goto :goto_8

    :cond_25
    add-int/lit8 v7, v7, 0x1

    goto :goto_7

    :catch_0
    move-exception v0

    .line 93
    new-instance v2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v2

    :cond_26
    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v10, 0x0

    .line 94
    :goto_9
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v9

    if-ge v7, v9, :cond_28

    .line 95
    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    .line 96
    iget-object v11, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v11, v9}, Ljava/util/ArrayList;->remove(Ljava/lang/Object;)Z

    .line 97
    :try_start_2
    new-instance v11, Lorg/bouncycastle/cms/CMSEnvelopedData;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/PdfObject;->getBytes()[B

    move-result-object v9

    invoke-direct {v11, v9}, Lorg/bouncycastle/cms/CMSEnvelopedData;-><init>([B)V

    .line 98
    invoke-virtual {v11}, Lorg/bouncycastle/cms/CMSEnvelopedData;->getRecipientInfos()Lorg/bouncycastle/cms/RecipientInformationStore;

    move-result-object v9

    iget-object v11, v1, Lcom/itextpdf/text/pdf/PdfReader;->externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

    invoke-interface {v11}, Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;->getCmsRecipientId()Lorg/bouncycastle/cms/RecipientId;

    move-result-object v11

    invoke-virtual {v9, v11}, Lorg/bouncycastle/cms/RecipientInformationStore;->get(Lorg/bouncycastle/cms/RecipientId;)Lorg/bouncycastle/cms/RecipientInformation;

    move-result-object v9

    if-eqz v9, :cond_27

    .line 99
    iget-object v6, v1, Lcom/itextpdf/text/pdf/PdfReader;->externalDecryptionProcess:Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;

    .line 100
    invoke-interface {v6}, Lcom/itextpdf/text/pdf/security/ExternalDecryptionProcess;->getCmsRecipient()Lorg/bouncycastle/cms/Recipient;

    move-result-object v6

    invoke-virtual {v9, v6}, Lorg/bouncycastle/cms/RecipientInformation;->getContent(Lorg/bouncycastle/cms/Recipient;)[B

    move-result-object v10
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    const/4 v6, 0x1

    :cond_27
    add-int/lit8 v7, v7, 0x1

    goto :goto_9

    :catch_1
    move-exception v0

    .line 101
    new-instance v2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v2

    :cond_28
    move v9, v6

    :cond_29
    if-eqz v9, :cond_2d

    if-eqz v10, :cond_2d

    and-int/lit8 v6, v4, 0x7

    const/4 v7, 0x3

    if-ne v6, v7, :cond_2a

    :try_start_3
    const-string v6, "SHA-256"

    .line 102
    invoke-static {v6}, Ljava/security/MessageDigest;->getInstance(Ljava/lang/String;)Ljava/security/MessageDigest;

    move-result-object v6

    goto :goto_a

    :cond_2a
    const-string v6, "SHA-1"

    .line 103
    invoke-static {v6}, Ljava/security/MessageDigest;->getInstance(Ljava/lang/String;)Ljava/security/MessageDigest;

    move-result-object v6

    :goto_a
    const/16 v7, 0x14

    const/4 v9, 0x0

    .line 104
    invoke-virtual {v6, v10, v9, v7}, Ljava/security/MessageDigest;->update([BII)V

    const/4 v7, 0x0

    .line 105
    :goto_b
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v9

    if-ge v7, v9, :cond_2b

    .line 106
    invoke-virtual {v2, v7}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/PdfObject;->getBytes()[B

    move-result-object v9

    .line 107
    invoke-virtual {v6, v9}, Ljava/security/MessageDigest;->update([B)V

    add-int/lit8 v7, v7, 0x1

    goto :goto_b

    :cond_2b
    and-int/lit8 v2, v4, 0x8

    if-eqz v2, :cond_2c

    const/4 v2, 0x4

    new-array v7, v2, [B

    const/4 v2, -0x1

    const/4 v9, 0x0

    aput-byte v2, v7, v9

    const/4 v9, 0x1

    aput-byte v2, v7, v9

    aput-byte v2, v7, v13

    const/4 v9, 0x3

    aput-byte v2, v7, v9

    .line 108
    invoke-virtual {v6, v7}, Ljava/security/MessageDigest;->update([B)V

    .line 109
    :cond_2c
    invoke-virtual {v6}, Ljava/security/MessageDigest;->digest()[B

    move-result-object v2
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2

    move v6, v4

    const/4 v7, 0x0

    const/16 v16, 0x0

    move-object v4, v2

    move/from16 v2, v17

    goto :goto_c

    :catch_2
    move-exception v0

    .line 110
    new-instance v2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v2

    .line 111
    :cond_2d
    new-instance v0, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "bad.certificate.and.key"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/UnsupportedPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :catch_3
    move-exception v0

    .line 112
    new-instance v2, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v2

    .line 113
    :cond_2e
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "illegal.v.value"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_2f
    const/4 v2, 0x0

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/16 v16, 0x0

    .line 114
    :goto_c
    new-instance v9, Lcom/itextpdf/text/pdf/PdfEncryption;

    invoke-direct {v9}, Lcom/itextpdf/text/pdf/PdfEncryption;-><init>()V

    iput-object v9, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    .line 115
    invoke-virtual {v9, v6, v2}, Lcom/itextpdf/text/pdf/PdfEncryption;->setCryptoMode(II)V

    .line 116
    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->STANDARD:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v9}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_37

    .line 117
    iget v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    const/4 v4, 0x5

    if-ne v2, v4, :cond_30

    .line 118
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iget-object v4, v1, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    invoke-virtual {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfEncryption;->readKey(Lcom/itextpdf/text/pdf/PdfDictionary;[B)Z

    move-result v2

    iput-boolean v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    .line 119
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iput-object v8, v2, Lcom/itextpdf/text/pdf/PdfEncryption;->documentID:[B

    .line 120
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfEncryption;->getPermissions()J

    move-result-wide v2

    iput-wide v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->pValue:J

    goto/16 :goto_10

    .line 121
    :cond_30
    iget-object v9, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iget-object v11, v1, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    iget-wide v14, v1, Lcom/itextpdf/text/pdf/PdfReader;->pValue:J

    move-object v10, v8

    move-object v12, v7

    move-object/from16 v13, v16

    invoke-virtual/range {v9 .. v15}, Lcom/itextpdf/text/pdf/PdfEncryption;->setupByOwnerPassword([B[B[B[BJ)V

    .line 122
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfEncryption;->userKey:[B

    iget v3, v1, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    const/16 v4, 0x20

    const/16 v5, 0x10

    const/4 v6, 0x3

    if-eq v3, v6, :cond_32

    const/4 v6, 0x4

    if-ne v3, v6, :cond_31

    goto :goto_d

    :cond_31
    const/16 v3, 0x20

    goto :goto_e

    :cond_32
    :goto_d
    const/16 v3, 0x10

    :goto_e
    invoke-direct {v1, v7, v2, v3}, Lcom/itextpdf/text/pdf/PdfReader;->equalsArray([B[BI)Z

    move-result v2

    if-nez v2, :cond_36

    .line 123
    iget-object v9, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iget-object v11, v1, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    iget-wide v13, v1, Lcom/itextpdf/text/pdf/PdfReader;->pValue:J

    move-object v10, v8

    move-object/from16 v12, v16

    invoke-virtual/range {v9 .. v14}, Lcom/itextpdf/text/pdf/PdfEncryption;->setupByUserPassword([B[B[BJ)V

    .line 124
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iget-object v2, v2, Lcom/itextpdf/text/pdf/PdfEncryption;->userKey:[B

    iget v3, v1, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    const/4 v6, 0x3

    if-eq v3, v6, :cond_33

    const/4 v6, 0x4

    if-ne v3, v6, :cond_34

    :cond_33
    const/16 v4, 0x10

    :cond_34
    invoke-direct {v1, v7, v2, v4}, Lcom/itextpdf/text/pdf/PdfReader;->equalsArray([B[BI)Z

    move-result v2

    if-eqz v2, :cond_35

    goto :goto_10

    .line 125
    :cond_35
    new-instance v0, Lcom/itextpdf/text/exceptions/BadPasswordException;

    const/4 v2, 0x0

    new-array v2, v2, [Ljava/lang/Object;

    const-string v3, "bad.user.password"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-direct {v0, v2}, Lcom/itextpdf/text/exceptions/BadPasswordException;-><init>(Ljava/lang/String;)V

    throw v0

    :cond_36
    const/4 v2, 0x1

    .line 126
    iput-boolean v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    goto :goto_10

    .line 127
    :cond_37
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->PUBSEC:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v3}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_39

    .line 128
    iget-object v3, v1, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iput-object v8, v3, Lcom/itextpdf/text/pdf/PdfEncryption;->documentID:[B

    and-int/lit8 v5, v6, 0x7

    const/4 v6, 0x3

    if-ne v5, v6, :cond_38

    .line 129
    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfEncryption;->setKey([B)V

    goto :goto_f

    .line 130
    :cond_38
    invoke-virtual {v3, v4, v2}, Lcom/itextpdf/text/pdf/PdfEncryption;->setupByEncryptionKey([BI)V

    :goto_f
    const/4 v2, 0x1

    .line 131
    iput-boolean v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    :cond_39
    :goto_10
    const/4 v2, 0x0

    .line 132
    :goto_11
    iget-object v3, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v2, v3, :cond_3a

    .line 133
    iget-object v3, v1, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfString;

    .line 134
    invoke-virtual {v3, v1}, Lcom/itextpdf/text/pdf/PdfString;->decrypt(Lcom/itextpdf/text/pdf/PdfReader;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_11

    .line 135
    :cond_3a
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v2

    if-eqz v2, :cond_3b

    .line 136
    check-cast v0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    iput-object v0, v1, Lcom/itextpdf/text/pdf/PdfReader;->cryptoRef:Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 137
    iget-object v2, v1, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v0

    const/4 v3, 0x0

    invoke-virtual {v2, v0, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    :cond_3b
    const/4 v0, 0x0

    .line 138
    iput-boolean v0, v1, Lcom/itextpdf/text/pdf/PdfReader;->encryptionError:Z

    :cond_3c
    :goto_12
    return-void
.end method

.method public static releaseLastXrefPartial(Lcom/itextpdf/text/pdf/PdfObject;)V
    .locals 4

    if-nez p0, :cond_0

    return-void

    .line 4
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v0

    if-nez v0, :cond_1

    return-void

    .line 5
    :cond_1
    instance-of v0, p0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    if-nez v0, :cond_2

    return-void

    .line 6
    :cond_2
    check-cast p0, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PRIndirectReference;->getReader()Lcom/itextpdf/text/pdf/PdfReader;

    move-result-object v0

    .line 8
    iget-boolean v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    const/4 v2, -0x1

    if-eqz v1, :cond_3

    iget v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    if-eq v1, v2, :cond_3

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result p0

    if-ne v1, p0, :cond_3

    .line 9
    iget-object p0, v0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    iget v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    const/4 v3, 0x0

    invoke-virtual {p0, v1, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 10
    :cond_3
    iput v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    return-void
.end method

.method private replaceNamedDestination(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)Z
    .locals 9
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            "Ljava/util/HashMap<",
            "Ljava/lang/Object;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;)Z"
        }
    .end annotation

    .line 1
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 2
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial()V

    if-eqz p1, :cond_5

    .line 4
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v1

    if-eqz v1, :cond_5

    .line 5
    move-object v1, p1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->DEST:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    const/4 v4, 0x0

    const/4 v5, 0x1

    if-eqz v3, :cond_2

    .line 6
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v6

    if-eqz v6, :cond_0

    goto :goto_0

    .line 7
    :cond_0
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v6

    if-eqz v6, :cond_1

    .line 8
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v3

    goto :goto_0

    :cond_1
    move-object v3, v4

    .line 9
    :goto_0
    invoke-virtual {p2, v3}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/itextpdf/text/pdf/PdfArray;

    if-eqz p2, :cond_5

    .line 10
    invoke-virtual {v1, v2, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 11
    invoke-direct {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    return v5

    .line 12
    :cond_2
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->A:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-eqz v1, :cond_5

    .line 13
    iget v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 14
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial()V

    .line 15
    move-object v3, v1

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 16
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->S:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    invoke-static {v6}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PdfName;

    .line 17
    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->GOTO:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v7, v6}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_5

    .line 18
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->D:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    invoke-static {v7}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    if-eqz v7, :cond_4

    .line 19
    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfObject;->isName()Z

    move-result v8

    if-eqz v8, :cond_3

    move-object v4, v7

    goto :goto_1

    .line 20
    :cond_3
    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v8

    if-eqz v8, :cond_4

    .line 21
    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v4

    .line 22
    :cond_4
    :goto_1
    invoke-virtual {p2, v4}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p2

    check-cast p2, Lcom/itextpdf/text/pdf/PdfArray;

    if-eqz p2, :cond_5

    .line 23
    invoke-virtual {v3, v6, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 24
    invoke-direct {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    .line 25
    invoke-direct {p0, v0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    return v5

    :cond_5
    const/4 p1, 0x0

    return p1
.end method

.method private setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-eqz v0, :cond_1

    if-gez p1, :cond_0

    goto :goto_0

    .line 2
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0, p1, p2}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    :cond_1
    :goto_0
    return-void
.end method


# virtual methods
.method public addPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PRIndirectReference;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 2
    new-instance p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    invoke-direct {p1, p0, v0}, Lcom/itextpdf/text/pdf/PRIndirectReference;-><init>(Lcom/itextpdf/text/pdf/PdfReader;I)V

    return-object p1
.end method

.method public addViewerPreference(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->viewerPreferences:Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    invoke-virtual {v0, p1, p2}, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;->addViewerPreference(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 2
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->viewerPreferences:Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->setViewerPreferences(Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;)V

    return-void
.end method

.method public close()V
    .locals 2

    .line 1
    :try_start_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->close()V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    return-void

    :catch_0
    move-exception v0

    .line 2
    new-instance v1, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v1
.end method

.method public computeUserPassword()[B
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    if-eqz v0, :cond_1

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    if-nez v0, :cond_0

    goto :goto_0

    .line 2
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->password:[B

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfEncryption;->computeUserPassword([B)[B

    move-result-object v0

    return-object v0

    :cond_1
    :goto_0
    const/4 v0, 0x0

    return-object v0
.end method

.method public consolidateNamedDestinations()V
    .locals 10

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations:Z

    if-eqz v0, :cond_0

    return-void

    :cond_0
    const/4 v0, 0x1

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->consolidateNamedDestinations:Z

    .line 3
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getNamedDestination(Z)Ljava/util/HashMap;

    move-result-object v1

    .line 4
    invoke-virtual {v1}, Ljava/util/HashMap;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_1

    return-void

    :cond_1
    const/4 v2, 0x1

    .line 5
    :goto_0
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->size()I

    move-result v3

    if-gt v2, v3, :cond_8

    .line 6
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    .line 7
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfArray;

    .line 8
    iget v5, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 9
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial()V

    if-nez v4, :cond_2

    .line 10
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    goto :goto_2

    :cond_2
    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 11
    :goto_1
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v8

    if-ge v6, v8, :cond_4

    .line 12
    invoke-virtual {v4, v6}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    .line 13
    invoke-direct {p0, v8, v1}, Lcom/itextpdf/text/pdf/PdfReader;->replaceNamedDestination(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)Z

    move-result v9

    if-eqz v9, :cond_3

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v8

    if-nez v8, :cond_3

    const/4 v7, 0x1

    :cond_3
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    :cond_4
    if-eqz v7, :cond_5

    .line 14
    invoke-direct {p0, v5, v4}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    :cond_5
    if-eqz v7, :cond_6

    .line 15
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v3

    if-eqz v3, :cond_7

    .line 16
    :cond_6
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    :cond_7
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 17
    :cond_8
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->OUTLINES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v0, :cond_9

    return-void

    .line 18
    :cond_9
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->FIRST:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-direct {p0, v0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->iterateBookmarks(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)V

    return-void
.end method

.method public createFakeFontSubsets()I
    .locals 7

    const/4 v0, 0x1

    const/4 v1, 0x0

    .line 1
    :goto_0
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v0, v2, :cond_8

    .line 2
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v2

    if-eqz v2, :cond_7

    .line 3
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v3

    if-nez v3, :cond_0

    goto/16 :goto_1

    .line 4
    :cond_0
    check-cast v2, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 5
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v3

    if-nez v3, :cond_1

    goto/16 :goto_1

    .line 6
    :cond_1
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->TYPE1:Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v4

    if-nez v4, :cond_2

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->MMTYPE1:Lcom/itextpdf/text/pdf/PdfName;

    .line 7
    invoke-static {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v4

    if-nez v4, :cond_2

    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->TRUETYPE:Lcom/itextpdf/text/pdf/PdfName;

    .line 8
    invoke-static {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 9
    :cond_2
    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getSubsetPrefix(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;

    move-result-object v3

    if-eqz v3, :cond_3

    goto :goto_1

    .line 10
    :cond_3
    invoke-static {v2}, Lcom/itextpdf/text/pdf/PdfReader;->getFontName(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;

    move-result-object v3

    if-nez v3, :cond_4

    goto :goto_1

    .line 11
    :cond_4
    new-instance v4, Ljava/lang/StringBuilder;

    invoke-direct {v4}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {}, Lcom/itextpdf/text/pdf/BaseFont;->createSubsetPrefix()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v4, v5}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v3

    .line 12
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v5, :cond_5

    goto :goto_1

    .line 13
    :cond_5
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->FONTFILE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    if-nez v6, :cond_6

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->FONTFILE2:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    if-nez v6, :cond_6

    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->FONTFILE3:Lcom/itextpdf/text/pdf/PdfName;

    .line 14
    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    if-nez v5, :cond_6

    goto :goto_1

    .line 15
    :cond_6
    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v4

    .line 16
    new-instance v5, Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {v5, v3}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    .line 17
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 18
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->FONTNAME:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 19
    invoke-direct {p0, v0, v2}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    add-int/lit8 v1, v1, 0x1

    :cond_7
    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto/16 :goto_0

    :cond_8
    return v1
.end method

.method public dumpPerc()D
    .locals 4

    const/4 v0, 0x0

    const/4 v1, 0x0

    .line 1
    :goto_0
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v0, v2, :cond_1

    .line 2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    if-eqz v2, :cond_0

    add-int/lit8 v1, v1, 0x1

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    int-to-double v0, v1

    const-wide/high16 v2, 0x4059000000000000L    # 100.0

    mul-double v0, v0, v2

    .line 3
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    int-to-double v2, v2

    div-double/2addr v0, v2

    return-wide v0
.end method

.method public eliminateSharedStreams()V
    .locals 11

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->sharedStreams:Z

    if-nez v0, :cond_0

    return-void

    :cond_0
    const/4 v0, 0x0

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->sharedStreams:Z

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->size()I

    move-result v1

    const/4 v2, 0x1

    if-ne v1, v2, :cond_1

    return-void

    .line 4
    :cond_1
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    .line 5
    new-instance v3, Ljava/util/ArrayList;

    invoke-direct {v3}, Ljava/util/ArrayList;-><init>()V

    .line 6
    new-instance v4, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    const/4 v5, 0x1

    .line 7
    :goto_0
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->size()I

    move-result v6

    if-gt v5, v6, :cond_8

    .line 8
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v6, v5}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v6

    if-nez v6, :cond_2

    goto/16 :goto_3

    .line 9
    :cond_2
    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    invoke-static {v8}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    if-nez v8, :cond_3

    goto :goto_3

    .line 10
    :cond_3
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v9

    const/4 v10, 0x0

    if-eqz v9, :cond_5

    .line 11
    invoke-virtual {v6, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v6

    check-cast v6, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 12
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v7

    invoke-virtual {v4, v7}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v7

    if-eqz v7, :cond_4

    .line 13
    invoke-virtual {v1, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 14
    new-instance v6, Lcom/itextpdf/text/pdf/PRStream;

    check-cast v8, Lcom/itextpdf/text/pdf/PRStream;

    invoke-direct {v6, v8, v10}, Lcom/itextpdf/text/pdf/PRStream;-><init>(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v3, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_3

    .line 15
    :cond_4
    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v6

    invoke-virtual {v4, v6, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    goto :goto_3

    .line 16
    :cond_5
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v6

    if-eqz v6, :cond_7

    .line 17
    check-cast v8, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v6, 0x0

    .line 18
    :goto_1
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v7

    if-ge v6, v7, :cond_7

    .line 19
    invoke-virtual {v8, v6}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 20
    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v9

    invoke-virtual {v4, v9}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v9

    if-eqz v9, :cond_6

    .line 21
    invoke-virtual {v1, v7}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 22
    new-instance v9, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v7}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v7

    check-cast v7, Lcom/itextpdf/text/pdf/PRStream;

    invoke-direct {v9, v7, v10}, Lcom/itextpdf/text/pdf/PRStream;-><init>(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v3, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 23
    :cond_6
    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v7

    invoke-virtual {v4, v7, v2}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    :goto_2
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    :cond_7
    :goto_3
    add-int/lit8 v5, v5, 0x1

    goto/16 :goto_0

    .line 24
    :cond_8
    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v4

    if-eqz v4, :cond_9

    return-void

    :cond_9
    const/4 v4, 0x0

    .line 25
    :goto_4
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v5

    if-ge v4, v5, :cond_a

    .line 26
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v3, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 27
    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 28
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v6}, Ljava/util/ArrayList;->size()I

    move-result v6

    sub-int/2addr v6, v2

    invoke-virtual {v5, v6, v0}, Lcom/itextpdf/text/pdf/PRIndirectReference;->setNumber(II)V

    add-int/lit8 v4, v4, 0x1

    goto :goto_4

    :cond_a
    return-void
.end method

.method public getAcroFields()Lcom/itextpdf/text/pdf/AcroFields;
    .locals 2

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/AcroFields;

    const/4 v1, 0x0

    invoke-direct {v0, p0, v1}, Lcom/itextpdf/text/pdf/AcroFields;-><init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfWriter;)V

    return-object v0
.end method

.method public getAcroForm()Lcom/itextpdf/text/pdf/PRAcroForm;
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroFormParsed:Z

    if-nez v0, :cond_0

    const/4 v0, 0x1

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroFormParsed:Z

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 4
    :try_start_0
    new-instance v1, Lcom/itextpdf/text/pdf/PRAcroForm;

    invoke-direct {v1, p0}, Lcom/itextpdf/text/pdf/PRAcroForm;-><init>(Lcom/itextpdf/text/pdf/PdfReader;)V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroForm:Lcom/itextpdf/text/pdf/PRAcroForm;

    .line 5
    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PRAcroForm;->readAcroForm(Lcom/itextpdf/text/pdf/PdfDictionary;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    const/4 v0, 0x0

    .line 6
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroForm:Lcom/itextpdf/text/pdf/PRAcroForm;

    .line 7
    :cond_0
    :goto_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->acroForm:Lcom/itextpdf/text/pdf/PRAcroForm;

    return-object v0
.end method

.method public getBoxSize(ILjava/lang/String;)Lcom/itextpdf/text/Rectangle;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    const-string v0, "trim"

    .line 2
    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-eqz v0, :cond_0

    .line 3
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->TRIMBOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    goto :goto_0

    :cond_0
    const-string v0, "art"

    .line 4
    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 5
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->ARTBOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    goto :goto_0

    :cond_1
    const-string v0, "bleed"

    .line 6
    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_2

    .line 7
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->BLEEDBOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    goto :goto_0

    :cond_2
    const-string v0, "crop"

    .line 8
    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 9
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->CROPBOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    goto :goto_0

    :cond_3
    const-string v0, "media"

    .line 10
    invoke-virtual {p2, v0}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result p2

    if-eqz p2, :cond_4

    .line 11
    sget-object p2, Lcom/itextpdf/text/pdf/PdfName;->MEDIABOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    goto :goto_0

    :cond_4
    move-object p1, v1

    :goto_0
    if-nez p1, :cond_5

    return-object v1

    .line 12
    :cond_5
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;

    move-result-object p1

    return-object p1
.end method

.method public getCatalog()Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    return-object v0
.end method

.method public getCertificationLevel()I
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PERMS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    .line 2
    :cond_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->DOCMDP:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_1

    return v1

    .line 3
    :cond_1
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->REFERENCE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    if-eqz v0, :cond_6

    .line 4
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v2

    if-nez v2, :cond_2

    goto :goto_0

    .line 5
    :cond_2
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->getAsDict(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_3

    return v1

    .line 6
    :cond_3
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->TRANSFORMPARAMS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_4

    return v1

    .line 7
    :cond_4
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->P:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    if-nez v0, :cond_5

    return v1

    .line 8
    :cond_5
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v0

    return v0

    :cond_6
    :goto_0
    return v1
.end method

.method public getCounter()Lcom/itextpdf/text/log/Counter;
    .locals 1

    .line 1
    sget-object v0, Lcom/itextpdf/text/pdf/PdfReader;->COUNTER:Lcom/itextpdf/text/log/Counter;

    return-object v0
.end method

.method public getCropBox(I)Lcom/itextpdf/text/Rectangle;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    .line 2
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->CROPBOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfArray;

    if-nez v0, :cond_0

    .line 3
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageSize(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/Rectangle;

    move-result-object p1

    return-object p1

    .line 4
    :cond_0
    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;

    move-result-object p1

    return-object p1
.end method

.method public getCryptoMode()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    if-nez v0, :cond_0

    const/4 v0, -0x1

    return v0

    .line 2
    :cond_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfEncryption;->getCryptoMode()I

    move-result v0

    return v0
.end method

.method public getCryptoRef()Lcom/itextpdf/text/pdf/PdfIndirectReference;
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->cryptoRef:Lcom/itextpdf/text/pdf/PRIndirectReference;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    return-object v0

    .line 2
    :cond_0
    new-instance v1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    const/4 v2, 0x0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v0

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->cryptoRef:Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getGeneration()I

    move-result v3

    invoke-direct {v1, v2, v0, v3}, Lcom/itextpdf/text/pdf/PdfIndirectReference;-><init>(III)V

    return-object v1
.end method

.method public getDecrypt()Lcom/itextpdf/text/pdf/PdfEncryption;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    return-object v0
.end method

.method public getEofPos()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->eofPos:J

    return-wide v0
.end method

.method public getFileLength()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    return-wide v0
.end method

.method public getInfo()Ljava/util/HashMap;
    .locals 8
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 1
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->INFO:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    if-nez v1, :cond_0

    return-object v0

    .line 3
    :cond_0
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_4

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    .line 4
    check-cast v3, Lcom/itextpdf/text/pdf/PdfName;

    .line 5
    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-static {v4}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    if-nez v4, :cond_1

    goto :goto_0

    .line 6
    :cond_1
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v5

    .line 7
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v6

    const/4 v7, 0x3

    if-eq v6, v7, :cond_3

    const/4 v4, 0x4

    if-eq v6, v4, :cond_2

    goto :goto_1

    .line 8
    :cond_2
    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v5

    goto :goto_1

    .line 9
    :cond_3
    check-cast v4, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v5

    .line 10
    :goto_1
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v0, v3, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    :cond_4
    return-object v0
.end method

.method public getJavaScript()Ljava/lang/String;
    .locals 2

    .line 20
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    .line 21
    :try_start_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->reOpen()V

    .line 22
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getJavaScript(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)Ljava/lang/String;

    move-result-object v1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 23
    :try_start_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    :catch_0
    return-object v1

    :catchall_0
    move-exception v1

    :try_start_2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 24
    :catch_1
    throw v1
.end method

.method public getJavaScript(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)Ljava/lang/String;
    .locals 9

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->NAMES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return-object v1

    .line 2
    :cond_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->JAVASCRIPT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v0, :cond_1

    return-object v1

    .line 3
    :cond_1
    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfNameTree;->readTree(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/util/HashMap;

    move-result-object v0

    .line 4
    invoke-virtual {v0}, Ljava/util/HashMap;->size()I

    move-result v1

    new-array v1, v1, [Ljava/lang/String;

    .line 5
    invoke-virtual {v0}, Ljava/util/HashMap;->keySet()Ljava/util/Set;

    move-result-object v2

    invoke-interface {v2, v1}, Ljava/util/Set;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    .line 6
    invoke-static {v1}, Ljava/util/Arrays;->sort([Ljava/lang/Object;)V

    .line 7
    new-instance v2, Ljava/lang/StringBuffer;

    invoke-direct {v2}, Ljava/lang/StringBuffer;-><init>()V

    const/4 v3, 0x0

    const/4 v4, 0x0

    .line 8
    :goto_0
    array-length v5, v1

    if-ge v4, v5, :cond_6

    .line 9
    aget-object v5, v1, v4

    invoke-virtual {v0, v5}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfObject;

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    check-cast v5, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v5, :cond_2

    goto :goto_2

    .line 10
    :cond_2
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->JS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    if-eqz v5, :cond_5

    .line 11
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isString()Z

    move-result v6

    const/16 v7, 0xa

    if-eqz v6, :cond_3

    .line 12
    check-cast v5, Lcom/itextpdf/text/pdf/PdfString;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfString;->toUnicodeString()Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    invoke-virtual {v2, v7}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    goto :goto_2

    .line 13
    :cond_3
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v6

    if-eqz v6, :cond_5

    .line 14
    check-cast v5, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v5, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object v5

    .line 15
    array-length v6, v5

    const/4 v8, 0x2

    if-lt v6, v8, :cond_4

    aget-byte v6, v5, v3

    const/4 v8, -0x2

    if-ne v6, v8, :cond_4

    const/4 v6, 0x1

    aget-byte v6, v5, v6

    const/4 v8, -0x1

    if-ne v6, v8, :cond_4

    const-string v6, "UnicodeBig"

    .line 16
    invoke-static {v5, v6}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToString([BLjava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    goto :goto_1

    :cond_4
    const-string v6, "PDF"

    .line 17
    invoke-static {v5, v6}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToString([BLjava/lang/String;)Ljava/lang/String;

    move-result-object v5

    invoke-virtual {v2, v5}, Ljava/lang/StringBuffer;->append(Ljava/lang/String;)Ljava/lang/StringBuffer;

    .line 18
    :goto_1
    invoke-virtual {v2, v7}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    :cond_5
    :goto_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    .line 19
    :cond_6
    invoke-virtual {v2}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p1

    return-object p1
.end method

.method public getLastXref()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXref:J

    return-wide v0
.end method

.method public getLinks(I)Ljava/util/ArrayList;
    .locals 6
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(I)",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfAnnotation$PdfImportedLink;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->resetReleasePage()V

    .line 2
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    .line 4
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_1

    .line 5
    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v1

    const/4 v2, 0x0

    .line 6
    :goto_0
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v3

    if-ge v2, v3, :cond_1

    .line 7
    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 8
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->LINK:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_0

    .line 9
    new-instance v4, Lcom/itextpdf/text/pdf/PdfAnnotation$PdfImportedLink;

    invoke-direct {v4, v3}, Lcom/itextpdf/text/pdf/PdfAnnotation$PdfImportedLink;-><init>(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    invoke-virtual {v0, v4}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 10
    :cond_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    .line 11
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->resetReleasePage()V

    return-object v0
.end method

.method public getMemoryLimitsAwareHandler()Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    return-object v0
.end method

.method public getMetadata()[B
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->METADATA:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 2
    instance-of v1, v0, Lcom/itextpdf/text/pdf/PRStream;

    if-nez v1, :cond_0

    const/4 v0, 0x0

    return-object v0

    .line 3
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v1

    .line 4
    :try_start_0
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->reOpen()V

    .line 5
    check-cast v0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 6
    :try_start_1
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    :catch_0
    return-object v0

    :catchall_0
    move-exception v0

    :try_start_2
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 7
    :catch_1
    throw v0
.end method

.method public getNamedDestination()Ljava/util/HashMap;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/HashMap<",
            "Ljava/lang/Object;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation

    const/4 v0, 0x0

    .line 1
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getNamedDestination(Z)Ljava/util/HashMap;

    move-result-object v0

    return-object v0
.end method

.method public getNamedDestination(Z)Ljava/util/HashMap;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Ljava/util/HashMap<",
            "Ljava/lang/Object;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation

    .line 2
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getNamedDestinationFromNames(Z)Ljava/util/HashMap;

    move-result-object p1

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getNamedDestinationFromStrings()Ljava/util/HashMap;

    move-result-object v0

    invoke-virtual {p1, v0}, Ljava/util/HashMap;->putAll(Ljava/util/Map;)V

    return-object p1
.end method

.method public getNamedDestinationFromNames()Ljava/util/HashMap;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation

    .line 1
    new-instance v0, Ljava/util/HashMap;

    const/4 v1, 0x0

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->getNamedDestinationFromNames(Z)Ljava/util/HashMap;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/util/HashMap;-><init>(Ljava/util/Map;)V

    return-object v0
.end method

.method public getNamedDestinationFromNames(Z)Ljava/util/HashMap;
    .locals 5
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(Z)",
            "Ljava/util/HashMap<",
            "Ljava/lang/Object;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation

    .line 2
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->DESTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-eqz v1, :cond_3

    .line 4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-static {v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v1, :cond_0

    return-object v0

    .line 5
    :cond_0
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v2

    .line 6
    invoke-interface {v2}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v2

    :goto_0
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_3

    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfName;

    .line 7
    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    invoke-static {v4}, Lcom/itextpdf/text/pdf/PdfReader;->getNameArray(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v4

    if-nez v4, :cond_1

    goto :goto_0

    :cond_1
    if-eqz p1, :cond_2

    .line 8
    invoke-virtual {v0, v3, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 9
    :cond_2
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfName;->decodeName(Ljava/lang/String;)Ljava/lang/String;

    move-result-object v3

    .line 10
    invoke-virtual {v0, v3, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    :cond_3
    return-object v0
.end method

.method public getNamedDestinationFromStrings()Ljava/util/HashMap;
    .locals 4
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->NAMES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    if-eqz v0, :cond_2

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v0, :cond_2

    .line 3
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->DESTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v0, :cond_2

    .line 4
    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfNameTree;->readTree(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/util/HashMap;

    move-result-object v0

    .line 5
    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v1

    invoke-interface {v1}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v2

    if-eqz v2, :cond_1

    .line 6
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/util/Map$Entry;

    .line 7
    invoke-interface {v2}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfObject;

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getNameArray(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v3

    if-eqz v3, :cond_0

    .line 8
    invoke-interface {v2, v3}, Ljava/util/Map$Entry;->setValue(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 9
    :cond_0
    invoke-interface {v1}, Ljava/util/Iterator;->remove()V

    goto :goto_0

    :cond_1
    return-object v0

    .line 10
    :cond_2
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    return-object v0
.end method

.method public getNumberOfPages()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->size()I

    move-result v0

    return v0
.end method

.method public getPageContent(I)[B
    .locals 1

    .line 41
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    .line 42
    :try_start_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->reOpen()V

    .line 43
    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getPageContent(ILcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 44
    :try_start_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    :catch_0
    return-object p1

    :catchall_0
    move-exception p1

    :try_start_2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->close()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    .line 45
    :catch_1
    throw p1
.end method

.method public getPageContent(ILcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B
    .locals 9

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    if-nez p1, :cond_0

    const/4 p1, 0x0

    return-object p1

    .line 2
    :cond_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    const/4 v0, 0x0

    if-nez p1, :cond_1

    new-array p1, v0, [B

    return-object p1

    .line 3
    :cond_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    if-nez v1, :cond_2

    const-wide/16 v2, -0x1

    goto :goto_0

    .line 4
    :cond_2
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->getAllMemoryUsedForDecompression()J

    move-result-wide v2

    .line 5
    :goto_0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v4

    if-eqz v4, :cond_3

    .line 6
    check-cast p1, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {p1, p2}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p1

    return-object p1

    .line 7
    :cond_3
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isArray()Z

    move-result v4

    if-eqz v4, :cond_8

    .line 8
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    .line 9
    new-instance v4, Lcom/itextpdf/text/pdf/MemoryLimitsAwareOutputStream;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareOutputStream;-><init>()V

    .line 10
    :goto_1
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    if-ge v0, v5, :cond_7

    .line 11
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    if-eqz v5, :cond_6

    .line 12
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v6

    if-nez v6, :cond_4

    goto :goto_2

    .line 13
    :cond_4
    check-cast v5, Lcom/itextpdf/text/pdf/PRStream;

    invoke-static {v5, p2}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object v5

    if-eqz v1, :cond_5

    .line 14
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->getAllMemoryUsedForDecompression()J

    move-result-wide v6

    cmp-long v8, v2, v6

    if-gez v8, :cond_5

    .line 15
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;->getMaxSizeOfSingleDecompressedPdfStream()I

    move-result v6

    invoke-virtual {v4, v6}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareOutputStream;->setMaxStreamSize(I)Lcom/itextpdf/text/pdf/MemoryLimitsAwareOutputStream;

    .line 16
    :cond_5
    invoke-virtual {v4, v5}, Ljava/io/ByteArrayOutputStream;->write([B)V

    .line 17
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    add-int/lit8 v5, v5, -0x1

    if-eq v0, v5, :cond_6

    const/16 v5, 0xa

    .line 18
    invoke-virtual {v4, v5}, Ljava/io/ByteArrayOutputStream;->write(I)V

    :cond_6
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    .line 19
    :cond_7
    invoke-virtual {v4}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object p1

    return-object p1

    :cond_8
    new-array p1, v0, [B

    return-object p1
.end method

.method public getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_0

    const/4 p1, 0x0

    return-object p1

    .line 2
    :cond_0
    iget-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->appendable:Z

    if-eqz v1, :cond_1

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageOrigRef(I)Lcom/itextpdf/text/pdf/PRIndirectReference;

    move-result-object p1

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfObject;->setIndRef(Lcom/itextpdf/text/pdf/PRIndirectReference;)V

    :cond_1
    return-object v0
.end method

.method public getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 2

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    return-object v0
.end method

.method public getPageOrigRef(I)Lcom/itextpdf/text/pdf/PRIndirectReference;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageOrigRef(I)Lcom/itextpdf/text/pdf/PRIndirectReference;

    move-result-object p1

    return-object p1
.end method

.method public getPageResources(I)Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageResources(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    return-object p1
.end method

.method public getPageResources(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 1

    .line 2
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->RESOURCES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    return-object p1
.end method

.method public getPageRotation(I)I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageRotation(Lcom/itextpdf/text/pdf/PdfDictionary;)I

    move-result p1

    return p1
.end method

.method public getPageRotation(Lcom/itextpdf/text/pdf/PdfDictionary;)I
    .locals 1

    .line 2
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ROTATE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object p1

    if-nez p1, :cond_0

    const/4 p1, 0x0

    return p1

    .line 3
    :cond_0
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result p1

    .line 4
    rem-int/lit16 p1, p1, 0x168

    if-gez p1, :cond_1

    add-int/lit16 p1, p1, 0x168

    :cond_1
    return p1
.end method

.method public getPageSize(I)Lcom/itextpdf/text/Rectangle;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageSize(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/Rectangle;

    move-result-object p1

    return-object p1
.end method

.method public getPageSize(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/Rectangle;
    .locals 1

    .line 2
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->MEDIABOX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object p1

    .line 3
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getNormalizedRectangle(Lcom/itextpdf/text/pdf/PdfArray;)Lcom/itextpdf/text/Rectangle;

    move-result-object p1

    return-object p1
.end method

.method public getPageSizeWithRotation(I)Lcom/itextpdf/text/Rectangle;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageNRelease(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageSizeWithRotation(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/Rectangle;

    move-result-object p1

    return-object p1
.end method

.method public getPageSizeWithRotation(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/Rectangle;
    .locals 1

    .line 2
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageSize(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/Rectangle;

    move-result-object v0

    .line 3
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageRotation(Lcom/itextpdf/text/pdf/PdfDictionary;)I

    move-result p1

    :goto_0
    if-lez p1, :cond_0

    .line 4
    invoke-virtual {v0}, Lcom/itextpdf/text/Rectangle;->rotate()Lcom/itextpdf/text/Rectangle;

    move-result-object v0

    add-int/lit8 p1, p1, -0x5a

    goto :goto_0

    :cond_0
    return-object v0
.end method

.method public getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 4

    const/4 v0, -0x1

    .line 20
    :try_start_0
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    const/4 v1, 0x0

    if-ltz p1, :cond_5

    .line 21
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-lt p1, v2, :cond_0

    goto :goto_1

    .line 22
    :cond_0
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfObject;

    .line 23
    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-eqz v3, :cond_4

    if-eqz v2, :cond_1

    goto :goto_0

    :cond_1
    mul-int/lit8 v2, p1, 0x2

    .line 24
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    array-length v3, v3

    if-lt v2, v3, :cond_2

    return-object v1

    .line 25
    :cond_2
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->readSingleObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    .line 26
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    if-eqz v1, :cond_3

    .line 27
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    :cond_3
    return-object v1

    :cond_4
    :goto_0
    return-object v2

    :cond_5
    :goto_1
    return-object v1

    :catch_0
    move-exception p1

    .line 28
    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method public getPdfObjectRelease(I)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 0

    .line 5
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    .line 6
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial()V

    return-object p1
.end method

.method public getPdfReaderInstance(Lcom/itextpdf/text/pdf/PdfWriter;)Lcom/itextpdf/text/pdf/PdfReaderInstance;
    .locals 1

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/PdfReaderInstance;

    invoke-direct {v0, p0, p1}, Lcom/itextpdf/text/pdf/PdfReaderInstance;-><init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfWriter;)V

    return-object v0
.end method

.method public getPdfVersion()C
    .locals 1

    .line 1
    iget-char v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pdfVersion:C

    return v0
.end method

.method public getPermissions()J
    .locals 2

    .line 1
    iget-wide v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pValue:J

    return-wide v0
.end method

.method public getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getSafeFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    return-object v0
.end method

.method public getSimpleViewerPreferences()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-static {v0}, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;->getViewerPreferences(Lcom/itextpdf/text/pdf/PdfDictionary;)Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;->getPageLayoutAndMode()I

    move-result v0

    return v0
.end method

.method public getTrailer()Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    return-object v0
.end method

.method public getXrefSize()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    return v0
.end method

.method public hasUsageRights()Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PERMS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    .line 2
    :cond_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->UR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v2

    if-nez v2, :cond_1

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->UR3:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->contains(Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v0

    if-eqz v0, :cond_2

    :cond_1
    const/4 v1, 0x1

    :cond_2
    return v1
.end method

.method public is128Key()Z
    .locals 2

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->rValue:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_0

    const/4 v0, 0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    :goto_0
    return v0
.end method

.method public isAppendable()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->appendable:Z

    return v0
.end method

.method public isEncrypted()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    return v0
.end method

.method public isHybridXref()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->hybridXref:Z

    return v0
.end method

.method public isMetadataEncrypted()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->decrypt:Lcom/itextpdf/text/pdf/PdfEncryption;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    return v0

    .line 2
    :cond_0
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfEncryption;->isMetadataEncrypted()Z

    move-result v0

    return v0
.end method

.method public isNewXrefType()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->newXrefType:Z

    return v0
.end method

.method public final isOpenedWithFullPermissions()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    if-eqz v0, :cond_1

    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->ownerPasswordUsed:Z

    if-nez v0, :cond_1

    sget-boolean v0, Lcom/itextpdf/text/pdf/PdfReader;->unethicalreading:Z

    if-eqz v0, :cond_0

    goto :goto_0

    :cond_0
    const/4 v0, 0x0

    goto :goto_1

    :cond_1
    :goto_0
    const/4 v0, 0x1

    :goto_1
    return v0
.end method

.method public isRebuilt()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    return v0
.end method

.method public isTagged()Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->MARKINFO:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    return v1

    .line 2
    :cond_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfBoolean;->PDFTRUE:Lcom/itextpdf/text/pdf/PdfBoolean;

    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->MARKED:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsBoolean(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfBoolean;

    move-result-object v0

    invoke-virtual {v2, v0}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_1

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->STRUCTTREEROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-eqz v0, :cond_1

    const/4 v1, 0x1

    :cond_1
    return v1
.end method

.method public isTampered()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tampered:Z

    return v0
.end method

.method public killXref(Lcom/itextpdf/text/pdf/PdfObject;)V
    .locals 3

    if-nez p1, :cond_0

    return-void

    .line 1
    :cond_0
    instance-of v0, p1, Lcom/itextpdf/text/pdf/PdfIndirectReference;

    if-eqz v0, :cond_1

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v0

    if-nez v0, :cond_1

    return-void

    .line 2
    :cond_1
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v0

    const/4 v1, 0x5

    if-eq v0, v1, :cond_4

    const/4 v1, 0x6

    if-eq v0, v1, :cond_3

    const/4 v1, 0x7

    if-eq v0, v1, :cond_3

    const/16 v1, 0xa

    if-eq v0, v1, :cond_2

    goto :goto_2

    .line 3
    :cond_2
    check-cast p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result p1

    .line 4
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfObject;

    .line 5
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    const/4 v2, 0x0

    invoke-virtual {v1, p1, v2}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 6
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    .line 7
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->killXref(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_2

    .line 8
    :cond_3
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 9
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_5

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    .line 10
    check-cast v1, Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->killXref(Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_0

    .line 11
    :cond_4
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    const/4 v0, 0x0

    .line 12
    :goto_1
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v1

    if-ge v0, v1, :cond_5

    .line 13
    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->killXref(Lcom/itextpdf/text/pdf/PdfObject;)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_5
    :goto_2
    return-void
.end method

.method public makeRemoteNamedDestinationsLocal()V
    .locals 10

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->remoteToLocalNamedDestinations:Z

    if-eqz v0, :cond_0

    return-void

    :cond_0
    const/4 v0, 0x1

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->remoteToLocalNamedDestinations:Z

    .line 3
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfReader;->getNamedDestination(Z)Ljava/util/HashMap;

    move-result-object v1

    .line 4
    invoke-virtual {v1}, Ljava/util/HashMap;->isEmpty()Z

    move-result v2

    if-eqz v2, :cond_1

    return-void

    :cond_1
    const/4 v2, 0x1

    .line 5
    :goto_0
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->size()I

    move-result v3

    if-gt v2, v3, :cond_8

    .line 6
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    .line 7
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfArray;

    .line 8
    iget v5, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    .line 9
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->releaseLastXrefPartial()V

    if-nez v4, :cond_2

    .line 10
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    goto :goto_2

    :cond_2
    const/4 v6, 0x0

    const/4 v7, 0x0

    .line 11
    :goto_1
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v8

    if-ge v6, v8, :cond_4

    .line 12
    invoke-virtual {v4, v6}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    .line 13
    invoke-direct {p0, v8, v1}, Lcom/itextpdf/text/pdf/PdfReader;->convertNamedDestination(Lcom/itextpdf/text/pdf/PdfObject;Ljava/util/HashMap;)Z

    move-result v9

    if-eqz v9, :cond_3

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v8

    if-nez v8, :cond_3

    const/4 v7, 0x1

    :cond_3
    add-int/lit8 v6, v6, 0x1

    goto :goto_1

    :cond_4
    if-eqz v7, :cond_5

    .line 14
    invoke-direct {p0, v5, v4}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    :cond_5
    if-eqz v7, :cond_6

    .line 15
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v3

    if-eqz v3, :cond_7

    .line 16
    :cond_6
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    :cond_7
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_8
    return-void
.end method

.method public readArray()Lcom/itextpdf/text/pdf/PdfArray;
    .locals 5

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    .line 2
    :goto_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    .line 3
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v2

    neg-int v2, v2

    .line 4
    sget-object v3, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->END_ARRAY:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    invoke-virtual {v3}, Ljava/lang/Enum;->ordinal()I

    move-result v3

    if-ne v2, v3, :cond_0

    return-object v0

    .line 5
    :cond_0
    sget-object v3, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->END_DIC:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    invoke-virtual {v3}, Ljava/lang/Enum;->ordinal()I

    move-result v3

    if-ne v2, v3, :cond_1

    .line 6
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const/4 v3, 0x0

    new-array v3, v3, [Ljava/lang/Object;

    const-string v4, "unexpected.gt.gt"

    invoke-static {v4, v3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 7
    :cond_1
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfArray;->add(Lcom/itextpdf/text/pdf/PdfObject;)Z

    goto :goto_0
.end method

.method public readDictionary()Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 8

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    .line 2
    :goto_0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->END_DIC:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-ne v1, v2, :cond_0

    return-object v0

    .line 4
    :cond_0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    sget-object v3, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NAME:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    const/4 v4, 0x0

    if-eq v1, v3, :cond_1

    .line 5
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const/4 v3, 0x1

    new-array v3, v3, [Ljava/lang/Object;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v5

    aput-object v5, v3, v4

    const-string v5, "dictionary.key.1.is.not.a.name"

    invoke-static {v5, v3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v3

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 6
    :cond_1
    new-instance v1, Lcom/itextpdf/text/pdf/PdfName;

    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v3

    invoke-direct {v1, v3, v4}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;Z)V

    .line 7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 8
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v5

    neg-int v5, v5

    .line 9
    invoke-virtual {v2}, Ljava/lang/Enum;->ordinal()I

    move-result v2

    if-ne v5, v2, :cond_2

    .line 10
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v6, v4, [Ljava/lang/Object;

    const-string v7, "unexpected.gt.gt"

    invoke-static {v7, v6}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 11
    :cond_2
    sget-object v2, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->END_ARRAY:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    invoke-virtual {v2}, Ljava/lang/Enum;->ordinal()I

    move-result v2

    if-ne v5, v2, :cond_3

    .line 12
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v4, v4, [Ljava/lang/Object;

    const-string v5, "unexpected.close.bracket"

    invoke-static {v5, v4}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 13
    :cond_3
    invoke-virtual {v0, v1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_0
.end method

.method public readDocObj()V
    .locals 12

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    .line 2
    new-instance v1, Ljava/util/ArrayList;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    array-length v2, v2

    const/4 v3, 0x2

    div-int/2addr v2, v3

    invoke-direct {v1, v2}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    .line 3
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    array-length v2, v2

    div-int/2addr v2, v3

    const/4 v4, 0x0

    invoke-static {v2, v4}, Ljava/util/Collections;->nCopies(ILjava/lang/Object;)Ljava/util/List;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 4
    :goto_0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    array-length v2, v1

    const/4 v5, 0x0

    if-ge v3, v2, :cond_8

    .line 5
    aget-wide v6, v1, v3

    const-wide/16 v8, 0x0

    cmp-long v2, v6, v8

    if-lez v2, :cond_7

    add-int/lit8 v2, v3, 0x1

    .line 6
    aget-wide v10, v1, v2

    cmp-long v1, v10, v8

    if-lez v1, :cond_0

    goto/16 :goto_2

    .line 7
    :cond_0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1, v6, v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 8
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 9
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-eq v1, v2, :cond_1

    .line 10
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v6, v5, [Ljava/lang/Object;

    const-string v7, "invalid.object.number"

    invoke-static {v7, v6}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v1, v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 11
    :cond_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->objNum:I

    .line 12
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 13
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    if-eq v1, v2, :cond_2

    .line 14
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v2, v5, [Ljava/lang/Object;

    const-string v6, "invalid.generation.number"

    invoke-static {v6, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 15
    :cond_2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->objGen:I

    .line 16
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 17
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    const-string v2, "obj"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_3

    .line 18
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v2, v5, [Ljava/lang/Object;

    const-string v5, "token.obj.expected"

    invoke-static {v5, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 19
    :cond_3
    :try_start_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    .line 20
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v2

    if-eqz v2, :cond_5

    .line 21
    move-object v2, v1

    check-cast v2, Lcom/itextpdf/text/pdf/PRStream;

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_1

    :catch_0
    move-exception v1

    .line 22
    sget-boolean v2, Lcom/itextpdf/text/pdf/PdfReader;->debugmode:Z

    if-eqz v2, :cond_6

    .line 23
    sget-object v2, Lcom/itextpdf/text/pdf/PdfReader;->LOGGER:Lcom/itextpdf/text/log/Logger;

    sget-object v5, Lcom/itextpdf/text/log/Level;->ERROR:Lcom/itextpdf/text/log/Level;

    invoke-interface {v2, v5}, Lcom/itextpdf/text/log/Logger;->isLogging(Lcom/itextpdf/text/log/Level;)Z

    move-result v5

    if-eqz v5, :cond_4

    .line 24
    invoke-virtual {v1}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v5

    invoke-interface {v2, v5, v1}, Lcom/itextpdf/text/log/Logger;->error(Ljava/lang/String;Ljava/lang/Exception;)V

    :cond_4
    move-object v1, v4

    .line 25
    :cond_5
    :goto_1
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    div-int/lit8 v5, v3, 0x2

    invoke-virtual {v2, v5, v1}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    goto :goto_2

    .line 26
    :cond_6
    throw v1

    :cond_7
    :goto_2
    add-int/lit8 v3, v3, 0x2

    goto/16 :goto_0

    .line 27
    :cond_8
    :goto_3
    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-ge v5, v1, :cond_9

    .line 28
    invoke-virtual {v0, v5}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PRStream;

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->checkPRStreamLength(Lcom/itextpdf/text/pdf/PRStream;)V

    add-int/lit8 v5, v5, 0x1

    goto :goto_3

    .line 29
    :cond_9
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readDecryptedDocObj()V

    .line 30
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->objStmMark:Ljava/util/HashMap;

    if-eqz v0, :cond_b

    .line 31
    invoke-virtual {v0}, Ljava/util/HashMap;->entrySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :goto_4
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_a

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/util/Map$Entry;

    .line 32
    invoke-interface {v1}, Ljava/util/Map$Entry;->getKey()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljava/lang/Integer;

    invoke-virtual {v2}, Ljava/lang/Integer;->intValue()I

    move-result v2

    .line 33
    invoke-interface {v1}, Ljava/util/Map$Entry;->getValue()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/IntHashtable;

    .line 34
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PRStream;

    invoke-virtual {p0, v3, v1}, Lcom/itextpdf/text/pdf/PdfReader;->readObjStm(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/IntHashtable;)V

    .line 35
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v1, v2, v4}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    goto :goto_4

    .line 36
    :cond_a
    iput-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->objStmMark:Ljava/util/HashMap;

    .line 37
    :cond_b
    iput-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    return-void
.end method

.method public readDocObjPartial()V
    .locals 10

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    array-length v1, v1

    div-int/lit8 v1, v1, 0x2

    invoke-direct {v0, v1}, Ljava/util/ArrayList;-><init>(I)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    array-length v1, v1

    div-int/lit8 v1, v1, 0x2

    const/4 v2, 0x0

    invoke-static {v1, v2}, Ljava/util/Collections;->nCopies(ILjava/lang/Object;)Ljava/util/List;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->addAll(Ljava/util/Collection;)Z

    .line 3
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readDecryptedDocObj()V

    .line 4
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    if-eqz v0, :cond_0

    .line 5
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/LongHashtable;->getKeys()[J

    move-result-object v0

    const/4 v1, 0x0

    .line 6
    :goto_0
    array-length v2, v0

    if-ge v1, v2, :cond_0

    .line 7
    aget-wide v2, v0, v1

    .line 8
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    const-wide/16 v6, 0x2

    mul-long v6, v6, v2

    long-to-int v7, v6

    aget-wide v8, v5, v7

    invoke-virtual {v4, v2, v3, v8, v9}, Lcom/itextpdf/text/pdf/LongHashtable;->put(JJ)J

    .line 9
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    const-wide/16 v3, -0x1

    aput-wide v3, v2, v7

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public readObjStm(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/IntHashtable;)V
    .locals 9

    if-nez p1, :cond_0

    return-void

    .line 1
    :cond_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FIRST:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v0

    .line 2
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->N:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    .line 3
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v2

    invoke-static {p1, v2}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p1

    .line 4
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    .line 5
    new-instance v3, Lcom/itextpdf/text/pdf/PRTokeniser;

    new-instance v4, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    new-instance v5, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v5}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v5, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    invoke-direct {v4, p1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    .line 6
    :try_start_0
    new-array p1, v1, [I

    .line 7
    new-array v3, v1, [I

    const/4 v4, 0x1

    const/4 v5, 0x0

    const/4 v6, 0x0

    :goto_0
    if-ge v6, v1, :cond_5

    .line 8
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result v4

    if-nez v4, :cond_1

    goto :goto_2

    .line 9
    :cond_1
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v4

    sget-object v7, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-eq v4, v7, :cond_2

    :goto_1
    const/4 v4, 0x0

    goto :goto_2

    .line 10
    :cond_2
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v4

    aput v4, v3, v6

    .line 11
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result v4

    if-nez v4, :cond_3

    goto :goto_2

    .line 12
    :cond_3
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v8

    if-eq v8, v7, :cond_4

    goto :goto_1

    .line 13
    :cond_4
    iget-object v7, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v7

    add-int/2addr v7, v0

    aput v7, p1, v6

    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    :cond_5
    :goto_2
    if-eqz v4, :cond_9

    :goto_3
    if-ge v5, v1, :cond_8

    .line 14
    invoke-virtual {p2, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->containsKey(I)Z

    move-result v0

    if-eqz v0, :cond_7

    .line 15
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    aget v4, p1, v5

    int-to-long v6, v4

    invoke-virtual {v0, v6, v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 16
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    .line 17
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v0

    sget-object v4, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-ne v0, v4, :cond_6

    .line 18
    new-instance v0, Lcom/itextpdf/text/pdf/PdfNumber;

    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v0, v4}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(Ljava/lang/String;)V

    goto :goto_4

    .line 19
    :cond_6
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    aget v4, p1, v5

    int-to-long v6, v4

    invoke-virtual {v0, v6, v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 20
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    .line 21
    :goto_4
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    aget v6, v3, v5

    invoke-virtual {v4, v6, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    :cond_7
    add-int/lit8 v5, v5, 0x1

    goto :goto_3

    .line 22
    :cond_8
    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    return-void

    .line 23
    :cond_9
    :try_start_1
    new-instance p1, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    const-string p2, "error.reading.objstm"

    new-array v0, v5, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    :catchall_0
    move-exception p1

    .line 24
    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    .line 25
    throw p1
.end method

.method public readOneObjStm(Lcom/itextpdf/text/pdf/PRStream;I)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 7

    .line 1
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->FIRST:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsNumber(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v0

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v1

    invoke-static {p1, v1}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object p1

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    .line 4
    new-instance v2, Lcom/itextpdf/text/pdf/PRTokeniser;

    new-instance v3, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    new-instance v4, Lcom/itextpdf/text/io/RandomAccessSourceFactory;

    invoke-direct {v4}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;-><init>()V

    invoke-virtual {v4, p1}, Lcom/itextpdf/text/io/RandomAccessSourceFactory;->createSource([B)Lcom/itextpdf/text/io/RandomAccessSource;

    move-result-object p1

    invoke-direct {v3, p1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;-><init>(Lcom/itextpdf/text/io/RandomAccessSource;)V

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;-><init>(Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const/4 p1, 0x1

    add-int/2addr p2, p1

    const/4 v2, 0x0

    const/4 v3, 0x0

    const/4 v4, 0x0

    :goto_0
    if-ge v3, p2, :cond_4

    .line 5
    :try_start_0
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result p1

    if-nez p1, :cond_0

    goto :goto_2

    .line 6
    :cond_0
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object p1

    sget-object v5, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-eq p1, v5, :cond_1

    :goto_1
    const/4 p1, 0x0

    goto :goto_2

    .line 7
    :cond_1
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result p1

    if-nez p1, :cond_2

    goto :goto_2

    .line 8
    :cond_2
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v6

    if-eq v6, v5, :cond_3

    goto :goto_1

    .line 9
    :cond_3
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v4

    add-int/2addr v4, v0

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :catchall_0
    move-exception p1

    goto :goto_4

    :cond_4
    :goto_2
    if-eqz p1, :cond_6

    .line 10
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    int-to-long v2, v4

    invoke-virtual {p1, v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 11
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    .line 12
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object p1

    sget-object p2, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-ne p1, p2, :cond_5

    .line 13
    new-instance p1, Lcom/itextpdf/text/pdf/PdfNumber;

    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(Ljava/lang/String;)V

    goto :goto_3

    .line 14
    :cond_5
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {p1, v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 15
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 16
    :goto_3
    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    return-object p1

    .line 17
    :cond_6
    :try_start_1
    new-instance p1, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    const-string p2, "error.reading.objstm"

    new-array v0, v2, [Ljava/lang/Object;

    invoke-static {p2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw p1
    :try_end_1
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 18
    :goto_4
    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    .line 19
    throw p1
.end method

.method public readPRObject()Lcom/itextpdf/text/pdf/PdfObject;
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v0

    .line 3
    sget-object v1, Lcom/itextpdf/text/pdf/PdfReader$1;->$SwitchMap$com$itextpdf$text$pdf$PRTokeniser$TokenType:[I

    invoke-virtual {v0}, Ljava/lang/Enum;->ordinal()I

    move-result v2

    aget v1, v1, v2

    const/4 v2, 0x0

    const/4 v3, 0x1

    packed-switch v1, :pswitch_data_0

    .line 4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    const-string v4, "null"

    .line 5
    invoke-virtual {v4, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_b

    .line 6
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    if-nez v0, :cond_a

    .line 7
    new-instance v0, Lcom/itextpdf/text/pdf/PdfNull;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfNull;-><init>()V

    return-object v0

    .line 8
    :pswitch_0
    new-instance v0, Ljava/io/IOException;

    new-array v1, v2, [Ljava/lang/Object;

    const-string v2, "unexpected.end.of.file"

    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/io/IOException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9
    :pswitch_1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getReference()I

    move-result v0

    if-ltz v0, :cond_0

    .line 10
    new-instance v1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getGeneration()I

    move-result v2

    invoke-direct {v1, p0, v0, v2}, Lcom/itextpdf/text/pdf/PRIndirectReference;-><init>(Lcom/itextpdf/text/pdf/PdfReader;II)V

    return-object v1

    .line 11
    :cond_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfReader;->LOGGER:Lcom/itextpdf/text/log/Logger;

    sget-object v1, Lcom/itextpdf/text/log/Level;->ERROR:Lcom/itextpdf/text/log/Level;

    invoke-interface {v0, v1}, Lcom/itextpdf/text/log/Logger;->isLogging(Lcom/itextpdf/text/log/Level;)Z

    move-result v1

    if-eqz v1, :cond_1

    new-array v1, v2, [Ljava/lang/Object;

    const-string v2, "invalid.reference.number.skip"

    .line 12
    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Lcom/itextpdf/text/log/Logger;->error(Ljava/lang/String;)V

    .line 13
    :cond_1
    sget-object v0, Lcom/itextpdf/text/pdf/PdfNull;->PDFNULL:Lcom/itextpdf/text/pdf/PdfNull;

    return-object v0

    .line 14
    :pswitch_2
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->staticNames:Ljava/util/Map;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfName;

    .line 15
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    if-lez v1, :cond_2

    if-eqz v0, :cond_2

    return-object v0

    .line 16
    :cond_2
    new-instance v0, Lcom/itextpdf/text/pdf/PdfName;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;Z)V

    return-object v0

    .line 17
    :pswitch_3
    new-instance v0, Lcom/itextpdf/text/pdf/PdfString;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    const/4 v2, 0x0

    invoke-direct {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;Ljava/lang/String;)V

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->isHexString()Z

    move-result v1

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfString;->setHexWriting(Z)Lcom/itextpdf/text/pdf/PdfString;

    move-result-object v0

    .line 18
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->objNum:I

    iget v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->objGen:I

    invoke-virtual {v0, v1, v2}, Lcom/itextpdf/text/pdf/PdfString;->setObjNum(II)V

    .line 19
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    if-eqz v1, :cond_3

    .line 20
    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    :cond_3
    return-object v0

    .line 21
    :pswitch_4
    new-instance v0, Lcom/itextpdf/text/pdf/PdfNumber;

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/pdf/PdfNumber;-><init>(Ljava/lang/String;)V

    return-object v0

    .line 22
    :pswitch_5
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    add-int/2addr v0, v3

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    .line 23
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readArray()Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v0

    .line 24
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    sub-int/2addr v1, v3

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    return-object v0

    .line 25
    :pswitch_6
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    add-int/2addr v0, v3

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    .line 26
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readDictionary()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    .line 27
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    sub-int/2addr v1, v3

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    .line 28
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v1

    .line 29
    :cond_4
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 30
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v4

    sget-object v5, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->COMMENT:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-eq v4, v5, :cond_4

    :cond_5
    if-eqz v3, :cond_9

    .line 31
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v3

    const-string v4, "stream"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-eqz v3, :cond_9

    .line 32
    :cond_6
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->read()I

    move-result v1

    const/16 v2, 0x20

    if-eq v1, v2, :cond_6

    const/16 v2, 0x9

    if-eq v1, v2, :cond_6

    if-eqz v1, :cond_6

    const/16 v2, 0xc

    if-eq v1, v2, :cond_6

    const/16 v2, 0xa

    if-eq v1, v2, :cond_7

    .line 33
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->read()I

    move-result v1

    :cond_7
    if-eq v1, v2, :cond_8

    .line 34
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->backOnePosition(I)V

    .line 35
    :cond_8
    new-instance v1, Lcom/itextpdf/text/pdf/PRStream;

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v2

    invoke-direct {v1, p0, v2, v3}, Lcom/itextpdf/text/pdf/PRStream;-><init>(Lcom/itextpdf/text/pdf/PdfReader;J)V

    .line 36
    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->putAll(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 37
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->objNum:I

    iget v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->objGen:I

    invoke-virtual {v1, v0, v2}, Lcom/itextpdf/text/pdf/PRStream;->setObjNum(II)V

    return-object v1

    .line 38
    :cond_9
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3, v1, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    return-object v0

    .line 39
    :cond_a
    sget-object v0, Lcom/itextpdf/text/pdf/PdfNull;->PDFNULL:Lcom/itextpdf/text/pdf/PdfNull;

    return-object v0

    :cond_b
    const-string v4, "true"

    .line 40
    invoke-virtual {v4, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-eqz v4, :cond_d

    .line 41
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    if-nez v0, :cond_c

    .line 42
    new-instance v0, Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-direct {v0, v3}, Lcom/itextpdf/text/pdf/PdfBoolean;-><init>(Z)V

    return-object v0

    .line 43
    :cond_c
    sget-object v0, Lcom/itextpdf/text/pdf/PdfBoolean;->PDFTRUE:Lcom/itextpdf/text/pdf/PdfBoolean;

    return-object v0

    :cond_d
    const-string v3, "false"

    .line 44
    invoke-virtual {v3, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_f

    .line 45
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->readDepth:I

    if-nez v0, :cond_e

    .line 46
    new-instance v0, Lcom/itextpdf/text/pdf/PdfBoolean;

    invoke-direct {v0, v2}, Lcom/itextpdf/text/pdf/PdfBoolean;-><init>(Z)V

    return-object v0

    .line 47
    :cond_e
    sget-object v0, Lcom/itextpdf/text/pdf/PdfBoolean;->PDFFALSE:Lcom/itextpdf/text/pdf/PdfBoolean;

    return-object v0

    .line 48
    :cond_f
    new-instance v1, Lcom/itextpdf/text/pdf/PdfLiteral;

    invoke-virtual {v0}, Ljava/lang/Enum;->ordinal()I

    move-result v0

    neg-int v0, v0

    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v1, v0, v2}, Lcom/itextpdf/text/pdf/PdfLiteral;-><init>(ILjava/lang/String;)V

    return-object v1

    :pswitch_data_0
    .packed-switch 0x1
        :pswitch_6
        :pswitch_5
        :pswitch_4
        :pswitch_3
        :pswitch_2
        :pswitch_1
        :pswitch_0
    .end packed-switch
.end method

.method public readPages()V
    .locals 5

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    const/4 v1, 0x0

    if-eqz v0, :cond_3

    .line 2
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->PAGES:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->rootPages:Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v0, :cond_0

    .line 3
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->rootPages:Lcom/itextpdf/text/pdf/PdfDictionary;

    new-instance v3, Lcom/itextpdf/text/pdf/PdfName;

    const-string v4, "Types"

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    invoke-virtual {v0, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_1

    .line 4
    :cond_0
    sget-boolean v0, Lcom/itextpdf/text/pdf/PdfReader;->debugmode:Z

    const-string v2, "the.document.has.no.page.root"

    if-eqz v0, :cond_2

    .line 5
    sget-object v0, Lcom/itextpdf/text/pdf/PdfReader;->LOGGER:Lcom/itextpdf/text/log/Logger;

    sget-object v3, Lcom/itextpdf/text/log/Level;->ERROR:Lcom/itextpdf/text/log/Level;

    invoke-interface {v0, v3}, Lcom/itextpdf/text/log/Logger;->isLogging(Lcom/itextpdf/text/log/Level;)Z

    move-result v3

    if-eqz v3, :cond_1

    new-array v1, v1, [Ljava/lang/Object;

    .line 6
    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Lcom/itextpdf/text/log/Logger;->error(Ljava/lang/String;)V

    .line 7
    :cond_1
    new-instance v0, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    const/4 v1, 0x0

    invoke-direct {v0, p0, v1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;-><init>(Lcom/itextpdf/text/pdf/PdfReader;Lcom/itextpdf/text/pdf/PdfReader$1;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    return-void

    .line 8
    :cond_2
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 9
    :cond_3
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v1, v1, [Ljava/lang/Object;

    const-string v2, "the.document.has.no.catalog.object"

    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0
.end method

.method public readPdf()V
    .locals 8

    const-string v0, "rebuild.failed.1.original.message.2"

    .line 1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v1

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->length()J

    move-result-wide v1

    iput-wide v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->checkPdfHeader()C

    move-result v1

    iput-char v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pdfVersion:C

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    if-nez v1, :cond_0

    .line 4
    new-instance v1, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    iget-wide v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    invoke-direct {v1, v2, v3}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;-><init>(J)V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    :cond_0
    const-wide/16 v1, -0x1

    const/4 v3, 0x2

    const/4 v4, 0x0

    const/4 v5, 0x1

    .line 5
    :try_start_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readXref()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v6

    .line 6
    :try_start_1
    iput-boolean v5, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    .line 7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->rebuildXref()V

    .line 8
    iput-wide v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXref:J
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_3

    .line 9
    :goto_0
    :try_start_2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readDocObj()V
    :try_end_2
    .catch Ljava/lang/Exception; {:try_start_2 .. :try_end_2} :catch_1

    goto :goto_1

    :catch_1
    move-exception v6

    .line 10
    instance-of v7, v6, Lcom/itextpdf/text/exceptions/BadPasswordException;

    if-nez v7, :cond_2

    .line 11
    iget-boolean v7, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    if-nez v7, :cond_1

    iget-boolean v7, p0, Lcom/itextpdf/text/pdf/PdfReader;->encryptionError:Z

    if-nez v7, :cond_1

    .line 12
    iput-boolean v5, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    .line 13
    iput-boolean v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->encrypted:Z

    .line 14
    :try_start_3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->rebuildXref()V

    .line 15
    iput-wide v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXref:J

    .line 16
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readDocObj()V
    :try_end_3
    .catch Ljava/lang/Exception; {:try_start_3 .. :try_end_3} :catch_2

    .line 17
    :goto_1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    .line 18
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPages()V

    .line 19
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->removeUnusedObjects()I

    return-void

    :catch_2
    move-exception v1

    .line 20
    new-instance v2, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v3, v3, [Ljava/lang/Object;

    invoke-virtual {v1}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v1

    aput-object v1, v3, v4

    invoke-virtual {v6}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v1

    aput-object v1, v3, v5

    invoke-static {v0, v3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 21
    :cond_1
    new-instance v0, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    invoke-virtual {v6}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 22
    :cond_2
    new-instance v0, Lcom/itextpdf/text/exceptions/BadPasswordException;

    invoke-virtual {v6}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Lcom/itextpdf/text/exceptions/BadPasswordException;-><init>(Ljava/lang/String;)V

    throw v0

    :catch_3
    move-exception v1

    .line 23
    new-instance v2, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v3, v3, [Ljava/lang/Object;

    invoke-virtual {v1}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v1

    aput-object v1, v3, v4

    invoke-virtual {v6}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v1

    aput-object v1, v3, v5

    invoke-static {v0, v3}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v2, v0}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v2
.end method

.method public readPdfPartial()V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;->length()J

    move-result-wide v0

    iput-wide v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->checkPdfHeader()C

    move-result v0

    iput-char v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pdfVersion:C

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    if-nez v0, :cond_0

    .line 4
    new-instance v0, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    iget-wide v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->fileLength:J

    invoke-direct {v0, v1, v2}, Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;-><init>(J)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->memoryLimitsAwareHandler:Lcom/itextpdf/text/pdf/MemoryLimitsAwareHandler;

    .line 5
    :cond_0
    :try_start_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readXref()V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    const/4 v1, 0x1

    .line 6
    :try_start_1
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->rebuilt:Z

    .line 7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->rebuildXref()V

    const-wide/16 v2, -0x1

    .line 8
    iput-wide v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXref:J
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    .line 9
    :goto_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readDocObjPartial()V

    .line 10
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPages()V

    return-void

    :catch_1
    move-exception v2

    .line 11
    new-instance v3, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    const/4 v4, 0x2

    new-array v4, v4, [Ljava/lang/Object;

    const/4 v5, 0x0

    .line 12
    invoke-virtual {v2}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v6

    aput-object v6, v4, v5

    invoke-virtual {v0}, Ljava/lang/Exception;->getMessage()Ljava/lang/String;

    move-result-object v0

    aput-object v0, v4, v1

    const-string v0, "rebuild.failed.1.original.message.2"

    .line 13
    invoke-static {v0, v4}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v3, v0, v2}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;Ljava/lang/Throwable;)V

    throw v3
.end method

.method public readSingleObject(I)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 11

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->clear()V

    mul-int/lit8 v0, p1, 0x2

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    aget-wide v2, v1, v0

    const/4 v4, 0x0

    const-wide/16 v5, 0x0

    cmp-long v7, v2, v5

    if-gez v7, :cond_0

    return-object v4

    :cond_0
    add-int/lit8 v7, v0, 0x1

    .line 3
    aget-wide v8, v1, v7

    cmp-long v10, v8, v5

    if-lez v10, :cond_1

    .line 4
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    aget-wide v8, v1, v7

    invoke-virtual {v2, v8, v9}, Lcom/itextpdf/text/pdf/LongHashtable;->get(J)J

    move-result-wide v2

    :cond_1
    cmp-long v1, v2, v5

    if-nez v1, :cond_2

    return-object v4

    .line 5
    :cond_2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1, v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 6
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 7
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    const/4 v3, 0x0

    if-eq v1, v2, :cond_3

    .line 8
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v8, v3, [Ljava/lang/Object;

    const-string v9, "invalid.object.number"

    invoke-static {v9, v8}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v8

    invoke-virtual {v1, v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 9
    :cond_3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->objNum:I

    .line 10
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 11
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    if-eq v1, v2, :cond_4

    .line 12
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v2, v3, [Ljava/lang/Object;

    const-string v8, "invalid.generation.number"

    invoke-static {v8, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 13
    :cond_4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v1

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->objGen:I

    .line 14
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 15
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    const-string v2, "obj"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_5

    .line 16
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v2, v3, [Ljava/lang/Object;

    const-string v8, "token.obj.expected"

    invoke-static {v8, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 17
    :cond_5
    :try_start_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    .line 18
    :goto_0
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v2}, Ljava/util/ArrayList;->size()I

    move-result v2

    if-ge v3, v2, :cond_6

    .line 19
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->strings:Ljava/util/ArrayList;

    invoke-virtual {v2, v3}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfString;

    .line 20
    invoke-virtual {v2, p0}, Lcom/itextpdf/text/pdf/PdfString;->decrypt(Lcom/itextpdf/text/pdf/PdfReader;)V

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 21
    :cond_6
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v2

    if-eqz v2, :cond_7

    .line 22
    move-object v2, v1

    check-cast v2, Lcom/itextpdf/text/pdf/PRStream;

    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/PdfReader;->checkPRStreamLength(Lcom/itextpdf/text/pdf/PRStream;)V
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    :cond_7
    move-object v4, v1

    goto :goto_1

    :catch_0
    move-exception v1

    .line 23
    sget-boolean v2, Lcom/itextpdf/text/pdf/PdfReader;->debugmode:Z

    if-eqz v2, :cond_a

    .line 24
    sget-object v2, Lcom/itextpdf/text/pdf/PdfReader;->LOGGER:Lcom/itextpdf/text/log/Logger;

    sget-object v3, Lcom/itextpdf/text/log/Level;->ERROR:Lcom/itextpdf/text/log/Level;

    invoke-interface {v2, v3}, Lcom/itextpdf/text/log/Logger;->isLogging(Lcom/itextpdf/text/log/Level;)Z

    move-result v3

    if-eqz v3, :cond_8

    .line 25
    invoke-virtual {v1}, Ljava/io/IOException;->getMessage()Ljava/lang/String;

    move-result-object v3

    invoke-interface {v2, v3, v1}, Lcom/itextpdf/text/log/Logger;->error(Ljava/lang/String;Ljava/lang/Exception;)V

    .line 26
    :cond_8
    :goto_1
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    aget-wide v2, v1, v7

    cmp-long v7, v2, v5

    if-lez v7, :cond_9

    .line 27
    check-cast v4, Lcom/itextpdf/text/pdf/PRStream;

    aget-wide v0, v1, v0

    long-to-int v1, v0

    invoke-virtual {p0, v4, v1}, Lcom/itextpdf/text/pdf/PdfReader;->readOneObjStm(Lcom/itextpdf/text/pdf/PRStream;I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    .line 28
    :cond_9
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0, p1, v4}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    return-object v4

    .line 29
    :cond_a
    throw v1
.end method

.method public readXRefStream(J)Z
    .locals 24

    move-object/from16 v0, p0

    .line 1
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    move-wide/from16 v2, p1

    invoke-virtual {v1, v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 2
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result v1

    const/4 v2, 0x0

    if-nez v1, :cond_0

    return v2

    .line 3
    :cond_0
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    sget-object v3, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-eq v1, v3, :cond_1

    return v2

    .line 4
    :cond_1
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v1

    .line 5
    iget-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result v4

    if-eqz v4, :cond_1b

    iget-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v4

    if-eq v4, v3, :cond_2

    goto/16 :goto_c

    .line 6
    :cond_2
    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    move-result v3

    if-eqz v3, :cond_1a

    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v3

    const-string v4, "obj"

    invoke-virtual {v3, v4}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_3

    goto/16 :goto_b

    .line 7
    :cond_3
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    .line 8
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isStream()Z

    move-result v4

    if-eqz v4, :cond_19

    .line 9
    check-cast v3, Lcom/itextpdf/text/pdf/PRStream;

    .line 10
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->XREF:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v4

    if-nez v4, :cond_4

    return v2

    .line 11
    :cond_4
    iget-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    if-nez v4, :cond_5

    .line 12
    new-instance v4, Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/PdfDictionary;-><init>()V

    iput-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 13
    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->putAll(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    .line 14
    :cond_5
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->LENGTH:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v4

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PRStream;->setLength(I)V

    .line 15
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->SIZE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v4

    .line 16
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->INDEX:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    const/4 v6, 0x2

    const/4 v7, 0x1

    if-nez v5, :cond_6

    .line 17
    new-instance v5, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-direct {v5}, Lcom/itextpdf/text/pdf/PdfArray;-><init>()V

    new-array v8, v6, [I

    aput v2, v8, v2

    aput v4, v8, v7

    .line 18
    invoke-virtual {v5, v8}, Lcom/itextpdf/text/pdf/PdfArray;->add([I)Z

    goto :goto_0

    .line 19
    :cond_6
    check-cast v5, Lcom/itextpdf/text/pdf/PdfArray;

    .line 20
    :goto_0
    sget-object v8, Lcom/itextpdf/text/pdf/PdfName;->W:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    check-cast v8, Lcom/itextpdf/text/pdf/PdfArray;

    .line 21
    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->PREV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v9}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    if-eqz v9, :cond_7

    .line 22
    check-cast v9, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/PdfNumber;->longValue()J

    move-result-wide v12

    goto :goto_1

    :cond_7
    const-wide/16 v12, -0x1

    :goto_1
    mul-int/lit8 v4, v4, 0x2

    .line 23
    invoke-direct {v0, v4}, Lcom/itextpdf/text/pdf/PdfReader;->ensureXrefSize(I)V

    .line 24
    iget-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->objStmMark:Ljava/util/HashMap;

    if-nez v4, :cond_8

    iget-boolean v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-nez v4, :cond_8

    .line 25
    new-instance v4, Ljava/util/HashMap;

    invoke-direct {v4}, Ljava/util/HashMap;-><init>()V

    iput-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->objStmMark:Ljava/util/HashMap;

    .line 26
    :cond_8
    iget-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    if-nez v4, :cond_9

    iget-boolean v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-eqz v4, :cond_9

    .line 27
    new-instance v4, Lcom/itextpdf/text/pdf/LongHashtable;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/LongHashtable;-><init>()V

    iput-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    .line 28
    :cond_9
    iget-object v4, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFile()Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;

    move-result-object v4

    invoke-static {v3, v4}, Lcom/itextpdf/text/pdf/PdfReader;->getStreamBytes(Lcom/itextpdf/text/pdf/PRStream;Lcom/itextpdf/text/pdf/RandomAccessFileOrArray;)[B

    move-result-object v3

    const/4 v4, 0x3

    new-array v9, v4, [I

    const/4 v14, 0x0

    :goto_2
    if-ge v14, v4, :cond_a

    .line 29
    invoke-virtual {v8, v14}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v15

    invoke-virtual {v15}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v15

    aput v15, v9, v14

    add-int/lit8 v14, v14, 0x1

    goto :goto_2

    :cond_a
    const/4 v4, 0x0

    const/4 v8, 0x0

    .line 30
    :goto_3
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v14

    if-ge v4, v14, :cond_16

    .line 31
    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v14

    invoke-virtual {v14}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v14

    add-int/lit8 v15, v4, 0x1

    .line 32
    invoke-virtual {v5, v15}, Lcom/itextpdf/text/pdf/PdfArray;->getAsNumber(I)Lcom/itextpdf/text/pdf/PdfNumber;

    move-result-object v15

    invoke-virtual {v15}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v15

    add-int v16, v14, v15

    mul-int/lit8 v10, v16, 0x2

    .line 33
    invoke-direct {v0, v10}, Lcom/itextpdf/text/pdf/PdfReader;->ensureXrefSize(I)V

    :goto_4
    add-int/lit8 v10, v15, -0x1

    if-lez v15, :cond_15

    .line 34
    aget v11, v9, v2

    if-lez v11, :cond_b

    const/4 v11, 0x0

    const/4 v15, 0x0

    .line 35
    :goto_5
    aget v6, v9, v2

    if-ge v11, v6, :cond_c

    shl-int/lit8 v6, v15, 0x8

    add-int/lit8 v15, v8, 0x1

    .line 36
    aget-byte v8, v3, v8

    and-int/lit16 v8, v8, 0xff

    add-int/2addr v6, v8

    add-int/lit8 v11, v11, 0x1

    move v8, v15

    move v15, v6

    goto :goto_5

    :cond_b
    const/4 v15, 0x1

    :cond_c
    move-object/from16 v19, v3

    const-wide/16 v2, 0x0

    const/4 v6, 0x0

    .line 37
    :goto_6
    aget v11, v9, v7

    if-ge v6, v11, :cond_d

    const/16 v11, 0x8

    shl-long/2addr v2, v11

    add-int/lit8 v11, v8, 0x1

    .line 38
    aget-byte v8, v19, v8

    and-int/lit16 v8, v8, 0xff

    int-to-long v7, v8

    add-long/2addr v2, v7

    add-int/lit8 v6, v6, 0x1

    move v8, v11

    const/4 v7, 0x1

    goto :goto_6

    :cond_d
    move-object/from16 v20, v5

    const/4 v6, 0x0

    const/4 v7, 0x0

    const/4 v11, 0x2

    .line 39
    :goto_7
    aget v5, v9, v11

    if-ge v6, v5, :cond_e

    shl-int/lit8 v5, v7, 0x8

    add-int/lit8 v7, v8, 0x1

    .line 40
    aget-byte v8, v19, v8

    and-int/lit16 v8, v8, 0xff

    add-int/2addr v5, v8

    add-int/lit8 v6, v6, 0x1

    move v8, v7

    const/4 v11, 0x2

    move v7, v5

    goto :goto_7

    :cond_e
    mul-int/lit8 v5, v14, 0x2

    .line 41
    iget-object v6, v0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    aget-wide v21, v6, v5

    const-wide/16 v17, 0x0

    cmp-long v11, v21, v17

    if-nez v11, :cond_14

    add-int/lit8 v11, v5, 0x1

    aget-wide v21, v6, v11

    cmp-long v23, v21, v17

    if-nez v23, :cond_14

    if-eqz v15, :cond_13

    move/from16 v21, v8

    const/4 v8, 0x1

    if-eq v15, v8, :cond_12

    const/4 v8, 0x2

    if-eq v15, v8, :cond_f

    goto :goto_8

    :cond_f
    move-object v15, v9

    int-to-long v8, v7

    .line 42
    aput-wide v8, v6, v5

    .line 43
    aput-wide v2, v6, v11

    .line 44
    iget-boolean v5, v0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-eqz v5, :cond_10

    .line 45
    iget-object v5, v0, Lcom/itextpdf/text/pdf/PdfReader;->objStmToOffset:Lcom/itextpdf/text/pdf/LongHashtable;

    const-wide/16 v6, 0x0

    invoke-virtual {v5, v2, v3, v6, v7}, Lcom/itextpdf/text/pdf/LongHashtable;->put(JJ)J

    goto :goto_9

    :cond_10
    long-to-int v3, v2

    .line 46
    invoke-static {v3}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    .line 47
    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfReader;->objStmMark:Ljava/util/HashMap;

    invoke-virtual {v3, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/IntHashtable;

    if-nez v3, :cond_11

    .line 48
    new-instance v3, Lcom/itextpdf/text/pdf/IntHashtable;

    invoke-direct {v3}, Lcom/itextpdf/text/pdf/IntHashtable;-><init>()V

    const/4 v5, 0x1

    .line 49
    invoke-virtual {v3, v7, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    .line 50
    iget-object v6, v0, Lcom/itextpdf/text/pdf/PdfReader;->objStmMark:Ljava/util/HashMap;

    invoke-virtual {v6, v2, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_9

    :cond_11
    const/4 v5, 0x1

    .line 51
    invoke-virtual {v3, v7, v5}, Lcom/itextpdf/text/pdf/IntHashtable;->put(II)I

    goto :goto_9

    :cond_12
    move-object v15, v9

    .line 52
    aput-wide v2, v6, v5

    goto :goto_9

    :cond_13
    move/from16 v21, v8

    move-object v15, v9

    const-wide/16 v2, -0x1

    .line 53
    aput-wide v2, v6, v5

    goto :goto_9

    :cond_14
    move/from16 v21, v8

    :goto_8
    move-object v15, v9

    :goto_9
    add-int/lit8 v14, v14, 0x1

    move-object v9, v15

    move-object/from16 v3, v19

    move-object/from16 v5, v20

    move/from16 v8, v21

    const/4 v2, 0x0

    const/4 v6, 0x2

    const/4 v7, 0x1

    move v15, v10

    goto/16 :goto_4

    :cond_15
    move-object/from16 v19, v3

    move-object/from16 v20, v5

    move-object v15, v9

    add-int/lit8 v4, v4, 0x2

    const/4 v2, 0x0

    const/4 v6, 0x2

    const/4 v7, 0x1

    goto/16 :goto_3

    :cond_16
    const/4 v2, 0x2

    mul-int/lit8 v1, v1, 0x2

    add-int/lit8 v2, v1, 0x1

    .line 54
    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    array-length v4, v3

    if-ge v2, v4, :cond_17

    aget-wide v4, v3, v1

    const-wide/16 v6, 0x0

    cmp-long v8, v4, v6

    if-nez v8, :cond_17

    aget-wide v4, v3, v2

    cmp-long v2, v4, v6

    if-nez v2, :cond_17

    const-wide/16 v4, -0x1

    .line 55
    aput-wide v4, v3, v1

    goto :goto_a

    :cond_17
    const-wide/16 v4, -0x1

    :goto_a
    cmp-long v1, v12, v4

    if-nez v1, :cond_18

    const/4 v1, 0x1

    return v1

    .line 56
    :cond_18
    invoke-virtual {v0, v12, v13}, Lcom/itextpdf/text/pdf/PdfReader;->readXRefStream(J)Z

    move-result v1

    return v1

    :cond_19
    const/4 v1, 0x0

    return v1

    :cond_1a
    :goto_b
    const/4 v1, 0x0

    return v1

    :cond_1b
    :goto_c
    const/4 v1, 0x0

    return v1
.end method

.method public readXref()V
    .locals 7

    const/4 v0, 0x0

    .line 1
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->hybridXref:Z

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->newXrefType:Z

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStartxref()J

    move-result-wide v2

    invoke-virtual {v1, v2, v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 4
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    .line 5
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v1

    const-string v2, "startxref"

    invoke-virtual {v1, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_4

    .line 6
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    .line 7
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v1

    sget-object v2, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-ne v1, v2, :cond_3

    .line 8
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PRTokeniser;->longValue()J

    move-result-wide v1

    .line 9
    iput-wide v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXref:J

    .line 10
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v3

    iput-wide v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->eofPos:J

    .line 11
    :try_start_0
    invoke-virtual {p0, v1, v2}, Lcom/itextpdf/text/pdf/PdfReader;->readXRefStream(J)Z

    move-result v3

    if-eqz v3, :cond_0

    const/4 v3, 0x1

    .line 12
    iput-boolean v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->newXrefType:Z
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    return-void

    :catch_0
    :cond_0
    const/4 v3, 0x0

    .line 13
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    .line 14
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3, v1, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 15
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readXrefSection()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 16
    :goto_0
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->PREV:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfNumber;

    if-nez v3, :cond_1

    return-void

    .line 17
    :cond_1
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->longValue()J

    move-result-wide v4

    cmp-long v6, v4, v1

    if-eqz v6, :cond_2

    .line 18
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfNumber;->longValue()J

    move-result-wide v1

    .line 19
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3, v1, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 20
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readXrefSection()Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    goto :goto_0

    .line 21
    :cond_2
    new-instance v1, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v0, v0, [Ljava/lang/Object;

    const-string v2, "trailer.prev.entry.points.to.its.own.cross.reference.section"

    invoke-static {v2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 22
    :cond_3
    new-instance v1, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v0, v0, [Ljava/lang/Object;

    const-string v2, "startxref.is.not.followed.by.a.number"

    invoke-static {v2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v1

    .line 23
    :cond_4
    new-instance v1, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v0, v0, [Ljava/lang/Object;

    const-string v2, "startxref.not.found"

    invoke-static {v2, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {v1, v0}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v1
.end method

.method public readXrefSection()Lcom/itextpdf/text/pdf/PdfDictionary;
    .locals 12

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v0

    const-string v1, "xref"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v1, 0x0

    if-nez v0, :cond_0

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v2, v1, [Ljava/lang/Object;

    const-string v3, "xref.subsection.not.found"

    invoke-static {v3, v2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 4
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 5
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v0

    const-string v2, "trailer"

    invoke-virtual {v0, v2}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v0

    const/4 v2, 0x1

    if-eqz v0, :cond_2

    .line 6
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 7
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->SIZE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    .line 8
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    mul-int/lit8 v1, v1, 0x2

    invoke-direct {p0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->ensureXrefSize(I)V

    .line 9
    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->XREFSTM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    if-eqz v1, :cond_1

    .line 10
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfObject;->isNumber()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 11
    check-cast v1, Lcom/itextpdf/text/pdf/PdfNumber;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfNumber;->intValue()I

    move-result v1

    int-to-long v3, v1

    .line 12
    :try_start_0
    invoke-virtual {p0, v3, v4}, Lcom/itextpdf/text/pdf/PdfReader;->readXRefStream(J)Z

    .line 13
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->newXrefType:Z

    .line 14
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->hybridXref:Z
    :try_end_0
    .catch Ljava/io/IOException; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_0

    :catch_0
    move-exception v0

    const/4 v1, 0x0

    .line 15
    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    .line 16
    throw v0

    :cond_1
    :goto_0
    return-object v0

    .line 17
    :cond_2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v0

    sget-object v3, Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;->NUMBER:Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    if-eq v0, v3, :cond_3

    .line 18
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v4, v1, [Ljava/lang/Object;

    const-string v5, "object.number.of.the.first.object.in.this.xref.subsection.not.found"

    invoke-static {v5, v4}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v0, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 19
    :cond_3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v0

    .line 20
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 21
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->getTokenType()Lcom/itextpdf/text/pdf/PRTokeniser$TokenType;

    move-result-object v4

    if-eq v4, v3, :cond_4

    .line 22
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v4, v1, [Ljava/lang/Object;

    const-string v5, "number.of.entries.in.this.xref.subsection.not.found"

    invoke-static {v5, v4}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    .line 23
    :cond_4
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v3

    add-int/2addr v3, v0

    const-wide/16 v4, 0x0

    if-ne v0, v2, :cond_6

    .line 24
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v6

    .line 25
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 26
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->longValue()J

    move-result-wide v8

    .line 27
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 28
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    move-result v2

    cmp-long v10, v8, v4

    if-nez v10, :cond_5

    const v8, 0xffff

    if-ne v2, v8, :cond_5

    add-int/lit8 v0, v0, -0x1

    add-int/lit8 v3, v3, -0x1

    .line 29
    :cond_5
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2, v6, v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    :cond_6
    mul-int/lit8 v2, v3, 0x2

    .line 30
    invoke-direct {p0, v2}, Lcom/itextpdf/text/pdf/PdfReader;->ensureXrefSize(I)V

    :goto_1
    if-ge v0, v3, :cond_0

    .line 31
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 32
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->longValue()J

    move-result-wide v6

    .line 33
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    .line 34
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->intValue()I

    .line 35
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextValidToken()V

    mul-int/lit8 v2, v0, 0x2

    .line 36
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v8

    const-string v9, "n"

    invoke-virtual {v8, v9}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v8

    if-eqz v8, :cond_7

    .line 37
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    aget-wide v9, v8, v2

    cmp-long v11, v9, v4

    if-nez v11, :cond_9

    add-int/lit8 v9, v2, 0x1

    aget-wide v9, v8, v9

    cmp-long v11, v9, v4

    if-nez v11, :cond_9

    .line 38
    aput-wide v6, v8, v2

    goto :goto_2

    .line 39
    :cond_7
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->getStringValue()Ljava/lang/String;

    move-result-object v6

    const-string v7, "f"

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_8

    .line 40
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    aget-wide v7, v6, v2

    cmp-long v9, v7, v4

    if-nez v9, :cond_9

    add-int/lit8 v7, v2, 0x1

    aget-wide v7, v6, v7

    cmp-long v9, v7, v4

    if-nez v9, :cond_9

    const-wide/16 v7, -0x1

    .line 41
    aput-wide v7, v6, v2

    goto :goto_2

    .line 42
    :cond_8
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    new-array v6, v1, [Ljava/lang/Object;

    const-string v7, "invalid.cross.reference.entry.in.this.xref.subsection"

    invoke-static {v7, v6}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v2, v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->throwError(Ljava/lang/String;)V

    :cond_9
    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1
.end method

.method public rebuildXref()V
    .locals 18

    move-object/from16 v0, p0

    const/4 v1, 0x0

    .line 1
    iput-boolean v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->hybridXref:Z

    .line 2
    iput-boolean v1, v0, Lcom/itextpdf/text/pdf/PdfReader;->newXrefType:Z

    .line 3
    iget-object v2, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const-wide/16 v3, 0x0

    invoke-virtual {v2, v3, v4}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    const/16 v2, 0x400

    new-array v2, v2, [[J

    const/4 v5, 0x0

    .line 4
    iput-object v5, v0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    const/16 v6, 0x40

    new-array v6, v6, [B

    .line 5
    :goto_0
    iget-object v7, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v7

    .line 6
    iget-object v9, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    const/4 v10, 0x1

    invoke-virtual {v9, v6, v10}, Lcom/itextpdf/text/pdf/PRTokeniser;->readLineSegment([BZ)Z

    move-result v9

    const-wide/16 v11, 0x2

    if-nez v9, :cond_3

    .line 7
    iget-object v5, v0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    if-eqz v5, :cond_2

    mul-long v11, v11, v3

    long-to-int v5, v11

    .line 8
    new-array v5, v5, [J

    iput-object v5, v0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    const/4 v5, 0x0

    :goto_1
    int-to-long v6, v5

    cmp-long v8, v6, v3

    if-gez v8, :cond_1

    .line 9
    aget-object v6, v2, v5

    if-eqz v6, :cond_0

    .line 10
    iget-object v7, v0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    mul-int/lit8 v8, v5, 0x2

    aget-wide v9, v6, v1

    aput-wide v9, v7, v8

    :cond_0
    add-int/lit8 v5, v5, 0x1

    goto :goto_1

    :cond_1
    return-void

    .line 11
    :cond_2
    new-instance v2, Lcom/itextpdf/text/exceptions/InvalidPdfException;

    new-array v1, v1, [Ljava/lang/Object;

    const-string v3, "trailer.not.found"

    invoke-static {v3, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v2, v1}, Lcom/itextpdf/text/exceptions/InvalidPdfException;-><init>(Ljava/lang/String;)V

    throw v2

    .line 12
    :cond_3
    aget-byte v9, v6, v1

    const/16 v13, 0x74

    if-ne v9, v13, :cond_6

    .line 13
    invoke-static {v6, v5}, Lcom/itextpdf/text/pdf/PdfEncodings;->convertToString([BLjava/lang/String;)Ljava/lang/String;

    move-result-object v9

    const-string v10, "trailer"

    invoke-virtual {v9, v10}, Ljava/lang/String;->startsWith(Ljava/lang/String;)Z

    move-result v9

    if-nez v9, :cond_4

    goto :goto_0

    .line 14
    :cond_4
    iget-object v9, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v9, v7, v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    .line 15
    iget-object v7, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->nextToken()Z

    .line 16
    iget-object v7, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/PRTokeniser;->getFilePointer()J

    move-result-wide v7

    .line 17
    :try_start_0
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfReader;->readPRObject()Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v9

    check-cast v9, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 18
    sget-object v10, Lcom/itextpdf/text/pdf/PdfName;->ROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v10

    if-eqz v10, :cond_5

    .line 19
    iput-object v9, v0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    goto :goto_4

    .line 20
    :cond_5
    iget-object v9, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v9, v7, v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto :goto_4

    .line 21
    :catch_0
    iget-object v9, v0, Lcom/itextpdf/text/pdf/PdfReader;->tokens:Lcom/itextpdf/text/pdf/PRTokeniser;

    invoke-virtual {v9, v7, v8}, Lcom/itextpdf/text/pdf/PRTokeniser;->seek(J)V

    goto :goto_4

    .line 22
    :cond_6
    aget-byte v9, v6, v1

    const/16 v13, 0x30

    if-lt v9, v13, :cond_c

    aget-byte v9, v6, v1

    const/16 v13, 0x39

    if-gt v9, v13, :cond_c

    .line 23
    invoke-static {v6}, Lcom/itextpdf/text/pdf/PRTokeniser;->checkObjectStart([B)[J

    move-result-object v9

    if-nez v9, :cond_7

    goto/16 :goto_0

    .line 24
    :cond_7
    aget-wide v13, v9, v1

    .line 25
    aget-wide v15, v9, v10

    .line 26
    array-length v5, v2

    move-object/from16 v17, v2

    int-to-long v1, v5

    cmp-long v5, v13, v1

    if-ltz v5, :cond_8

    mul-long v11, v11, v13

    long-to-int v1, v11

    .line 27
    new-array v1, v1, [[J

    long-to-int v2, v3

    move-object/from16 v5, v17

    const/4 v11, 0x0

    .line 28
    invoke-static {v5, v11, v1, v11, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    move-object v2, v1

    goto :goto_2

    :cond_8
    move-object/from16 v5, v17

    move-object v2, v5

    :goto_2
    cmp-long v1, v13, v3

    if-ltz v1, :cond_9

    const-wide/16 v3, 0x1

    add-long/2addr v3, v13

    :cond_9
    long-to-int v1, v13

    .line 29
    aget-object v5, v2, v1

    if-eqz v5, :cond_b

    aget-object v5, v2, v1

    aget-wide v10, v5, v10

    cmp-long v5, v15, v10

    if-ltz v5, :cond_a

    goto :goto_3

    :cond_a
    const/4 v10, 0x0

    goto :goto_5

    :cond_b
    :goto_3
    const/4 v10, 0x0

    .line 30
    aput-wide v7, v9, v10

    .line 31
    aput-object v9, v2, v1

    goto :goto_5

    :cond_c
    :goto_4
    move-object v5, v2

    const/4 v10, 0x0

    move-object v2, v5

    :goto_5
    const/4 v1, 0x0

    const/4 v5, 0x0

    goto/16 :goto_0
.end method

.method public releaseLastXrefPartial()V
    .locals 4

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-eqz v0, :cond_0

    iget v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    const/4 v1, -0x1

    if-eq v0, v1, :cond_0

    .line 2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    const/4 v3, 0x0

    invoke-virtual {v2, v0, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    .line 3
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    :cond_0
    return-void
.end method

.method public releasePage(I)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    return-void
.end method

.method public removeAnnotations()V
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->resetReleasePage()V

    const/4 v0, 0x1

    .line 2
    :goto_0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->size()I

    move-result v1

    if-gt v0, v1, :cond_1

    .line 3
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v1

    .line 4
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-nez v3, :cond_0

    .line 5
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    goto :goto_1

    .line 6
    :cond_0
    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    :goto_1
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 7
    :cond_1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 8
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->resetReleasePage()V

    return-void
.end method

.method public removeFields()V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->resetReleasePage()V

    const/4 v0, 0x1

    const/4 v1, 0x1

    .line 2
    :goto_0
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->size()I

    move-result v2

    if-gt v1, v2, :cond_5

    .line 3
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v2

    .line 4
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v3

    if-nez v3, :cond_0

    .line 5
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    goto :goto_3

    :cond_0
    const/4 v4, 0x0

    .line 6
    :goto_1
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfArray;->size()I

    move-result v5

    if-ge v4, v5, :cond_3

    .line 7
    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfArray;->getPdfObject(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    if-eqz v5, :cond_2

    .line 8
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v6

    if-nez v6, :cond_1

    goto :goto_2

    .line 9
    :cond_1
    check-cast v5, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 10
    sget-object v6, Lcom/itextpdf/text/pdf/PdfName;->WIDGET:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v7, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v7}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v5

    invoke-virtual {v6, v5}, Lcom/itextpdf/text/pdf/PdfName;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    add-int/lit8 v5, v4, -0x1

    .line 11
    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfArray;->remove(I)Lcom/itextpdf/text/pdf/PdfObject;

    move v4, v5

    :cond_2
    :goto_2
    add-int/2addr v4, v0

    goto :goto_1

    .line 12
    :cond_3
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfArray;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_4

    .line 13
    sget-object v3, Lcom/itextpdf/text/pdf/PdfName;->ANNOTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    goto :goto_3

    .line 14
    :cond_4
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->releasePage(I)V

    :goto_3
    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 15
    :cond_5
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->ACROFORM:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 16
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->resetReleasePage()V

    return-void
.end method

.method public removeUnusedNode(Lcom/itextpdf/text/pdf/PdfObject;[Z)V
    .locals 12

    .line 1
    new-instance v0, Ljava/util/Stack;

    invoke-direct {v0}, Ljava/util/Stack;-><init>()V

    .line 2
    invoke-virtual {v0, p1}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    .line 3
    :cond_0
    :goto_0
    invoke-virtual {v0}, Ljava/util/Stack;->empty()Z

    move-result p1

    if-nez p1, :cond_e

    .line 4
    invoke-virtual {v0}, Ljava/util/Stack;->pop()Ljava/lang/Object;

    move-result-object p1

    if-nez p1, :cond_1

    goto :goto_0

    .line 5
    :cond_1
    instance-of v1, p1, Lcom/itextpdf/text/pdf/PdfObject;

    const/4 v2, 0x2

    const/4 v3, 0x0

    const/4 v4, 0x0

    const/4 v5, 0x1

    if-eqz v1, :cond_5

    .line 6
    check-cast p1, Lcom/itextpdf/text/pdf/PdfObject;

    .line 7
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->type()I

    move-result v1

    const/4 v6, 0x5

    if-eq v1, v6, :cond_4

    const/4 v6, 0x6

    if-eq v1, v6, :cond_3

    const/4 v6, 0x7

    if-eq v1, v6, :cond_3

    const/16 v2, 0xa

    if-eq v1, v2, :cond_2

    goto :goto_0

    .line 8
    :cond_2
    check-cast p1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    .line 9
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v1

    .line 10
    aget-boolean v2, p2, v1

    if-nez v2, :cond_0

    .line 11
    aput-boolean v5, p2, v1

    .line 12
    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-virtual {v0, p1}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 13
    :cond_3
    check-cast p1, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 14
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->size()I

    move-result v1

    new-array v1, v1, [Lcom/itextpdf/text/pdf/PdfName;

    .line 15
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getKeys()Ljava/util/Set;

    move-result-object v6

    invoke-interface {v6, v1}, Ljava/util/Set;->toArray([Ljava/lang/Object;)[Ljava/lang/Object;

    move-object v6, v3

    const/4 v7, 0x0

    goto :goto_1

    .line 16
    :cond_4
    check-cast p1, Lcom/itextpdf/text/pdf/PdfArray;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfArray;->getArrayList()Ljava/util/ArrayList;

    move-result-object p1

    move-object v1, v3

    move-object v6, v1

    const/4 v7, 0x0

    move-object v3, p1

    move-object p1, v6

    goto :goto_1

    .line 17
    :cond_5
    check-cast p1, [Ljava/lang/Object;

    .line 18
    aget-object v1, p1, v4

    instance-of v1, v1, Ljava/util/ArrayList;

    if-eqz v1, :cond_6

    .line 19
    aget-object v1, p1, v4

    check-cast v1, Ljava/util/ArrayList;

    .line 20
    aget-object v6, p1, v5

    check-cast v6, Ljava/lang/Integer;

    invoke-virtual {v6}, Ljava/lang/Integer;->intValue()I

    move-result v6

    move v7, v6

    move-object v6, p1

    move-object p1, v3

    move-object v3, v1

    move-object v1, p1

    goto :goto_1

    .line 21
    :cond_6
    aget-object v1, p1, v4

    check-cast v1, [Lcom/itextpdf/text/pdf/PdfName;

    .line 22
    aget-object v6, p1, v5

    check-cast v6, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 23
    aget-object v7, p1, v2

    check-cast v7, Ljava/lang/Integer;

    invoke-virtual {v7}, Ljava/lang/Integer;->intValue()I

    move-result v7

    move-object v11, v6

    move-object v6, p1

    move-object p1, v11

    :goto_1
    if-eqz v3, :cond_a

    .line 24
    :goto_2
    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result p1

    if-ge v7, p1, :cond_0

    .line 25
    invoke-virtual {v3, v7}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfObject;

    .line 26
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v1

    if-eqz v1, :cond_8

    .line 27
    move-object v1, p1

    check-cast v1, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v1

    .line 28
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v8}, Ljava/util/ArrayList;->size()I

    move-result v8

    if-ge v1, v8, :cond_7

    iget-boolean v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-nez v8, :cond_8

    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v8, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    if-nez v1, :cond_8

    .line 29
    :cond_7
    sget-object p1, Lcom/itextpdf/text/pdf/PdfNull;->PDFNULL:Lcom/itextpdf/text/pdf/PdfNull;

    invoke-virtual {v3, v7, p1}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v7, v7, 0x1

    goto :goto_2

    :cond_8
    if-nez v6, :cond_9

    new-array v1, v2, [Ljava/lang/Object;

    aput-object v3, v1, v4

    add-int/lit8 v7, v7, 0x1

    .line 30
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v5

    invoke-virtual {v0, v1}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_3

    :cond_9
    add-int/lit8 v7, v7, 0x1

    .line 31
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v1

    aput-object v1, v6, v5

    .line 32
    invoke-virtual {v0, v6}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    .line 33
    :goto_3
    invoke-virtual {v0, p1}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    goto/16 :goto_0

    .line 34
    :cond_a
    :goto_4
    array-length v3, v1

    if-ge v7, v3, :cond_0

    .line 35
    aget-object v3, v1, v7

    .line 36
    invoke-virtual {p1, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v8

    .line 37
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfObject;->isIndirect()Z

    move-result v9

    if-eqz v9, :cond_c

    .line 38
    move-object v9, v8

    check-cast v9, Lcom/itextpdf/text/pdf/PRIndirectReference;

    invoke-virtual {v9}, Lcom/itextpdf/text/pdf/PdfIndirectReference;->getNumber()I

    move-result v9

    if-ltz v9, :cond_b

    .line 39
    iget-object v10, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v10}, Ljava/util/ArrayList;->size()I

    move-result v10

    if-ge v9, v10, :cond_b

    iget-boolean v10, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    if-nez v10, :cond_c

    iget-object v10, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v10, v9}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v9

    if-nez v9, :cond_c

    .line 40
    :cond_b
    sget-object v8, Lcom/itextpdf/text/pdf/PdfNull;->PDFNULL:Lcom/itextpdf/text/pdf/PdfNull;

    invoke-virtual {p1, v3, v8}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    add-int/lit8 v7, v7, 0x1

    goto :goto_4

    :cond_c
    if-nez v6, :cond_d

    const/4 v3, 0x3

    new-array v3, v3, [Ljava/lang/Object;

    aput-object v1, v3, v4

    aput-object p1, v3, v5

    add-int/lit8 v7, v7, 0x1

    .line 41
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    aput-object p1, v3, v2

    invoke-virtual {v0, v3}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_5

    :cond_d
    add-int/lit8 v7, v7, 0x1

    .line 42
    invoke-static {v7}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object p1

    aput-object p1, v6, v2

    .line 43
    invoke-virtual {v0, v6}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    .line 44
    :goto_5
    invoke-virtual {v0, v8}, Ljava/util/Stack;->push(Ljava/lang/Object;)Ljava/lang/Object;

    goto/16 :goto_0

    :cond_e
    return-void
.end method

.method public removeUnusedObjects()I
    .locals 10

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    new-array v1, v0, [Z

    .line 2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {p0, v2, v1}, Lcom/itextpdf/text/pdf/PdfReader;->removeUnusedNode(Lcom/itextpdf/text/pdf/PdfObject;[Z)V

    .line 3
    iget-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->partial:Z

    const/4 v3, 0x0

    const/4 v4, 0x1

    const/4 v5, 0x0

    if-eqz v2, :cond_1

    const/4 v2, 0x1

    :goto_0
    if-ge v2, v0, :cond_3

    .line 4
    aget-boolean v6, v1, v2

    if-nez v6, :cond_0

    .line 5
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->xref:[J

    mul-int/lit8 v7, v2, 0x2

    const-wide/16 v8, -0x1

    aput-wide v8, v6, v7

    add-int/2addr v7, v4

    const-wide/16 v8, 0x0

    .line 6
    aput-wide v8, v6, v7

    .line 7
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v6, v2, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v5, v5, 0x1

    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    :goto_1
    if-ge v4, v0, :cond_3

    .line 8
    aget-boolean v2, v1, v4

    if-nez v2, :cond_2

    .line 9
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v2, v4, v3}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v5, v5, 0x1

    :cond_2
    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    :cond_3
    return v5
.end method

.method public removeUsageRights()V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v1, Lcom/itextpdf/text/pdf/PdfName;->PERMS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v0

    if-nez v0, :cond_0

    return-void

    .line 2
    :cond_0
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->UR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 3
    sget-object v2, Lcom/itextpdf/text/pdf/PdfName;->UR3:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    .line 4
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->size()I

    move-result v0

    if-nez v0, :cond_1

    .line 5
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfDictionary;->remove(Lcom/itextpdf/text/pdf/PdfName;)V

    :cond_1
    return-void
.end method

.method public resetLastXrefPartial()V
    .locals 1

    const/4 v0, -0x1

    .line 1
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->lastXrefPartial:I

    return-void
.end method

.method public resetReleasePage()V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->resetReleasePage()V

    return-void
.end method

.method public selectPages(Ljava/lang/String;)V
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->getNumberOfPages()I

    move-result v0

    invoke-static {p1, v0}, Lcom/itextpdf/text/pdf/SequenceList;->expand(Ljava/lang/String;I)Ljava/util/List;

    move-result-object p1

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->selectPages(Ljava/util/List;)V

    return-void
.end method

.method public selectPages(Ljava/util/List;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/Integer;",
            ">;)V"
        }
    .end annotation

    const/4 v0, 0x1

    .line 2
    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfReader;->selectPages(Ljava/util/List;Z)V

    return-void
.end method

.method public selectPages(Ljava/util/List;Z)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Ljava/lang/Integer;",
            ">;Z)V"
        }
    .end annotation

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-static {v0, p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->access$100(Lcom/itextpdf/text/pdf/PdfReader$PageRefs;Ljava/util/List;)V

    if-eqz p2, :cond_0

    .line 4
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfReader;->removeUnusedObjects()I

    :cond_0
    return-void
.end method

.method public setAppendable(Z)V
    .locals 1

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->appendable:Z

    if-eqz p1, :cond_0

    .line 2
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->trailer:Lcom/itextpdf/text/pdf/PdfDictionary;

    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->ROOT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object p1

    invoke-static {p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObject(Lcom/itextpdf/text/pdf/PdfObject;)Lcom/itextpdf/text/pdf/PdfObject;

    :cond_0
    return-void
.end method

.method public setPageContent(I[B)V
    .locals 1

    const/4 v0, -0x1

    .line 1
    invoke-virtual {p0, p1, p2, v0}, Lcom/itextpdf/text/pdf/PdfReader;->setPageContent(I[BI)V

    return-void
.end method

.method public setPageContent(I[BI)V
    .locals 1

    const/4 v0, 0x0

    .line 2
    invoke-virtual {p0, p1, p2, p3, v0}, Lcom/itextpdf/text/pdf/PdfReader;->setPageContent(I[BIZ)V

    return-void
.end method

.method public setPageContent(I[BIZ)V
    .locals 3

    .line 3
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->getPageN(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object p1

    if-nez p1, :cond_0

    return-void

    .line 4
    :cond_0
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->CONTENTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfDictionary;->get(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v1

    const/4 v2, -0x1

    .line 5
    iput v2, p0, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    if-eqz p4, :cond_1

    .line 6
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->killXref(Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 7
    :cond_1
    iget p4, p0, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    if-ne p4, v2, :cond_2

    .line 8
    iget-object p4, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    const/4 v1, 0x0

    invoke-virtual {p4, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 9
    iget-object p4, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {p4}, Ljava/util/ArrayList;->size()I

    move-result p4

    add-int/lit8 p4, p4, -0x1

    iput p4, p0, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    .line 10
    :cond_2
    new-instance p4, Lcom/itextpdf/text/pdf/PRIndirectReference;

    iget v1, p0, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    invoke-direct {p4, p0, v1}, Lcom/itextpdf/text/pdf/PRIndirectReference;-><init>(Lcom/itextpdf/text/pdf/PdfReader;I)V

    invoke-virtual {p1, v0, p4}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 11
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    iget p4, p0, Lcom/itextpdf/text/pdf/PdfReader;->freeXref:I

    new-instance v0, Lcom/itextpdf/text/pdf/PRStream;

    invoke-direct {v0, p0, p2, p3}, Lcom/itextpdf/text/pdf/PRStream;-><init>(Lcom/itextpdf/text/pdf/PdfReader;[BI)V

    invoke-virtual {p1, p4, v0}, Ljava/util/ArrayList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method public setTampered(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->tampered:Z

    .line 2
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->pageRefs:Lcom/itextpdf/text/pdf/PdfReader$PageRefs;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfReader$PageRefs;->keepPages()V

    return-void
.end method

.method public setViewerPreferences(I)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->viewerPreferences:Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;->setViewerPreferences(I)V

    .line 2
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfReader;->viewerPreferences:Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfReader;->setViewerPreferences(Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;)V

    return-void
.end method

.method public setViewerPreferences(Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;)V
    .locals 1

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfReader;->catalog:Lcom/itextpdf/text/pdf/PdfDictionary;

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/internal/PdfViewerPreferencesImp;->addToCatalog(Lcom/itextpdf/text/pdf/PdfDictionary;)V

    return-void
.end method

.method public shuffleSubsetNames()I
    .locals 12

    const/4 v0, 0x0

    const/4 v1, 0x1

    const/4 v2, 0x0

    .line 1
    :goto_0
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfReader;->xrefObj:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-ge v1, v3, :cond_c

    .line 2
    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfReader;->getPdfObjectRelease(I)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v3

    if-eqz v3, :cond_b

    .line 3
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfObject;->isDictionary()Z

    move-result v4

    if-nez v4, :cond_0

    goto/16 :goto_2

    .line 4
    :cond_0
    check-cast v3, Lcom/itextpdf/text/pdf/PdfDictionary;

    .line 5
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->TYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->FONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v4

    if-nez v4, :cond_1

    goto/16 :goto_2

    .line 6
    :cond_1
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->SUBTYPE:Lcom/itextpdf/text/pdf/PdfName;

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->TYPE1:Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v5

    const/4 v6, 0x7

    if-nez v5, :cond_8

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->MMTYPE1:Lcom/itextpdf/text/pdf/PdfName;

    .line 7
    invoke-static {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v5

    if-nez v5, :cond_8

    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->TRUETYPE:Lcom/itextpdf/text/pdf/PdfName;

    .line 8
    invoke-static {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v5

    if-eqz v5, :cond_2

    goto/16 :goto_1

    .line 9
    :cond_2
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->TYPE0:Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfReader;->existsName(Lcom/itextpdf/text/pdf/PdfDictionary;Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfName;)Z

    move-result v4

    if-eqz v4, :cond_b

    .line 10
    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getSubsetPrefix(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;

    move-result-object v4

    .line 11
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->DESCENDANTFONTS:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsArray(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfArray;

    move-result-object v5

    if-nez v5, :cond_3

    goto/16 :goto_2

    .line 12
    :cond_3
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfArray;->isEmpty()Z

    move-result v7

    if-eqz v7, :cond_4

    goto/16 :goto_2

    .line 13
    :cond_4
    invoke-virtual {v5, v0}, Lcom/itextpdf/text/pdf/PdfArray;->getAsDict(I)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v5

    .line 14
    invoke-static {v5}, Lcom/itextpdf/text/pdf/PdfReader;->getSubsetPrefix(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;

    move-result-object v7

    if-nez v7, :cond_5

    goto/16 :goto_2

    .line 15
    :cond_5
    invoke-static {}, Lcom/itextpdf/text/pdf/BaseFont;->createSubsetPrefix()Ljava/lang/String;

    move-result-object v8

    if-eqz v4, :cond_6

    .line 16
    sget-object v9, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v10, Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {v8}, Landroidx/activity/c;->a(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v11

    invoke-virtual {v4, v6}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v11, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v11}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v10, v4}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    invoke-virtual {v3, v9, v10}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 17
    :cond_6
    invoke-direct {p0, v1, v3}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    .line 18
    new-instance v3, Lcom/itextpdf/text/pdf/PdfName;

    invoke-static {v8}, Landroidx/activity/c;->a(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v4

    invoke-virtual {v7, v6}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v6

    invoke-virtual {v4, v6}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    invoke-direct {v3, v4}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    .line 19
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v4, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    add-int/lit8 v2, v2, 0x1

    .line 20
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v5, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v4

    if-nez v4, :cond_7

    goto :goto_2

    .line 21
    :cond_7
    sget-object v5, Lcom/itextpdf/text/pdf/PdfName;->FONTNAME:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v4, v5, v3}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    goto :goto_2

    .line 22
    :cond_8
    :goto_1
    invoke-static {v3}, Lcom/itextpdf/text/pdf/PdfReader;->getSubsetPrefix(Lcom/itextpdf/text/pdf/PdfDictionary;)Ljava/lang/String;

    move-result-object v4

    if-nez v4, :cond_9

    goto :goto_2

    .line 23
    :cond_9
    new-instance v5, Ljava/lang/StringBuilder;

    invoke-direct {v5}, Ljava/lang/StringBuilder;-><init>()V

    invoke-static {}, Lcom/itextpdf/text/pdf/BaseFont;->createSubsetPrefix()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v5, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v4, v6}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v4

    invoke-virtual {v5, v4}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v5}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v4

    .line 24
    new-instance v5, Lcom/itextpdf/text/pdf/PdfName;

    invoke-direct {v5, v4}, Lcom/itextpdf/text/pdf/PdfName;-><init>(Ljava/lang/String;)V

    .line 25
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->BASEFONT:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    .line 26
    invoke-direct {p0, v1, v3}, Lcom/itextpdf/text/pdf/PdfReader;->setXrefPartialObject(ILcom/itextpdf/text/pdf/PdfObject;)V

    add-int/lit8 v2, v2, 0x1

    .line 27
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FONTDESCRIPTOR:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4}, Lcom/itextpdf/text/pdf/PdfDictionary;->getAsDict(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfDictionary;

    move-result-object v3

    if-nez v3, :cond_a

    goto :goto_2

    .line 28
    :cond_a
    sget-object v4, Lcom/itextpdf/text/pdf/PdfName;->FONTNAME:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {v3, v4, v5}, Lcom/itextpdf/text/pdf/PdfDictionary;->put(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    :cond_b
    :goto_2
    add-int/lit8 v1, v1, 0x1

    goto/16 :goto_0

    :cond_c
    return v2
.end method
