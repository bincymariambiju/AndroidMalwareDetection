.class public Lcom/itextpdf/text/pdf/PdfPTable;
.super Ljava/lang/Object;
.source "PdfPTable.java"

# interfaces
.implements Lcom/itextpdf/text/LargeElement;
.implements Lcom/itextpdf/text/api/Spaceable;
.implements Lcom/itextpdf/text/pdf/interfaces/IAccessibleElement;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;,
        Lcom/itextpdf/text/pdf/PdfPTable$FittingRows;
    }
.end annotation


# static fields
.field public static final synthetic $assertionsDisabled:Z = false

.field public static final BACKGROUNDCANVAS:I = 0x1

.field public static final BASECANVAS:I = 0x0

.field public static final LINECANVAS:I = 0x2

.field public static final TEXTCANVAS:I = 0x3


# instance fields
.field private final LOGGER:Lcom/itextpdf/text/log/Logger;

.field public absoluteWidths:[F

.field public accessibleAttributes:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation
.end field

.field private body:Lcom/itextpdf/text/pdf/PdfPTableBody;

.field public complete:Z

.field public currentColIdx:I

.field public currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

.field public defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

.field private extendLastRow:[Z

.field private footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

.field private footerRows:I

.field private header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

.field public headerRows:I

.field private headersInEvent:Z

.field private horizontalAlignment:I

.field public id:Lcom/itextpdf/text/AccessibleElementId;

.field public isColspan:Z

.field private keepTogether:Z

.field private lockedWidth:Z

.field public loopCheck:Z

.field private numberOfWrittenRows:I

.field public paddingTop:F

.field public relativeWidths:[F

.field public role:Lcom/itextpdf/text/pdf/PdfName;

.field public rowCompleted:Z

.field public rows:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfPRow;",
            ">;"
        }
    .end annotation
.end field

.field public rowsNotChecked:Z

.field public runDirection:I

.field private skipFirstHeader:Z

.field private skipLastFooter:Z

.field public spacingAfter:F

.field public spacingBefore:F

.field private splitLate:Z

.field private splitRows:Z

.field public tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

.field public totalHeight:F

.field public totalWidth:F

.field public widthPercentage:F


# direct methods
.method public constructor <init>()V
    .locals 4

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 2
    const-class v0, Lcom/itextpdf/text/pdf/PdfPTable;

    invoke-static {v0}, Lcom/itextpdf/text/log/LoggerFactory;->getLogger(Ljava/lang/Class;)Lcom/itextpdf/text/log/Logger;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    .line 3
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    const/4 v0, 0x0

    .line 4
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    const/4 v1, 0x0

    .line 5
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    .line 6
    new-instance v2, Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 v3, 0x0

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfPCell;-><init>(Lcom/itextpdf/text/Phrase;)V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    .line 7
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/high16 v0, 0x42a00000    # 80.0f

    .line 8
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    const/4 v0, 0x1

    .line 9
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    .line 10
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    .line 11
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    .line 12
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    .line 13
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    .line 14
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    .line 15
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    const/4 v1, 0x2

    new-array v1, v1, [Z

    .line 16
    fill-array-data v1, :array_0

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    .line 17
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    .line 18
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    .line 19
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowCompleted:Z

    .line 20
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    .line 21
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    .line 22
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TABLE:Lcom/itextpdf/text/pdf/PdfName;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    .line 23
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    .line 24
    new-instance v0, Lcom/itextpdf/text/AccessibleElementId;

    invoke-direct {v0}, Lcom/itextpdf/text/AccessibleElementId;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 25
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    .line 26
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    .line 27
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    return-void

    nop

    :array_0
    .array-data 1
        0x0t
        0x0t
    .end array-data
.end method

.method public constructor <init>(I)V
    .locals 4

    .line 64
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 65
    const-class v0, Lcom/itextpdf/text/pdf/PdfPTable;

    invoke-static {v0}, Lcom/itextpdf/text/log/LoggerFactory;->getLogger(Ljava/lang/Class;)Lcom/itextpdf/text/log/Logger;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    .line 66
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    const/4 v0, 0x0

    .line 67
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    const/4 v1, 0x0

    .line 68
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    .line 69
    new-instance v2, Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 v3, 0x0

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfPCell;-><init>(Lcom/itextpdf/text/Phrase;)V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    .line 70
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/high16 v0, 0x42a00000    # 80.0f

    .line 71
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    const/4 v0, 0x1

    .line 72
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    .line 73
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    .line 74
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    .line 75
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    .line 76
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    .line 77
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    .line 78
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    const/4 v2, 0x2

    new-array v2, v2, [Z

    .line 79
    fill-array-data v2, :array_0

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    .line 80
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    .line 81
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    .line 82
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowCompleted:Z

    .line 83
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    .line 84
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    .line 85
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TABLE:Lcom/itextpdf/text/pdf/PdfName;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    .line 86
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    .line 87
    new-instance v0, Lcom/itextpdf/text/AccessibleElementId;

    invoke-direct {v0}, Lcom/itextpdf/text/AccessibleElementId;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 88
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    .line 89
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    .line 90
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    if-lez p1, :cond_1

    .line 91
    new-array v0, p1, [F

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    const/4 v0, 0x0

    :goto_0
    if-ge v0, p1, :cond_0

    .line 92
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    const/high16 v3, 0x3f800000    # 1.0f

    aput v3, v2, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 93
    :cond_0
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    array-length p1, p1

    new-array p1, p1, [F

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    .line 94
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->calculateWidths()V

    .line 95
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    array-length p1, p1

    new-array p1, p1, [Lcom/itextpdf/text/pdf/PdfPCell;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    .line 96
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->keepTogether:Z

    return-void

    .line 97
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-array v0, v1, [Ljava/lang/Object;

    const-string v1, "the.number.of.columns.in.pdfptable.constructor.must.be.greater.than.zero"

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    :array_0
    .array-data 1
        0x0t
        0x0t
    .end array-data
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfPTable;)V
    .locals 5

    .line 98
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 99
    const-class v0, Lcom/itextpdf/text/pdf/PdfPTable;

    invoke-static {v0}, Lcom/itextpdf/text/log/LoggerFactory;->getLogger(Ljava/lang/Class;)Lcom/itextpdf/text/log/Logger;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    .line 100
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    const/4 v0, 0x0

    .line 101
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    const/4 v1, 0x0

    .line 102
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    .line 103
    new-instance v2, Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 v3, 0x0

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfPCell;-><init>(Lcom/itextpdf/text/Phrase;)V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    .line 104
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/high16 v0, 0x42a00000    # 80.0f

    .line 105
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    const/4 v0, 0x1

    .line 106
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    .line 107
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    .line 108
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    .line 109
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    .line 110
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    .line 111
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    .line 112
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    const/4 v2, 0x2

    new-array v2, v2, [Z

    .line 113
    fill-array-data v2, :array_0

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    .line 114
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    .line 115
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    .line 116
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowCompleted:Z

    .line 117
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    .line 118
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    .line 119
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TABLE:Lcom/itextpdf/text/pdf/PdfName;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    .line 120
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    .line 121
    new-instance v0, Lcom/itextpdf/text/AccessibleElementId;

    invoke-direct {v0}, Lcom/itextpdf/text/AccessibleElementId;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 122
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    .line 123
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    .line 124
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    .line 125
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->copyFormat(Lcom/itextpdf/text/pdf/PdfPTable;)V

    const/4 v0, 0x0

    .line 126
    :goto_0
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    array-length v3, v2

    if-ge v0, v3, :cond_1

    .line 127
    iget-object v3, p1, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    aget-object v4, v3, v0

    if-nez v4, :cond_0

    goto :goto_1

    .line 128
    :cond_0
    new-instance v4, Lcom/itextpdf/text/pdf/PdfPCell;

    aget-object v3, v3, v0

    invoke-direct {v4, v3}, Lcom/itextpdf/text/pdf/PdfPCell;-><init>(Lcom/itextpdf/text/pdf/PdfPCell;)V

    aput-object v4, v2, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 129
    :cond_1
    :goto_1
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-ge v1, v0, :cond_3

    .line 130
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfPRow;

    if-eqz v0, :cond_2

    .line 131
    new-instance v2, Lcom/itextpdf/text/pdf/PdfPRow;

    invoke-direct {v2, v0}, Lcom/itextpdf/text/pdf/PdfPRow;-><init>(Lcom/itextpdf/text/pdf/PdfPRow;)V

    move-object v0, v2

    .line 132
    :cond_2
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_1

    :cond_3
    return-void

    nop

    :array_0
    .array-data 1
        0x0t
        0x0t
    .end array-data
.end method

.method public constructor <init>([F)V
    .locals 4

    .line 28
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 29
    const-class v0, Lcom/itextpdf/text/pdf/PdfPTable;

    invoke-static {v0}, Lcom/itextpdf/text/log/LoggerFactory;->getLogger(Ljava/lang/Class;)Lcom/itextpdf/text/log/Logger;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    .line 30
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    const/4 v0, 0x0

    .line 31
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    const/4 v1, 0x0

    .line 32
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    .line 33
    new-instance v2, Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 v3, 0x0

    invoke-direct {v2, v3}, Lcom/itextpdf/text/pdf/PdfPCell;-><init>(Lcom/itextpdf/text/Phrase;)V

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    .line 34
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/high16 v0, 0x42a00000    # 80.0f

    .line 35
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    const/4 v0, 0x1

    .line 36
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    .line 37
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    .line 38
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    .line 39
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    .line 40
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    .line 41
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    .line 42
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    const/4 v2, 0x2

    new-array v2, v2, [Z

    .line 43
    fill-array-data v2, :array_0

    iput-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    .line 44
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    .line 45
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    .line 46
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowCompleted:Z

    .line 47
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    .line 48
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    .line 49
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->TABLE:Lcom/itextpdf/text/pdf/PdfName;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    .line 50
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    .line 51
    new-instance v0, Lcom/itextpdf/text/AccessibleElementId;

    invoke-direct {v0}, Lcom/itextpdf/text/AccessibleElementId;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 52
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    .line 53
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    .line 54
    iput-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    if-eqz p1, :cond_1

    .line 55
    array-length v0, p1

    if-eqz v0, :cond_0

    .line 56
    array-length v0, p1

    new-array v0, v0, [F

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    .line 57
    array-length v2, p1

    invoke-static {p1, v1, v0, v1, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 58
    array-length p1, p1

    new-array p1, p1, [F

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    .line 59
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->calculateWidths()V

    .line 60
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    array-length p1, p1

    new-array p1, p1, [Lcom/itextpdf/text/pdf/PdfPCell;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    .line 61
    iput-boolean v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->keepTogether:Z

    return-void

    .line 62
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-array v0, v1, [Ljava/lang/Object;

    const-string v1, "the.widths.array.in.pdfptable.constructor.can.not.have.zero.length"

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1

    .line 63
    :cond_1
    new-instance p1, Ljava/lang/NullPointerException;

    new-array v0, v1, [Ljava/lang/Object;

    const-string v1, "the.widths.array.in.pdfptable.constructor.can.not.be.null"

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/NullPointerException;-><init>(Ljava/lang/String;)V

    throw p1

    :array_0
    .array-data 1
        0x0t
        0x0t
    .end array-data
.end method

.method public static beginWritingRows(Lcom/itextpdf/text/pdf/PdfContentByte;)[Lcom/itextpdf/text/pdf/PdfContentByte;
    .locals 3

    const/4 v0, 0x4

    new-array v0, v0, [Lcom/itextpdf/text/pdf/PdfContentByte;

    const/4 v1, 0x0

    aput-object p0, v0, v1

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfContentByte;->getDuplicate()Lcom/itextpdf/text/pdf/PdfContentByte;

    move-result-object v1

    const/4 v2, 0x1

    aput-object v1, v0, v2

    .line 2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfContentByte;->getDuplicate()Lcom/itextpdf/text/pdf/PdfContentByte;

    move-result-object v1

    const/4 v2, 0x2

    aput-object v1, v0, v2

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfContentByte;->getDuplicate()Lcom/itextpdf/text/pdf/PdfContentByte;

    move-result-object p0

    const/4 v1, 0x3

    aput-object p0, v0, v1

    return-object v0
.end method

.method private closeTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;
    .locals 2

    .line 1
    iget-object v0, p2, Lcom/itextpdf/text/pdf/PdfContentByte;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfWriter;->getStandardStructElems()Ljava/util/List;

    move-result-object v0

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPTableBody;->getRole()Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfContentByte;->closeMCBlock(Lcom/itextpdf/text/pdf/interfaces/IAccessibleElement;)V

    :cond_0
    const/4 p1, 0x0

    return-object p1
.end method

.method public static endWritingRows([Lcom/itextpdf/text/pdf/PdfContentByte;)V
    .locals 3

    const/4 v0, 0x0

    .line 1
    aget-object v0, p0, v0

    .line 2
    new-instance v1, Lcom/itextpdf/text/pdf/PdfArtifact;

    invoke-direct {v1}, Lcom/itextpdf/text/pdf/PdfArtifact;-><init>()V

    .line 3
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->openMCBlock(Lcom/itextpdf/text/pdf/interfaces/IAccessibleElement;)V

    .line 4
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    const/4 v2, 0x1

    .line 5
    aget-object v2, p0, v2

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->add(Lcom/itextpdf/text/pdf/PdfContentByte;)V

    .line 6
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    .line 7
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    const/4 v2, 0x2

    .line 8
    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineCap(I)V

    .line 9
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->resetRGBColorStroke()V

    .line 10
    aget-object v2, p0, v2

    invoke-virtual {v0, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->add(Lcom/itextpdf/text/pdf/PdfContentByte;)V

    .line 11
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    .line 12
    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->closeMCBlock(Lcom/itextpdf/text/pdf/interfaces/IAccessibleElement;)V

    const/4 v1, 0x3

    .line 13
    aget-object p0, p0, v1

    invoke-virtual {v0, p0}, Lcom/itextpdf/text/pdf/PdfContentByte;->add(Lcom/itextpdf/text/pdf/PdfContentByte;)V

    return-void
.end method

.method private openTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;
    .locals 2

    .line 1
    iget-object v0, p2, Lcom/itextpdf/text/pdf/PdfContentByte;->writer:Lcom/itextpdf/text/pdf/PdfWriter;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfWriter;->getStandardStructElems()Ljava/util/List;

    move-result-object v0

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPTableBody;->getRole()Lcom/itextpdf/text/pdf/PdfName;

    move-result-object v1

    invoke-interface {v0, v1}, Ljava/util/List;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfContentByte;->openMCBlock(Lcom/itextpdf/text/pdf/interfaces/IAccessibleElement;)V

    return-object p1

    :cond_0
    const/4 p1, 0x0

    return-object p1
.end method

.method public static shallowCopy(Lcom/itextpdf/text/pdf/PdfPTable;)Lcom/itextpdf/text/pdf/PdfPTable;
    .locals 1

    .line 1
    new-instance v0, Lcom/itextpdf/text/pdf/PdfPTable;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfPTable;-><init>()V

    .line 2
    invoke-virtual {v0, p0}, Lcom/itextpdf/text/pdf/PdfPTable;->copyFormat(Lcom/itextpdf/text/pdf/PdfPTable;)V

    return-object v0
.end method

.method private skipColsWithRowspanAbove()V
    .locals 3

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    const/4 v1, 0x3

    if-ne v0, v1, :cond_0

    const/4 v0, -0x1

    goto :goto_0

    :cond_0
    const/4 v0, 0x1

    .line 2
    :goto_0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    iget v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    invoke-virtual {p0, v1, v2}, Lcom/itextpdf/text/pdf/PdfPTable;->rowSpanAbove(II)Z

    move-result v1

    if-eqz v1, :cond_1

    .line 3
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    add-int/2addr v1, v0

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    goto :goto_0

    :cond_1
    return-void
.end method


# virtual methods
.method public addCell(Lcom/itextpdf/text/pdf/PdfPCell;)Lcom/itextpdf/text/pdf/PdfPCell;
    .locals 10

    const/4 v0, 0x0

    .line 1
    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowCompleted:Z

    .line 2
    instance-of v1, p1, Lcom/itextpdf/text/pdf/PdfPHeaderCell;

    if-eqz v1, :cond_0

    .line 3
    new-instance v1, Lcom/itextpdf/text/pdf/PdfPHeaderCell;

    check-cast p1, Lcom/itextpdf/text/pdf/PdfPHeaderCell;

    invoke-direct {v1, p1}, Lcom/itextpdf/text/pdf/PdfPHeaderCell;-><init>(Lcom/itextpdf/text/pdf/PdfPHeaderCell;)V

    goto :goto_0

    .line 4
    :cond_0
    new-instance v1, Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-direct {v1, p1}, Lcom/itextpdf/text/pdf/PdfPCell;-><init>(Lcom/itextpdf/text/pdf/PdfPCell;)V

    .line 5
    :goto_0
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfPCell;->getColspan()I

    move-result p1

    const/4 v2, 0x1

    .line 6
    invoke-static {p1, v2}, Ljava/lang/Math;->max(II)I

    move-result p1

    .line 7
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    array-length v3, v3

    iget v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    sub-int/2addr v3, v4

    invoke-static {p1, v3}, Ljava/lang/Math;->min(II)I

    move-result p1

    .line 8
    invoke-virtual {v1, p1}, Lcom/itextpdf/text/pdf/PdfPCell;->setColspan(I)V

    if-eq p1, v2, :cond_1

    .line 9
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    .line 10
    :cond_1
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfPCell;->getRunDirection()I

    move-result v3

    if-ne v3, v2, :cond_2

    .line 11
    iget v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfPCell;->setRunDirection(I)V

    .line 12
    :cond_2
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->skipColsWithRowspanAbove()V

    .line 13
    iget v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    array-length v5, v4

    if-ge v3, v5, :cond_3

    .line 14
    aput-object v1, v4, v3

    add-int/2addr v3, p1

    .line 15
    iput v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    const/4 v3, 0x1

    goto :goto_1

    :cond_3
    const/4 v3, 0x0

    .line 16
    :goto_1
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->skipColsWithRowspanAbove()V

    .line 17
    :goto_2
    iget v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    array-length v6, v5

    if-lt v4, v6, :cond_7

    .line 18
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v4

    .line 19
    iget v5, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    const/4 v6, 0x3

    if-ne v5, v6, :cond_5

    .line 20
    new-array v5, v4, [Lcom/itextpdf/text/pdf/PdfPCell;

    .line 21
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    array-length v6, v6

    const/4 v7, 0x0

    .line 22
    :goto_3
    iget-object v8, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    array-length v9, v8

    if-ge v7, v9, :cond_4

    .line 23
    aget-object v8, v8, v7

    .line 24
    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfPCell;->getColspan()I

    move-result v9

    sub-int/2addr v6, v9

    .line 25
    aput-object v8, v5, v6

    sub-int/2addr v9, v2

    add-int/2addr v9, v7

    add-int/lit8 v7, v9, 0x1

    goto :goto_3

    .line 26
    :cond_4
    iput-object v5, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    .line 27
    :cond_5
    new-instance v5, Lcom/itextpdf/text/pdf/PdfPRow;

    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-direct {v5, v6}, Lcom/itextpdf/text/pdf/PdfPRow;-><init>([Lcom/itextpdf/text/pdf/PdfPCell;)V

    .line 28
    iget v6, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 v7, 0x0

    cmpl-float v6, v6, v7

    if-lez v6, :cond_6

    .line 29
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    invoke-virtual {v5, v6}, Lcom/itextpdf/text/pdf/PdfPRow;->setWidths([F)Z

    .line 30
    iget v6, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result v7

    add-float/2addr v7, v6

    iput v7, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    .line 31
    :cond_6
    iget-object v6, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v6, v5}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 32
    new-array v4, v4, [Lcom/itextpdf/text/pdf/PdfPCell;

    iput-object v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    .line 33
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    .line 34
    invoke-direct {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->skipColsWithRowspanAbove()V

    .line 35
    iput-boolean v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowCompleted:Z

    goto :goto_2

    :cond_7
    if-nez v3, :cond_8

    .line 36
    aput-object v1, v5, v4

    add-int/2addr v4, p1

    .line 37
    iput v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    :cond_8
    return-object v1
.end method

.method public addCell(Lcom/itextpdf/text/Image;)V
    .locals 1

    .line 43
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfPCell;->setImage(Lcom/itextpdf/text/Image;)V

    .line 44
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->addCell(Lcom/itextpdf/text/pdf/PdfPCell;)Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object p1

    .line 45
    new-instance v0, Lcom/itextpdf/text/AccessibleElementId;

    invoke-direct {v0}, Lcom/itextpdf/text/AccessibleElementId;-><init>()V

    iput-object v0, p1, Lcom/itextpdf/text/pdf/PdfPCell;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 46
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfPCell;->setImage(Lcom/itextpdf/text/Image;)V

    return-void
.end method

.method public addCell(Lcom/itextpdf/text/Phrase;)V
    .locals 1

    .line 47
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfPCell;->setPhrase(Lcom/itextpdf/text/Phrase;)V

    .line 48
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->addCell(Lcom/itextpdf/text/pdf/PdfPCell;)Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object p1

    .line 49
    new-instance v0, Lcom/itextpdf/text/AccessibleElementId;

    invoke-direct {v0}, Lcom/itextpdf/text/AccessibleElementId;-><init>()V

    iput-object v0, p1, Lcom/itextpdf/text/pdf/PdfPCell;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 50
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfPCell;->setPhrase(Lcom/itextpdf/text/Phrase;)V

    return-void
.end method

.method public addCell(Lcom/itextpdf/text/pdf/PdfPTable;)V
    .locals 1

    .line 39
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/PdfPCell;->setTable(Lcom/itextpdf/text/pdf/PdfPTable;)V

    .line 40
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->addCell(Lcom/itextpdf/text/pdf/PdfPCell;)Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object p1

    .line 41
    new-instance v0, Lcom/itextpdf/text/AccessibleElementId;

    invoke-direct {v0}, Lcom/itextpdf/text/AccessibleElementId;-><init>()V

    iput-object v0, p1, Lcom/itextpdf/text/pdf/PdfPCell;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 42
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 v0, 0x0

    invoke-virtual {p1, v0}, Lcom/itextpdf/text/pdf/PdfPCell;->setTable(Lcom/itextpdf/text/pdf/PdfPTable;)V

    return-void
.end method

.method public addCell(Ljava/lang/String;)V
    .locals 1

    .line 38
    new-instance v0, Lcom/itextpdf/text/Phrase;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/Phrase;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->addCell(Lcom/itextpdf/text/Phrase;)V

    return-void
.end method

.method public addNumberOfRowsWritten(I)V
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->numberOfWrittenRows:I

    add-int/2addr v0, p1

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->numberOfWrittenRows:I

    return-void
.end method

.method public adjustCellsInRow(II)Lcom/itextpdf/text/pdf/PdfPRow;
    .locals 7

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v0

    .line 2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->isAdjusted()Z

    move-result v1

    if-eqz v1, :cond_0

    return-object v0

    .line 3
    :cond_0
    new-instance v1, Lcom/itextpdf/text/pdf/PdfPRow;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/pdf/PdfPRow;-><init>(Lcom/itextpdf/text/pdf/PdfPRow;)V

    .line 4
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v0

    const/4 v2, 0x0

    .line 5
    :goto_0
    array-length v3, v0

    const/4 v4, 0x1

    if-ge v2, v3, :cond_4

    .line 6
    aget-object v3, v0, v2

    if-eqz v3, :cond_3

    .line 7
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfPCell;->getRowspan()I

    move-result v5

    if-ne v5, v4, :cond_1

    goto :goto_2

    .line 8
    :cond_1
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfPCell;->getRowspan()I

    move-result v3

    add-int/2addr v3, p1

    invoke-static {p2, v3}, Ljava/lang/Math;->min(II)I

    move-result v3

    const/4 v5, 0x0

    add-int/2addr v4, p1

    :goto_1
    if-ge v4, v3, :cond_2

    .line 9
    invoke-virtual {p0, v4}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v6

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result v6

    add-float/2addr v5, v6

    add-int/lit8 v4, v4, 0x1

    goto :goto_1

    .line 10
    :cond_2
    invoke-virtual {v1, v2, v5}, Lcom/itextpdf/text/pdf/PdfPRow;->setExtraHeight(IF)V

    :cond_3
    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 11
    :cond_4
    invoke-virtual {v1, v4}, Lcom/itextpdf/text/pdf/PdfPRow;->setAdjusted(Z)V

    return-object v1
.end method

.method public calculateHeights()F
    .locals 3

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 v1, 0x0

    cmpg-float v0, v0, v1

    if-gtz v0, :cond_0

    return v1

    .line 2
    :cond_0
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    const/4 v0, 0x0

    .line 3
    :goto_0
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    if-ge v0, v1, :cond_1

    .line 4
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    const/4 v2, 0x1

    invoke-virtual {p0, v0, v2}, Lcom/itextpdf/text/pdf/PdfPTable;->getRowHeight(IZ)F

    move-result v2

    add-float/2addr v2, v1

    iput v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 5
    :cond_1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    return v0
.end method

.method public calculateWidths()V
    .locals 6

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 v1, 0x0

    cmpg-float v0, v0, v1

    if-gtz v0, :cond_0

    return-void

    .line 2
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v0

    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_0
    if-ge v3, v0, :cond_1

    .line 3
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    aget v4, v4, v3

    add-float/2addr v1, v4

    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_1
    :goto_1
    if-ge v2, v0, :cond_2

    .line 4
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    iget v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    aget v5, v5, v2

    mul-float v4, v4, v5

    div-float/2addr v4, v1

    aput v4, v3, v2

    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_2
    return-void
.end method

.method public cellAt(II)Lcom/itextpdf/text/pdf/PdfPCell;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfPRow;

    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object p1

    const/4 v0, 0x0

    .line 2
    :goto_0
    array-length v1, p1

    if-ge v0, v1, :cond_1

    .line 3
    aget-object v1, p1, v0

    if-eqz v1, :cond_0

    if-lt p2, v0, :cond_0

    .line 4
    aget-object v1, p1, v0

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfPCell;->getColspan()I

    move-result v1

    add-int/2addr v1, v0

    if-ge p2, v1, :cond_0

    .line 5
    aget-object p1, p1, v0

    return-object p1

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    const/4 p1, 0x0

    return-object p1
.end method

.method public completeRow()V
    .locals 1

    .line 1
    :goto_0
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowCompleted:Z

    if-nez v0, :cond_0

    .line 2
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->addCell(Lcom/itextpdf/text/pdf/PdfPCell;)Lcom/itextpdf/text/pdf/PdfPCell;

    goto :goto_0

    :cond_0
    return-void
.end method

.method public copyFormat(Lcom/itextpdf/text/pdf/PdfPTable;)V
    .locals 4

    .line 1
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    .line 2
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v0

    new-array v0, v0, [F

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    .line 3
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v0

    new-array v0, v0, [F

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    .line 4
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v2

    const/4 v3, 0x0

    invoke-static {v0, v3, v1, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 5
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v2

    invoke-static {v0, v3, v1, v3, v2}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 6
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    .line 7
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    .line 8
    iput v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentColIdx:I

    .line 9
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    .line 10
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    .line 11
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    instance-of v1, v0, Lcom/itextpdf/text/pdf/PdfPHeaderCell;

    if-eqz v1, :cond_0

    .line 12
    new-instance v1, Lcom/itextpdf/text/pdf/PdfPHeaderCell;

    check-cast v0, Lcom/itextpdf/text/pdf/PdfPHeaderCell;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/pdf/PdfPHeaderCell;-><init>(Lcom/itextpdf/text/pdf/PdfPHeaderCell;)V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    goto :goto_0

    .line 13
    :cond_0
    new-instance v1, Lcom/itextpdf/text/pdf/PdfPCell;

    invoke-direct {v1, v0}, Lcom/itextpdf/text/pdf/PdfPCell;-><init>(Lcom/itextpdf/text/pdf/PdfPCell;)V

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    .line 14
    :goto_0
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    array-length v0, v0

    new-array v0, v0, [Lcom/itextpdf/text/pdf/PdfPCell;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    .line 15
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    .line 16
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    .line 17
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->spacingAfter:F

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingAfter:F

    .line 18
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->spacingBefore:F

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingBefore:F

    .line 19
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    .line 20
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    .line 21
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    .line 22
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    .line 23
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->headersInEvent:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headersInEvent:Z

    .line 24
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    .line 25
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    .line 26
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    .line 27
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    .line 28
    iget v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    .line 29
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->keepTogether:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->keepTogether:Z

    .line 30
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    .line 31
    iget-boolean v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    iput-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    .line 32
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    .line 33
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    .line 34
    iget-object v0, p1, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    if-eqz v0, :cond_1

    .line 35
    new-instance v0, Ljava/util/HashMap;

    iget-object v1, p1, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    invoke-direct {v0, v1}, Ljava/util/HashMap;-><init>(Ljava/util/Map;)V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    .line 36
    :cond_1
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    .line 37
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    .line 38
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    return-void
.end method

.method public deleteBodyRows()V
    .locals 3

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    const/4 v1, 0x0

    .line 2
    :goto_0
    iget v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    if-ge v1, v2, :cond_0

    .line 3
    iget-object v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v2, v1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 4
    :cond_0
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    const/4 v0, 0x0

    .line 5
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    .line 6
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    cmpl-float v0, v1, v0

    if-lez v0, :cond_1

    .line 7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeaderHeight()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    :cond_1
    return-void
.end method

.method public deleteLastRow()Z
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->deleteRow(I)Z

    move-result v0

    return v0
.end method

.method public deleteRow(I)Z
    .locals 3

    if-ltz p1, :cond_3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lt p1, v0, :cond_0

    goto :goto_0

    .line 2
    :cond_0
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 v1, 0x0

    cmpl-float v0, v0, v1

    if-lez v0, :cond_1

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfPRow;

    if-eqz v0, :cond_1

    .line 4
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result v0

    sub-float/2addr v1, v0

    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    .line 5
    :cond_1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->remove(I)Ljava/lang/Object;

    .line 6
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    const/4 v1, 0x1

    if-ge p1, v0, :cond_2

    sub-int/2addr v0, v1

    .line 7
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    .line 8
    iget v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    sub-int/2addr v0, v2

    if-lt p1, v0, :cond_2

    sub-int/2addr v2, v1

    .line 9
    iput v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    :cond_2
    return v1

    :cond_3
    :goto_0
    const/4 p1, 0x0

    return p1
.end method

.method public flushContent()V
    .locals 1

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->deleteBodyRows()V

    .line 2
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->numberOfWrittenRows:I

    if-lez v0, :cond_0

    const/4 v0, 0x1

    .line 3
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->setSkipFirstHeader(Z)V

    :cond_0
    return-void
.end method

.method public getAbsoluteWidths()[F
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    return-object v0
.end method

.method public getAccessibleAttribute(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    if-eqz v0, :cond_0

    .line 2
    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfObject;

    return-object p1

    :cond_0
    const/4 p1, 0x0

    return-object p1
.end method

.method public getAccessibleAttributes()Ljava/util/HashMap;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/HashMap<",
            "Lcom/itextpdf/text/pdf/PdfName;",
            "Lcom/itextpdf/text/pdf/PdfObject;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    return-object v0
.end method

.method public getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    if-nez v0, :cond_0

    .line 2
    new-instance v0, Lcom/itextpdf/text/pdf/PdfPTableBody;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfPTableBody;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    .line 3
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->body:Lcom/itextpdf/text/pdf/PdfPTableBody;

    return-object v0
.end method

.method public getCellStartRowIndex(II)I
    .locals 1

    .line 1
    :goto_0
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v0

    aget-object v0, v0, p2

    if-nez v0, :cond_0

    if-lez p1, :cond_0

    add-int/lit8 p1, p1, -0x1

    goto :goto_0

    :cond_0
    return p1
.end method

.method public getChunks()Ljava/util/List;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/List<",
            "Lcom/itextpdf/text/Chunk;",
            ">;"
        }
    .end annotation

    .line 1
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    return-object v0
.end method

.method public getDefaultCell()Lcom/itextpdf/text/pdf/PdfPCell;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->defaultCell:Lcom/itextpdf/text/pdf/PdfPCell;

    return-object v0
.end method

.method public getEventWidths(FIIZ)[[F
    .locals 5

    if-eqz p4, :cond_0

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    invoke-static {p2, v0}, Ljava/lang/Math;->max(II)I

    move-result p2

    .line 2
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    invoke-static {p3, v0}, Ljava/lang/Math;->max(II)I

    move-result p3

    :cond_0
    const/4 v0, 0x0

    if-eqz p4, :cond_1

    .line 3
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    goto :goto_0

    :cond_1
    const/4 v1, 0x0

    :goto_0
    add-int/2addr v1, p3

    sub-int/2addr v1, p2

    new-array v2, v1, [[F

    .line 4
    iget-boolean v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->isColspan:Z

    if-eqz v3, :cond_6

    if-eqz p4, :cond_4

    const/4 p4, 0x0

    .line 5
    :goto_1
    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    if-ge v0, v1, :cond_3

    .line 6
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfPRow;

    if-nez v1, :cond_2

    add-int/lit8 p4, p4, 0x1

    goto :goto_2

    :cond_2
    add-int/lit8 v3, p4, 0x1

    .line 7
    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    invoke-virtual {v1, p1, v4}, Lcom/itextpdf/text/pdf/PdfPRow;->getEventWidth(F[F)[F

    move-result-object v1

    aput-object v1, v2, p4

    move p4, v3

    :goto_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_1

    :cond_3
    move v0, p4

    :cond_4
    :goto_3
    if-ge p2, p3, :cond_8

    .line 8
    iget-object p4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {p4, p2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p4

    check-cast p4, Lcom/itextpdf/text/pdf/PdfPRow;

    if-nez p4, :cond_5

    add-int/lit8 v0, v0, 0x1

    goto :goto_4

    :cond_5
    add-int/lit8 v1, v0, 0x1

    .line 9
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    invoke-virtual {p4, p1, v3}, Lcom/itextpdf/text/pdf/PdfPRow;->getEventWidth(F[F)[F

    move-result-object p4

    aput-object p4, v2, v0

    move v0, v1

    :goto_4
    add-int/lit8 p2, p2, 0x1

    goto :goto_3

    .line 10
    :cond_6
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result p2

    add-int/lit8 p3, p2, 0x1

    .line 11
    new-array p3, p3, [F

    .line 12
    aput p1, p3, v0

    const/4 p1, 0x0

    :goto_5
    if-ge p1, p2, :cond_7

    add-int/lit8 p4, p1, 0x1

    .line 13
    aget v3, p3, p1

    iget-object v4, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    aget p1, v4, p1

    add-float/2addr v3, p1

    aput v3, p3, p4

    move p1, p4

    goto :goto_5

    :cond_7
    :goto_6
    if-ge v0, v1, :cond_8

    .line 14
    aput-object p3, v2, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_6

    :cond_8
    return-object v2
.end method

.method public getFittingRows(FI)Lcom/itextpdf/text/pdf/PdfPTable$FittingRows;
    .locals 18

    move-object/from16 v0, p0

    move/from16 v2, p2

    .line 1
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    sget-object v3, Lcom/itextpdf/text/log/Level;->INFO:Lcom/itextpdf/text/log/Level;

    invoke-interface {v1, v3}, Lcom/itextpdf/text/log/Logger;->isLogging(Lcom/itextpdf/text/log/Level;)Z

    move-result v1

    const/4 v3, 0x2

    const/4 v4, 0x0

    const/4 v5, 0x1

    if-eqz v1, :cond_0

    .line 2
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    new-array v6, v3, [Ljava/lang/Object;

    invoke-static/range {p1 .. p1}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v7

    aput-object v7, v6, v4

    invoke-static/range {p2 .. p2}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v7

    aput-object v7, v6, v5

    const-string v7, "getFittingRows(%s, %s)"

    invoke-static {v7, v6}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v6

    invoke-interface {v1, v6}, Lcom/itextpdf/text/log/Logger;->info(Ljava/lang/String;)V

    :cond_0
    if-lez v2, :cond_1

    .line 3
    iget-object v1, v0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    .line 4
    :cond_1
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v1

    .line 5
    new-array v6, v1, [Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;

    const/4 v7, 0x0

    :goto_0
    if-ge v7, v1, :cond_2

    .line 6
    new-instance v8, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;

    invoke-direct {v8}, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;-><init>()V

    aput-object v8, v6, v7

    add-int/lit8 v7, v7, 0x1

    goto :goto_0

    .line 7
    :cond_2
    new-instance v7, Ljava/util/HashMap;

    invoke-direct {v7}, Ljava/util/HashMap;-><init>()V

    move v11, v2

    const/4 v9, 0x0

    const/4 v10, 0x0

    .line 8
    :goto_1
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->size()I

    move-result v12

    if-ge v11, v12, :cond_c

    .line 9
    invoke-virtual {v0, v11}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v12

    .line 10
    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxRowHeightsWithoutCalculating()F

    move-result v13

    const/4 v14, 0x0

    const/4 v15, 0x0

    :goto_2
    if-ge v14, v1, :cond_7

    .line 11
    invoke-virtual {v12}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v16

    aget-object v8, v16, v14

    .line 12
    aget-object v5, v6, v14

    if-nez v8, :cond_3

    .line 13
    invoke-virtual {v5, v10, v13}, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->consumeRowspan(FF)V

    goto :goto_3

    .line 14
    :cond_3
    invoke-virtual {v5, v8, v10, v13}, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->beginCell(Lcom/itextpdf/text/pdf/PdfPCell;FF)V

    .line 15
    iget-object v4, v0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    sget-object v3, Lcom/itextpdf/text/log/Level;->INFO:Lcom/itextpdf/text/log/Level;

    invoke-interface {v4, v3}, Lcom/itextpdf/text/log/Logger;->isLogging(Lcom/itextpdf/text/log/Level;)Z

    move-result v3

    if-eqz v3, :cond_4

    .line 16
    iget-object v3, v0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    const/4 v4, 0x2

    new-array v2, v4, [Ljava/lang/Object;

    iget v4, v5, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->height:F

    invoke-static {v4}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v4

    const/16 v17, 0x0

    aput-object v4, v2, v17

    invoke-virtual {v8}, Lcom/itextpdf/text/pdf/PdfPCell;->getCachedMaxHeight()F

    move-result v4

    invoke-static {v4}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v4

    const/4 v8, 0x1

    aput-object v4, v2, v8

    const-string v4, "Height after beginCell: %s (cell: %s)"

    invoke-static {v4, v2}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v2

    invoke-interface {v3, v2}, Lcom/itextpdf/text/log/Logger;->info(Ljava/lang/String;)V

    .line 17
    :cond_4
    :goto_3
    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->cellEnds()Z

    move-result v2

    if-eqz v2, :cond_5

    iget v2, v5, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->height:F

    cmpl-float v3, v2, v15

    if-lez v3, :cond_5

    move v15, v2

    :cond_5
    const/4 v8, 0x1

    .line 18
    :goto_4
    iget v2, v5, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->colspan:I

    if-ge v8, v2, :cond_6

    add-int v2, v14, v8

    .line 19
    aget-object v2, v6, v2

    iget v3, v5, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->height:F

    iput v3, v2, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->height:F

    add-int/lit8 v8, v8, 0x1

    goto :goto_4

    :cond_6
    add-int/2addr v14, v2

    move/from16 v2, p2

    const/4 v3, 0x2

    const/4 v4, 0x0

    const/4 v5, 0x1

    goto :goto_2

    :cond_7
    const/4 v2, 0x0

    const/4 v3, 0x0

    :goto_5
    if-ge v2, v1, :cond_9

    .line 20
    aget-object v4, v6, v2

    .line 21
    iget v4, v4, Lcom/itextpdf/text/pdf/PdfPTable$ColumnMeasurementState;->height:F

    cmpl-float v5, v4, v3

    if-lez v5, :cond_8

    move v3, v4

    :cond_8
    add-int/lit8 v2, v2, 0x1

    goto :goto_5

    :cond_9
    sub-float v2, v15, v10

    .line 22
    invoke-virtual {v12, v2}, Lcom/itextpdf/text/pdf/PdfPRow;->setFinalMaxHeights(F)V

    .line 23
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->isSplitLate()Z

    move-result v2

    if-eqz v2, :cond_a

    move v2, v3

    goto :goto_6

    :cond_a
    move v2, v15

    :goto_6
    sub-float v2, p1, v2

    const/4 v4, 0x0

    cmpg-float v2, v2, v4

    if-gez v2, :cond_b

    goto :goto_7

    .line 24
    :cond_b
    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    sub-float v5, v3, v10

    invoke-static {v5}, Ljava/lang/Float;->valueOf(F)Ljava/lang/Float;

    move-result-object v5

    invoke-virtual {v7, v2, v5}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v11, v11, 0x1

    move/from16 v2, p2

    move v9, v3

    move v10, v15

    const/4 v3, 0x2

    const/4 v4, 0x0

    const/4 v5, 0x1

    goto/16 :goto_1

    :cond_c
    :goto_7
    const/4 v1, 0x0

    .line 25
    iput-boolean v1, v0, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    .line 26
    new-instance v8, Lcom/itextpdf/text/pdf/PdfPTable$FittingRows;

    const/4 v1, 0x1

    add-int/lit8 v3, v11, -0x1

    move-object v1, v8

    move/from16 v2, p2

    move v4, v9

    move v5, v10

    move-object v6, v7

    invoke-direct/range {v1 .. v6}, Lcom/itextpdf/text/pdf/PdfPTable$FittingRows;-><init>(IIFFLjava/util/Map;)V

    return-object v8
.end method

.method public getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    if-nez v0, :cond_0

    .line 2
    new-instance v0, Lcom/itextpdf/text/pdf/PdfPTableFooter;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfPTableFooter;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    .line 3
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footer:Lcom/itextpdf/text/pdf/PdfPTableFooter;

    return-object v0
.end method

.method public getFooterHeight()F
    .locals 4

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    sub-int/2addr v0, v1

    const/4 v1, 0x0

    invoke-static {v1, v0}, Ljava/lang/Math;->max(II)I

    move-result v0

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1}, Ljava/util/ArrayList;->size()I

    move-result v1

    iget v2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    invoke-static {v1, v2}, Ljava/lang/Math;->min(II)I

    move-result v1

    const/4 v2, 0x0

    :goto_0
    if-ge v0, v1, :cond_1

    .line 3
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v3, v0}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfPRow;

    if-eqz v3, :cond_0

    .line 4
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result v3

    add-float/2addr v3, v2

    move v2, v3

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    return v2
.end method

.method public getFooterRows()I
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    return v0
.end method

.method public getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    if-nez v0, :cond_0

    .line 2
    new-instance v0, Lcom/itextpdf/text/pdf/PdfPTableHeader;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/PdfPTableHeader;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    .line 3
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->header:Lcom/itextpdf/text/pdf/PdfPTableHeader;

    return-object v0
.end method

.method public getHeaderHeight()F
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    invoke-static {v0, v1}, Ljava/lang/Math;->min(II)I

    move-result v0

    const/4 v1, 0x0

    const/4 v2, 0x0

    :goto_0
    if-ge v2, v0, :cond_1

    .line 2
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfPRow;

    if-eqz v3, :cond_0

    .line 3
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result v3

    add-float/2addr v3, v1

    move v1, v3

    :cond_0
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    return v1
.end method

.method public getHeaderRows()I
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    return v0
.end method

.method public getHorizontalAlignment()I
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    return v0
.end method

.method public getId()Lcom/itextpdf/text/AccessibleElementId;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    return-object v0
.end method

.method public getKeepTogether()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->keepTogether:Z

    return v0
.end method

.method public getLastCompletedRowIndex()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    add-int/lit8 v0, v0, -0x1

    return v0
.end method

.method public getNumberOfColumns()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    array-length v0, v0

    return v0
.end method

.method public getPaddingTop()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->paddingTop:F

    return v0
.end method

.method public getRole()Lcom/itextpdf/text/pdf/PdfName;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    return-object v0
.end method

.method public getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/text/pdf/PdfPRow;

    return-object p1
.end method

.method public getRowHeight(I)F
    .locals 1

    const/4 v0, 0x0

    .line 1
    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->getRowHeight(IZ)F

    move-result p1

    return p1
.end method

.method public getRowHeight(IZ)F
    .locals 7

    .line 2
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 v1, 0x0

    cmpg-float v0, v0, v1

    if-lez v0, :cond_9

    if-ltz p1, :cond_9

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lt p1, v0, :cond_0

    goto :goto_4

    .line 3
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfPRow;

    if-nez v0, :cond_1

    return v1

    :cond_1
    if-eqz p2, :cond_2

    .line 4
    iget-object p2, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/PdfPRow;->setWidths([F)Z

    .line 5
    :cond_2
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result p2

    const/4 v2, 0x0

    .line 6
    :goto_0
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    array-length v3, v3

    if-ge v2, v3, :cond_8

    .line 7
    invoke-virtual {p0, p1, v2}, Lcom/itextpdf/text/pdf/PdfPTable;->rowSpanAbove(II)Z

    move-result v3

    if-nez v3, :cond_3

    goto :goto_3

    :cond_3
    const/4 v3, 0x1

    :goto_1
    sub-int v4, p1, v3

    .line 8
    invoke-virtual {p0, v4, v2}, Lcom/itextpdf/text/pdf/PdfPTable;->rowSpanAbove(II)Z

    move-result v5

    if-eqz v5, :cond_4

    add-int/lit8 v3, v3, 0x1

    goto :goto_1

    .line 9
    :cond_4
    iget-object v5, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v5, v4}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v4

    check-cast v4, Lcom/itextpdf/text/pdf/PdfPRow;

    .line 10
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v4

    aget-object v4, v4, v2

    if-eqz v4, :cond_5

    .line 11
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfPCell;->getRowspan()I

    move-result v5

    add-int/lit8 v6, v3, 0x1

    if-ne v5, v6, :cond_5

    .line 12
    invoke-virtual {v4}, Lcom/itextpdf/text/pdf/PdfPCell;->getMaxHeight()F

    move-result v4

    :goto_2
    if-lez v3, :cond_6

    sub-int v5, p1, v3

    .line 13
    invoke-virtual {p0, v5}, Lcom/itextpdf/text/pdf/PdfPTable;->getRowHeight(I)F

    move-result v5

    sub-float/2addr v4, v5

    add-int/lit8 v3, v3, -0x1

    goto :goto_2

    :cond_5
    const/4 v4, 0x0

    :cond_6
    cmpl-float v3, v4, p2

    if-lez v3, :cond_7

    move p2, v4

    :cond_7
    :goto_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 14
    :cond_8
    invoke-virtual {v0, p2}, Lcom/itextpdf/text/pdf/PdfPRow;->setMaxHeights(F)V

    return p2

    :cond_9
    :goto_4
    return v1
.end method

.method public getRows()Ljava/util/ArrayList;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfPRow;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    return-object v0
.end method

.method public getRows(II)Ljava/util/ArrayList;
    .locals 2
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(II)",
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/text/pdf/PdfPRow;",
            ">;"
        }
    .end annotation

    .line 2
    new-instance v0, Ljava/util/ArrayList;

    invoke-direct {v0}, Ljava/util/ArrayList;-><init>()V

    if-ltz p1, :cond_1

    .line 3
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->size()I

    move-result v1

    if-le p2, v1, :cond_0

    goto :goto_1

    :cond_0
    :goto_0
    if-ge p1, p2, :cond_1

    .line 4
    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/text/pdf/PdfPTable;->adjustCellsInRow(II)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    add-int/lit8 p1, p1, 0x1

    goto :goto_0

    :cond_1
    :goto_1
    return-object v0
.end method

.method public getRowspanHeight(II)F
    .locals 3

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 v1, 0x0

    cmpg-float v0, v0, v1

    if-lez v0, :cond_3

    if-ltz p1, :cond_3

    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    if-lt p1, v0, :cond_0

    goto :goto_1

    .line 2
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, p1}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/text/pdf/PdfPRow;

    if-eqz v0, :cond_3

    .line 3
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v2

    array-length v2, v2

    if-lt p2, v2, :cond_1

    goto :goto_1

    .line 4
    :cond_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v0

    aget-object p2, v0, p2

    if-nez p2, :cond_2

    return v1

    :cond_2
    const/4 v0, 0x0

    .line 5
    :goto_0
    invoke-virtual {p2}, Lcom/itextpdf/text/pdf/PdfPCell;->getRowspan()I

    move-result v2

    if-ge v0, v2, :cond_3

    add-int v2, p1, v0

    .line 6
    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/PdfPTable;->getRowHeight(I)F

    move-result v2

    add-float/2addr v1, v2

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_3
    :goto_1
    return v1
.end method

.method public getRunDirection()I
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    return v0
.end method

.method public getSpacingAfter()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingAfter:F

    return v0
.end method

.method public getSpacingBefore()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingBefore:F

    return v0
.end method

.method public getSummary()Ljava/lang/String;
    .locals 1

    .line 1
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->SUMMARY:Lcom/itextpdf/text/pdf/PdfName;

    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->getAccessibleAttribute(Lcom/itextpdf/text/pdf/PdfName;)Lcom/itextpdf/text/pdf/PdfObject;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfObject;->toString()Ljava/lang/String;

    move-result-object v0

    return-object v0
.end method

.method public getTableEvent()Lcom/itextpdf/text/pdf/PdfPTableEvent;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    return-object v0
.end method

.method public getTotalHeight()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    return v0
.end method

.method public getTotalWidth()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    return v0
.end method

.method public getWidthPercentage()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    return v0
.end method

.method public hasRowspan(I)Z
    .locals 4

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x1

    if-ge p1, v0, :cond_0

    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v0

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->hasRowspan()Z

    move-result v0

    if-eqz v0, :cond_0

    return v1

    :cond_0
    if-lez p1, :cond_1

    add-int/lit8 v0, p1, -0x1

    .line 2
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v0

    goto :goto_0

    :cond_1
    const/4 v0, 0x0

    :goto_0
    if-eqz v0, :cond_2

    .line 3
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfPRow;->hasRowspan()Z

    move-result v0

    if-eqz v0, :cond_2

    return v1

    :cond_2
    const/4 v0, 0x0

    const/4 v2, 0x0

    .line 4
    :goto_1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v3

    if-ge v2, v3, :cond_4

    add-int/lit8 v3, p1, -0x1

    .line 5
    invoke-virtual {p0, v3, v2}, Lcom/itextpdf/text/pdf/PdfPTable;->rowSpanAbove(II)Z

    move-result v3

    if-eqz v3, :cond_3

    return v1

    :cond_3
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_4
    return v0
.end method

.method public init()V
    .locals 6

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    const-string v1, "Initialize row and cell heights"

    invoke-interface {v0, v1}, Lcom/itextpdf/text/log/Logger;->info(Ljava/lang/String;)V

    .line 2
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getRows()Ljava/util/ArrayList;

    move-result-object v0

    invoke-virtual {v0}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_3

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/PdfPRow;

    if-nez v1, :cond_1

    goto :goto_0

    :cond_1
    const/4 v2, 0x0

    .line 3
    iput-boolean v2, v1, Lcom/itextpdf/text/pdf/PdfPRow;->calculated:Z

    .line 4
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v1

    array-length v3, v1

    :goto_1
    if-ge v2, v3, :cond_0

    aget-object v4, v1, v2

    if-nez v4, :cond_2

    goto :goto_2

    :cond_2
    const/4 v5, 0x0

    .line 5
    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfPCell;->setCalculatedHeight(F)V

    :goto_2
    add-int/lit8 v2, v2, 0x1

    goto :goto_1

    :cond_3
    return-void
.end method

.method public isComplete()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    return v0
.end method

.method public isContent()Z
    .locals 1

    const/4 v0, 0x1

    return v0
.end method

.method public isExtendLastRow()Z
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    const/4 v1, 0x0

    aget-boolean v0, v0, v1

    return v0
.end method

.method public isExtendLastRow(Z)Z
    .locals 1

    if-eqz p1, :cond_0

    .line 2
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    const/4 v0, 0x0

    aget-boolean p1, p1, v0

    return p1

    .line 3
    :cond_0
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    const/4 v0, 0x1

    aget-boolean p1, p1, v0

    return p1
.end method

.method public isHeadersInEvent()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headersInEvent:Z

    return v0
.end method

.method public isInline()Z
    .locals 1

    const/4 v0, 0x0

    return v0
.end method

.method public isLockedWidth()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    return v0
.end method

.method public isLoopCheck()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    return v0
.end method

.method public isNestable()Z
    .locals 1

    const/4 v0, 0x1

    return v0
.end method

.method public isSkipFirstHeader()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    return v0
.end method

.method public isSkipLastFooter()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    return v0
.end method

.method public isSplitLate()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    return v0
.end method

.method public isSplitRows()Z
    .locals 1

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    return v0
.end method

.method public keepRowsTogether(I)V
    .locals 1

    .line 4
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    invoke-virtual {p0, p1, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->keepRowsTogether(II)V

    return-void
.end method

.method public keepRowsTogether(II)V
    .locals 2

    if-ge p1, p2, :cond_0

    :goto_0
    if-ge p1, p2, :cond_0

    .line 3
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v0

    const/4 v1, 0x1

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfPRow;->setMayNotBreak(Z)V

    add-int/lit8 p1, p1, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public keepRowsTogether([I)V
    .locals 3

    const/4 v0, 0x0

    .line 1
    :goto_0
    array-length v1, p1

    if-ge v0, v1, :cond_0

    .line 2
    aget v1, p1, v0

    invoke-virtual {p0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v1

    const/4 v2, 0x1

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfPRow;->setMayNotBreak(Z)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public normalizeHeadersFooters()V
    .locals 2

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    iget v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    if-le v0, v1, :cond_0

    .line 2
    iput v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    :cond_0
    return-void
.end method

.method public process(Lcom/itextpdf/text/ElementListener;)Z
    .locals 0

    .line 1
    :try_start_0
    invoke-interface {p1, p0}, Lcom/itextpdf/text/ElementListener;->add(Lcom/itextpdf/text/Element;)Z

    move-result p1
    :try_end_0
    .catch Lcom/itextpdf/text/DocumentException; {:try_start_0 .. :try_end_0} :catch_0

    return p1

    :catch_0
    const/4 p1, 0x0

    return p1
.end method

.method public resetColumnCount(I)V
    .locals 3

    const/4 v0, 0x0

    if-lez p1, :cond_1

    .line 1
    new-array v1, p1, [F

    iput-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    :goto_0
    if-ge v0, p1, :cond_0

    .line 2
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    const/high16 v2, 0x3f800000    # 1.0f

    aput v2, v1, v0

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    .line 3
    :cond_0
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    array-length p1, p1

    new-array p1, p1, [F

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    .line 4
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->calculateWidths()V

    .line 5
    iget-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    array-length p1, p1

    new-array p1, p1, [Lcom/itextpdf/text/pdf/PdfPCell;

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->currentRow:[Lcom/itextpdf/text/pdf/PdfPCell;

    const/4 p1, 0x0

    .line 6
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    return-void

    .line 7
    :cond_1
    new-instance p1, Ljava/lang/IllegalArgumentException;

    new-array v0, v0, [Ljava/lang/Object;

    const-string v1, "the.number.of.columns.in.pdfptable.constructor.must.be.greater.than.zero"

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public rowSpanAbove(II)Z
    .locals 5

    .line 1
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v0

    const/4 v1, 0x0

    if-ge p2, v0, :cond_5

    if-ltz p2, :cond_5

    const/4 v0, 0x1

    if-ge p1, v0, :cond_0

    goto :goto_2

    :cond_0
    add-int/lit8 v2, p1, -0x1

    .line 2
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfPRow;

    if-nez v3, :cond_1

    return v1

    .line 3
    :cond_1
    invoke-virtual {p0, v2, p2}, Lcom/itextpdf/text/pdf/PdfPTable;->cellAt(II)Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v3

    :goto_0
    if-nez v3, :cond_3

    if-lez v2, :cond_3

    .line 4
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    add-int/lit8 v2, v2, -0x1

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/text/pdf/PdfPRow;

    if-nez v3, :cond_2

    return v1

    .line 5
    :cond_2
    invoke-virtual {p0, v2, p2}, Lcom/itextpdf/text/pdf/PdfPTable;->cellAt(II)Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v3

    goto :goto_0

    :cond_3
    sub-int/2addr p1, v2

    .line 6
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfPCell;->getRowspan()I

    move-result v4

    if-ne v4, v0, :cond_4

    if-le p1, v0, :cond_4

    sub-int/2addr p2, v0

    .line 7
    iget-object v3, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    add-int/2addr v2, v0

    invoke-virtual {v3, v2}, Ljava/util/ArrayList;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfPRow;

    add-int/lit8 p1, p1, -0x1

    .line 8
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v3

    aget-object v3, v3, p2

    :goto_1
    if-nez v3, :cond_4

    if-lez p2, :cond_4

    .line 9
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfPRow;->getCells()[Lcom/itextpdf/text/pdf/PdfPCell;

    move-result-object v3

    add-int/lit8 p2, p2, -0x1

    aget-object v3, v3, p2

    goto :goto_1

    :cond_4
    if-eqz v3, :cond_5

    .line 10
    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfPCell;->getRowspan()I

    move-result p2

    if-le p2, p1, :cond_5

    const/4 v1, 0x1

    :cond_5
    :goto_2
    return v1
.end method

.method public setAccessibleAttribute(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    if-nez v0, :cond_0

    .line 2
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    .line 3
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->accessibleAttributes:Ljava/util/HashMap;

    invoke-virtual {v0, p1, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method public varargs setBreakPoints([I)V
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    const/4 v1, 0x0

    invoke-virtual {p0, v1, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->keepRowsTogether(II)V

    const/4 v0, 0x0

    .line 2
    :goto_0
    array-length v2, p1

    if-ge v0, v2, :cond_0

    .line 3
    aget v2, p1, v0

    invoke-virtual {p0, v2}, Lcom/itextpdf/text/pdf/PdfPTable;->getRow(I)Lcom/itextpdf/text/pdf/PdfPRow;

    move-result-object v2

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfPRow;->setMayNotBreak(Z)V

    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_0
    return-void
.end method

.method public setComplete(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->complete:Z

    return-void
.end method

.method public setExtendLastRow(Z)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    const/4 v1, 0x0

    aput-boolean p1, v0, v1

    const/4 v1, 0x1

    .line 2
    aput-boolean p1, v0, v1

    return-void
.end method

.method public setExtendLastRow(ZZ)V
    .locals 2

    .line 3
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->extendLastRow:[Z

    const/4 v1, 0x0

    aput-boolean p1, v0, v1

    const/4 p1, 0x1

    .line 4
    aput-boolean p2, v0, p1

    return-void
.end method

.method public setFooterRows(I)V
    .locals 0

    if-gez p1, :cond_0

    const/4 p1, 0x0

    .line 1
    :cond_0
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->footerRows:I

    return-void
.end method

.method public setHeaderRows(I)V
    .locals 0

    if-gez p1, :cond_0

    const/4 p1, 0x0

    .line 1
    :cond_0
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    return-void
.end method

.method public setHeadersInEvent(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->headersInEvent:Z

    return-void
.end method

.method public setHorizontalAlignment(I)V
    .locals 0

    .line 1
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->horizontalAlignment:I

    return-void
.end method

.method public setId(Lcom/itextpdf/text/AccessibleElementId;)V
    .locals 0

    .line 1
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->id:Lcom/itextpdf/text/AccessibleElementId;

    return-void
.end method

.method public setKeepTogether(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->keepTogether:Z

    return-void
.end method

.method public setLockedWidth(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->lockedWidth:Z

    return-void
.end method

.method public setLoopCheck(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->loopCheck:Z

    return-void
.end method

.method public setPaddingTop(F)V
    .locals 0

    .line 1
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->paddingTop:F

    return-void
.end method

.method public setRole(Lcom/itextpdf/text/pdf/PdfName;)V
    .locals 0

    .line 1
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->role:Lcom/itextpdf/text/pdf/PdfName;

    return-void
.end method

.method public setRunDirection(I)V
    .locals 2

    if-eqz p1, :cond_1

    const/4 v0, 0x1

    if-eq p1, v0, :cond_1

    const/4 v0, 0x2

    if-eq p1, v0, :cond_1

    const/4 v0, 0x3

    if-ne p1, v0, :cond_0

    goto :goto_0

    .line 1
    :cond_0
    new-instance v0, Ljava/lang/RuntimeException;

    const-string v1, "invalid.run.direction.1"

    invoke-static {v1, p1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;I)Ljava/lang/String;

    move-result-object p1

    invoke-direct {v0, p1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0

    .line 2
    :cond_1
    :goto_0
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->runDirection:I

    return-void
.end method

.method public setSkipFirstHeader(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipFirstHeader:Z

    return-void
.end method

.method public setSkipLastFooter(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->skipLastFooter:Z

    return-void
.end method

.method public setSpacingAfter(F)V
    .locals 0

    .line 1
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingAfter:F

    return-void
.end method

.method public setSpacingBefore(F)V
    .locals 0

    .line 1
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingBefore:F

    return-void
.end method

.method public setSplitLate(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitLate:Z

    return-void
.end method

.method public setSplitRows(Z)V
    .locals 0

    .line 1
    iput-boolean p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->splitRows:Z

    return-void
.end method

.method public setSummary(Ljava/lang/String;)V
    .locals 2

    .line 1
    sget-object v0, Lcom/itextpdf/text/pdf/PdfName;->SUMMARY:Lcom/itextpdf/text/pdf/PdfName;

    new-instance v1, Lcom/itextpdf/text/pdf/PdfString;

    invoke-direct {v1, p1}, Lcom/itextpdf/text/pdf/PdfString;-><init>(Ljava/lang/String;)V

    invoke-virtual {p0, v0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->setAccessibleAttribute(Lcom/itextpdf/text/pdf/PdfName;Lcom/itextpdf/text/pdf/PdfObject;)V

    return-void
.end method

.method public setTableEvent(Lcom/itextpdf/text/pdf/PdfPTableEvent;)V
    .locals 2

    if-nez p1, :cond_0

    const/4 p1, 0x0

    .line 1
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    goto :goto_0

    .line 2
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    if-nez v0, :cond_1

    .line 3
    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    goto :goto_0

    .line 4
    :cond_1
    instance-of v1, v0, Lcom/itextpdf/text/pdf/events/PdfPTableEventForwarder;

    if-eqz v1, :cond_2

    .line 5
    check-cast v0, Lcom/itextpdf/text/pdf/events/PdfPTableEventForwarder;

    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/events/PdfPTableEventForwarder;->addTableEvent(Lcom/itextpdf/text/pdf/PdfPTableEvent;)V

    goto :goto_0

    .line 6
    :cond_2
    new-instance v0, Lcom/itextpdf/text/pdf/events/PdfPTableEventForwarder;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/events/PdfPTableEventForwarder;-><init>()V

    .line 7
    iget-object v1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/events/PdfPTableEventForwarder;->addTableEvent(Lcom/itextpdf/text/pdf/PdfPTableEvent;)V

    .line 8
    invoke-virtual {v0, p1}, Lcom/itextpdf/text/pdf/events/PdfPTableEventForwarder;->addTableEvent(Lcom/itextpdf/text/pdf/PdfPTableEvent;)V

    .line 9
    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    :goto_0
    return-void
.end method

.method public setTotalWidth(F)V
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    cmpl-float v0, v0, p1

    if-nez v0, :cond_0

    return-void

    .line 2
    :cond_0
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 p1, 0x0

    .line 3
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    .line 4
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->calculateWidths()V

    .line 5
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->calculateHeights()F

    return-void
.end method

.method public setTotalWidth([F)V
    .locals 3

    .line 6
    array-length v0, p1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v1

    const/4 v2, 0x0

    if-ne v0, v1, :cond_1

    const/4 v0, 0x0

    .line 7
    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    .line 8
    :goto_0
    array-length v0, p1

    if-ge v2, v0, :cond_0

    .line 9
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    aget v1, p1, v2

    add-float/2addr v0, v1

    iput v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    .line 10
    :cond_0
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->setWidths([F)V

    return-void

    .line 11
    :cond_1
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "wrong.number.of.columns"

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public setWidthPercentage(F)V
    .locals 0

    .line 5
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    return-void
.end method

.method public setWidthPercentage([FLcom/itextpdf/text/Rectangle;)V
    .locals 2

    .line 1
    array-length v0, p1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v1

    if-ne v0, v1, :cond_0

    .line 2
    invoke-virtual {p0, p1}, Lcom/itextpdf/text/pdf/PdfPTable;->setTotalWidth([F)V

    .line 3
    iget p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    invoke-virtual {p2}, Lcom/itextpdf/text/Rectangle;->getRight()F

    move-result v0

    invoke-virtual {p2}, Lcom/itextpdf/text/Rectangle;->getLeft()F

    move-result p2

    sub-float/2addr v0, p2

    div-float/2addr p1, v0

    const/high16 p2, 0x42c80000    # 100.0f

    mul-float p1, p1, p2

    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->widthPercentage:F

    return-void

    .line 4
    :cond_0
    new-instance p1, Ljava/lang/IllegalArgumentException;

    const/4 p2, 0x0

    new-array p2, p2, [Ljava/lang/Object;

    const-string v0, "wrong.number.of.columns"

    invoke-static {v0, p2}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p2

    invoke-direct {p1, p2}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public setWidths([F)V
    .locals 3

    .line 1
    array-length v0, p1

    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v1

    const/4 v2, 0x0

    if-ne v0, v1, :cond_0

    .line 2
    array-length v0, p1

    new-array v0, v0, [F

    iput-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->relativeWidths:[F

    .line 3
    array-length v1, p1

    invoke-static {p1, v2, v0, v2, v1}, Ljava/lang/System;->arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V

    .line 4
    array-length p1, p1

    new-array p1, p1, [F

    iput-object p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    const/4 p1, 0x0

    .line 5
    iput p1, p0, Lcom/itextpdf/text/pdf/PdfPTable;->totalHeight:F

    .line 6
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->calculateWidths()V

    .line 7
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->calculateHeights()F

    return-void

    .line 8
    :cond_0
    new-instance p1, Lcom/itextpdf/text/DocumentException;

    new-array v0, v2, [Ljava/lang/Object;

    const-string v1, "wrong.number.of.columns"

    invoke-static {v1, v0}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v0

    invoke-direct {p1, v0}, Lcom/itextpdf/text/DocumentException;-><init>(Ljava/lang/String;)V

    throw p1
.end method

.method public setWidths([I)V
    .locals 3

    .line 9
    array-length v0, p1

    new-array v0, v0, [F

    const/4 v1, 0x0

    .line 10
    :goto_0
    array-length v2, p1

    if-ge v1, v2, :cond_0

    .line 11
    aget v2, p1, v1

    int-to-float v2, v2

    aput v2, v0, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 12
    :cond_0
    invoke-virtual {p0, v0}, Lcom/itextpdf/text/pdf/PdfPTable;->setWidths([F)V

    return-void
.end method

.method public size()I
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0}, Ljava/util/ArrayList;->size()I

    move-result v0

    return v0
.end method

.method public spacingAfter()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingAfter:F

    return v0
.end method

.method public spacingBefore()F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/text/pdf/PdfPTable;->spacingBefore:F

    return v0
.end method

.method public type()I
    .locals 1

    const/16 v0, 0x17

    return v0
.end method

.method public writeSelectedRows(IIFFLcom/itextpdf/text/pdf/PdfContentByte;)F
    .locals 8

    const/4 v1, 0x0

    const/4 v2, -0x1

    move-object v0, p0

    move v3, p1

    move v4, p2

    move v5, p3

    move v6, p4

    move-object v7, p5

    .line 37
    invoke-virtual/range {v0 .. v7}, Lcom/itextpdf/text/pdf/PdfPTable;->writeSelectedRows(IIIIFFLcom/itextpdf/text/pdf/PdfContentByte;)F

    move-result p1

    return p1
.end method

.method public writeSelectedRows(IIFF[Lcom/itextpdf/text/pdf/PdfContentByte;)F
    .locals 8

    const/4 v1, 0x0

    const/4 v2, -0x1

    move-object v0, p0

    move v3, p1

    move v4, p2

    move v5, p3

    move v6, p4

    move-object v7, p5

    .line 1
    invoke-virtual/range {v0 .. v7}, Lcom/itextpdf/text/pdf/PdfPTable;->writeSelectedRows(IIIIFF[Lcom/itextpdf/text/pdf/PdfContentByte;)F

    move-result p1

    return p1
.end method

.method public writeSelectedRows(IIIIFFLcom/itextpdf/text/pdf/PdfContentByte;)F
    .locals 9

    const/4 v8, 0x1

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    move-object/from16 v7, p7

    .line 38
    invoke-virtual/range {v0 .. v8}, Lcom/itextpdf/text/pdf/PdfPTable;->writeSelectedRows(IIIIFFLcom/itextpdf/text/pdf/PdfContentByte;Z)F

    move-result v0

    return v0
.end method

.method public writeSelectedRows(IIIIFFLcom/itextpdf/text/pdf/PdfContentByte;Z)F
    .locals 15

    move/from16 v0, p1

    move/from16 v1, p2

    .line 39
    invoke-virtual {p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v2

    const/4 v3, 0x0

    if-gez v0, :cond_0

    const/4 v5, 0x0

    goto :goto_0

    .line 40
    :cond_0
    invoke-static {v0, v2}, Ljava/lang/Math;->min(II)I

    move-result v0

    move v5, v0

    :goto_0
    if-gez v1, :cond_1

    move v6, v2

    goto :goto_1

    .line 41
    :cond_1
    invoke-static {v1, v2}, Ljava/lang/Math;->min(II)I

    move-result v0

    move v6, v0

    :goto_1
    if-nez v5, :cond_2

    if-eq v6, v2, :cond_3

    :cond_2
    const/4 v3, 0x1

    :cond_3
    if-eqz v3, :cond_7

    const/4 v0, 0x0

    move v1, v5

    const/4 v4, 0x0

    :goto_2
    if-ge v1, v6, :cond_4

    move-object v13, p0

    .line 42
    iget-object v7, v13, Lcom/itextpdf/text/pdf/PdfPTable;->absoluteWidths:[F

    aget v7, v7, v1

    add-float/2addr v4, v7

    add-int/lit8 v1, v1, 0x1

    goto :goto_2

    :cond_4
    move-object v13, p0

    .line 43
    invoke-virtual/range {p7 .. p7}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    const v1, 0x461c4000    # 10000.0f

    if-nez v5, :cond_5

    const v7, 0x461c4000    # 10000.0f

    goto :goto_3

    :cond_5
    const/4 v7, 0x0

    :goto_3
    if-ne v6, v2, :cond_6

    const v0, 0x461c4000    # 10000.0f

    :cond_6
    sub-float v1, p5, v7

    const v2, -0x39e3c000    # -10000.0f

    add-float/2addr v4, v7

    add-float/2addr v4, v0

    const v0, 0x469c4000    # 20000.0f

    move-object/from16 v14, p7

    .line 44
    invoke-virtual {v14, v1, v2, v4, v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->rectangle(FFFF)V

    .line 45
    invoke-virtual/range {p7 .. p7}, Lcom/itextpdf/text/pdf/PdfContentByte;->clip()V

    .line 46
    invoke-virtual/range {p7 .. p7}, Lcom/itextpdf/text/pdf/PdfContentByte;->newPath()V

    goto :goto_4

    :cond_7
    move-object v13, p0

    move-object/from16 v14, p7

    .line 47
    :goto_4
    invoke-static/range {p7 .. p7}, Lcom/itextpdf/text/pdf/PdfPTable;->beginWritingRows(Lcom/itextpdf/text/pdf/PdfContentByte;)[Lcom/itextpdf/text/pdf/PdfContentByte;

    move-result-object v0

    move-object v4, p0

    move/from16 v7, p3

    move/from16 v8, p4

    move/from16 v9, p5

    move/from16 v10, p6

    move-object v11, v0

    move/from16 v12, p8

    .line 48
    invoke-virtual/range {v4 .. v12}, Lcom/itextpdf/text/pdf/PdfPTable;->writeSelectedRows(IIIIFF[Lcom/itextpdf/text/pdf/PdfContentByte;Z)F

    move-result v1

    .line 49
    invoke-static {v0}, Lcom/itextpdf/text/pdf/PdfPTable;->endWritingRows([Lcom/itextpdf/text/pdf/PdfContentByte;)V

    if-eqz v3, :cond_8

    .line 50
    invoke-virtual/range {p7 .. p7}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    :cond_8
    return v1
.end method

.method public writeSelectedRows(IIIIFF[Lcom/itextpdf/text/pdf/PdfContentByte;)F
    .locals 9

    const/4 v8, 0x1

    move-object v0, p0

    move v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move v6, p6

    move-object/from16 v7, p7

    .line 2
    invoke-virtual/range {v0 .. v8}, Lcom/itextpdf/text/pdf/PdfPTable;->writeSelectedRows(IIIIFF[Lcom/itextpdf/text/pdf/PdfContentByte;Z)F

    move-result v0

    return v0
.end method

.method public writeSelectedRows(IIIIFF[Lcom/itextpdf/text/pdf/PdfContentByte;Z)F
    .locals 19

    move-object/from16 v7, p0

    move/from16 v0, p1

    move/from16 v1, p2

    move/from16 v2, p4

    .line 3
    iget v3, v7, Lcom/itextpdf/text/pdf/PdfPTable;->totalWidth:F

    const/4 v8, 0x0

    const/4 v9, 0x0

    cmpg-float v3, v3, v8

    if-lez v3, :cond_17

    .line 4
    iget-object v3, v7, Lcom/itextpdf/text/pdf/PdfPTable;->rows:Ljava/util/ArrayList;

    invoke-virtual {v3}, Ljava/util/ArrayList;->size()I

    move-result v3

    if-gez p3, :cond_0

    const/4 v10, 0x0

    goto :goto_0

    :cond_0
    move/from16 v10, p3

    :goto_0
    if-gez v2, :cond_1

    goto :goto_1

    .line 5
    :cond_1
    invoke-static {v2, v3}, Ljava/lang/Math;->min(II)I

    move-result v3

    :goto_1
    move v11, v3

    if-lt v10, v11, :cond_2

    return p6

    .line 6
    :cond_2
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getNumberOfColumns()I

    move-result v12

    if-gez v0, :cond_3

    const/4 v13, 0x0

    goto :goto_2

    .line 7
    :cond_3
    invoke-static {v0, v12}, Ljava/lang/Math;->min(II)I

    move-result v0

    move v13, v0

    :goto_2
    if-gez v1, :cond_4

    move v14, v12

    goto :goto_3

    .line 8
    :cond_4
    invoke-static {v1, v12}, Ljava/lang/Math;->min(II)I

    move-result v0

    move v14, v0

    .line 9
    :goto_3
    iget-object v0, v7, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    sget-object v1, Lcom/itextpdf/text/log/Level;->INFO:Lcom/itextpdf/text/log/Level;

    invoke-interface {v0, v1}, Lcom/itextpdf/text/log/Logger;->isLogging(Lcom/itextpdf/text/log/Level;)Z

    move-result v0

    const/4 v15, 0x3

    if-eqz v0, :cond_5

    .line 10
    iget-object v0, v7, Lcom/itextpdf/text/pdf/PdfPTable;->LOGGER:Lcom/itextpdf/text/log/Logger;

    const/4 v1, 0x4

    new-array v1, v1, [Ljava/lang/Object;

    invoke-static {v10}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v9

    invoke-static {v11}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    const/4 v3, 0x1

    aput-object v2, v1, v3

    const/4 v2, 0x2

    invoke-static {v13}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v3

    aput-object v3, v1, v2

    invoke-static {v14}, Ljava/lang/Integer;->valueOf(I)Ljava/lang/Integer;

    move-result-object v2

    aput-object v2, v1, v15

    const-string v2, "Writing row %s to %s; column %s to %s"

    invoke-static {v2, v1}, Ljava/lang/String;->format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-interface {v0, v1}, Lcom/itextpdf/text/log/Logger;->info(Ljava/lang/String;)V

    :cond_5
    const/4 v0, 0x0

    .line 11
    iget-boolean v1, v7, Lcom/itextpdf/text/pdf/PdfPTable;->rowsNotChecked:Z

    if-eqz v1, :cond_6

    const v1, 0x7f7fffff    # Float.MAX_VALUE

    .line 12
    invoke-virtual {v7, v1, v10}, Lcom/itextpdf/text/pdf/PdfPTable;->getFittingRows(FI)Lcom/itextpdf/text/pdf/PdfPTable$FittingRows;

    .line 13
    :cond_6
    invoke-virtual {v7, v10, v11}, Lcom/itextpdf/text/pdf/PdfPTable;->getRows(II)Ljava/util/ArrayList;

    move-result-object v6

    .line 14
    invoke-interface {v6}, Ljava/util/List;->iterator()Ljava/util/Iterator;

    move-result-object v16

    move/from16 v17, p6

    move v5, v10

    :goto_4
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_12

    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    move-object v4, v1

    check-cast v4, Lcom/itextpdf/text/pdf/PdfPRow;

    .line 15
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v1

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    if-eqz v1, :cond_7

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v1

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_7

    if-nez v0, :cond_7

    .line 16
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v0

    aget-object v1, p7, v15

    invoke-direct {v7, v0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->openTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    goto :goto_5

    .line 17
    :cond_7
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v1

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    if-eqz v1, :cond_8

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v1

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_8

    if-nez v0, :cond_8

    .line 18
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    aget-object v1, p7, v15

    invoke-direct {v7, v0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->openTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    goto :goto_5

    .line 19
    :cond_8
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object v1

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    if-eqz v1, :cond_9

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object v1

    iget-object v1, v1, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    invoke-virtual {v1, v4}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v1

    if-eqz v1, :cond_9

    if-nez v0, :cond_9

    .line 20
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object v0

    aget-object v1, p7, v15

    invoke-direct {v7, v0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->openTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    :cond_9
    :goto_5
    move-object/from16 v18, v0

    if-eqz v4, :cond_a

    move-object v0, v4

    move v1, v13

    move v2, v14

    move/from16 v3, p5

    move-object/from16 p1, v4

    move/from16 v4, v17

    move v8, v5

    move-object/from16 v5, p7

    move-object v9, v6

    move/from16 v6, p8

    .line 21
    invoke-virtual/range {v0 .. v6}, Lcom/itextpdf/text/pdf/PdfPRow;->writeCells(IIFF[Lcom/itextpdf/text/pdf/PdfContentByte;Z)V

    .line 22
    invoke-virtual/range {p1 .. p1}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result v0

    sub-float v17, v17, v0

    goto :goto_6

    :cond_a
    move-object/from16 p1, v4

    move v8, v5

    move-object v9, v6

    .line 23
    :goto_6
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    if-eqz v0, :cond_c

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    move-object/from16 v1, p1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_d

    add-int/lit8 v0, v11, -0x1

    if-eq v8, v0, :cond_b

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    add-int/lit8 v5, v8, 0x1

    invoke-interface {v9, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_d

    .line 24
    :cond_b
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getHeader()Lcom/itextpdf/text/pdf/PdfPTableHeader;

    move-result-object v0

    aget-object v1, p7, v15

    invoke-direct {v7, v0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->closeTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    goto :goto_7

    :cond_c
    move-object/from16 v1, p1

    .line 25
    :cond_d
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    if-eqz v0, :cond_f

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_f

    add-int/lit8 v0, v11, -0x1

    if-eq v8, v0, :cond_e

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    add-int/lit8 v5, v8, 0x1

    invoke-interface {v9, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v0, v2}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_f

    .line 26
    :cond_e
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getBody()Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    aget-object v1, p7, v15

    invoke-direct {v7, v0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->closeTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    goto :goto_7

    .line 27
    :cond_f
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    if-eqz v0, :cond_11

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-eqz v0, :cond_11

    add-int/lit8 v0, v11, -0x1

    if-eq v8, v0, :cond_10

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object v0

    iget-object v0, v0, Lcom/itextpdf/text/pdf/PdfPTableBody;->rows:Ljava/util/ArrayList;

    add-int/lit8 v5, v8, 0x1

    invoke-interface {v9, v5}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/util/ArrayList;->contains(Ljava/lang/Object;)Z

    move-result v0

    if-nez v0, :cond_11

    .line 28
    :cond_10
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/text/pdf/PdfPTable;->getFooter()Lcom/itextpdf/text/pdf/PdfPTableFooter;

    move-result-object v0

    aget-object v1, p7, v15

    invoke-direct {v7, v0, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->closeTableBlock(Lcom/itextpdf/text/pdf/PdfPTableBody;Lcom/itextpdf/text/pdf/PdfContentByte;)Lcom/itextpdf/text/pdf/PdfPTableBody;

    move-result-object v0

    goto :goto_7

    :cond_11
    move-object/from16 v0, v18

    :goto_7
    add-int/lit8 v5, v8, 0x1

    move-object v6, v9

    const/4 v8, 0x0

    const/4 v9, 0x0

    goto/16 :goto_4

    :cond_12
    move-object v9, v6

    .line 29
    iget-object v0, v7, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    if-eqz v0, :cond_16

    if-nez v13, :cond_16

    if-ne v14, v12, :cond_16

    sub-int v0, v11, v10

    add-int/lit8 v1, v0, 0x1

    .line 30
    new-array v3, v1, [F

    const/4 v1, 0x0

    .line 31
    aput p6, v3, v1

    const/4 v1, 0x0

    :goto_8
    if-ge v1, v0, :cond_14

    .line 32
    invoke-interface {v9, v1}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lcom/itextpdf/text/pdf/PdfPRow;

    if-eqz v2, :cond_13

    .line 33
    invoke-virtual {v2}, Lcom/itextpdf/text/pdf/PdfPRow;->getMaxHeights()F

    move-result v2

    goto :goto_9

    :cond_13
    const/4 v2, 0x0

    :goto_9
    add-int/lit8 v4, v1, 0x1

    .line 34
    aget v1, v3, v1

    sub-float/2addr v1, v2

    aput v1, v3, v4

    move v1, v4

    goto :goto_8

    .line 35
    :cond_14
    iget-object v0, v7, Lcom/itextpdf/text/pdf/PdfPTable;->tableEvent:Lcom/itextpdf/text/pdf/PdfPTableEvent;

    iget-boolean v1, v7, Lcom/itextpdf/text/pdf/PdfPTable;->headersInEvent:Z

    move/from16 v2, p5

    invoke-virtual {v7, v2, v10, v11, v1}, Lcom/itextpdf/text/pdf/PdfPTable;->getEventWidths(FIIZ)[[F

    move-result-object v2

    iget-boolean v1, v7, Lcom/itextpdf/text/pdf/PdfPTable;->headersInEvent:Z

    if-eqz v1, :cond_15

    iget v1, v7, Lcom/itextpdf/text/pdf/PdfPTable;->headerRows:I

    move v4, v1

    goto :goto_a

    :cond_15
    const/4 v4, 0x0

    :goto_a
    move-object/from16 v1, p0

    move v5, v10

    move-object/from16 v6, p7

    invoke-interface/range {v0 .. v6}, Lcom/itextpdf/text/pdf/PdfPTableEvent;->tableLayout(Lcom/itextpdf/text/pdf/PdfPTable;[[F[FII[Lcom/itextpdf/text/pdf/PdfContentByte;)V

    :cond_16
    return v17

    .line 36
    :cond_17
    new-instance v0, Ljava/lang/RuntimeException;

    const/4 v1, 0x0

    new-array v1, v1, [Ljava/lang/Object;

    const-string v2, "the.table.width.must.be.greater.than.zero"

    invoke-static {v2, v1}, Lcom/itextpdf/text/error_messages/MessageLocalization;->getComposedMessage(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;

    move-result-object v1

    invoke-direct {v0, v1}, Ljava/lang/RuntimeException;-><init>(Ljava/lang/String;)V

    throw v0
.end method
