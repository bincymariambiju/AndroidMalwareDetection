.class public Lcom/itextpdf/awt/DefaultFontMapper;
.super Ljava/lang/Object;
.source "DefaultFontMapper.java"

# interfaces
.implements Lcom/itextpdf/awt/FontMapper;


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;
    }
.end annotation


# instance fields
.field private aliases:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation
.end field

.field private mapper:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public constructor <init>()V
    .locals 1

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 2
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->aliases:Ljava/util/HashMap;

    .line 3
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->mapper:Ljava/util/HashMap;

    return-void
.end method


# virtual methods
.method public awtToPdf(Ljava/awt/Font;)Lcom/itextpdf/text/pdf/BaseFont;
    .locals 7

    .line 1
    :try_start_0
    invoke-virtual {p1}, Ljava/awt/Font;->getFontName()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/DefaultFontMapper;->getBaseFontParameters(Ljava/lang/String;)Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;

    move-result-object v0

    if-eqz v0, :cond_0

    .line 2
    iget-object v1, v0, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;->fontName:Ljava/lang/String;

    iget-object v2, v0, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;->encoding:Ljava/lang/String;

    iget-boolean v3, v0, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;->embedded:Z

    iget-boolean v4, v0, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;->cached:Z

    iget-object v5, v0, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;->ttfAfm:[B

    iget-object v6, v0, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;->pfb:[B

    invoke-static/range {v1 .. v6}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;ZZ[B[B)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object p1

    return-object p1

    .line 3
    :cond_0
    invoke-virtual {p1}, Ljava/awt/Font;->getName()Ljava/lang/String;

    move-result-object v0

    const-string v1, "DialogInput"

    .line 4
    invoke-virtual {v0, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    const-string v2, "Courier"

    if-nez v1, :cond_a

    :try_start_1
    const-string v1, "Monospaced"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_a

    invoke-virtual {v0, v2}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    if-eqz v1, :cond_1

    goto :goto_1

    :cond_1
    const-string v1, "Serif"

    .line 5
    invoke-virtual {v0, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v1

    if-nez v1, :cond_6

    const-string v1, "TimesRoman"

    invoke-virtual {v0, v1}, Ljava/lang/String;->equalsIgnoreCase(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_2

    goto :goto_0

    .line 6
    :cond_2
    invoke-virtual {p1}, Ljava/awt/Font;->isItalic()Z

    move-result v0

    if-eqz v0, :cond_4

    .line 7
    invoke-virtual {p1}, Ljava/awt/Font;->isBold()Z

    move-result p1

    if-eqz p1, :cond_3

    const-string v2, "Helvetica-BoldOblique"

    goto :goto_2

    :cond_3
    const-string v2, "Helvetica-Oblique"

    goto :goto_2

    .line 8
    :cond_4
    invoke-virtual {p1}, Ljava/awt/Font;->isBold()Z

    move-result p1

    if-eqz p1, :cond_5

    const-string v2, "Helvetica-Bold"

    goto :goto_2

    :cond_5
    const-string v2, "Helvetica"

    goto :goto_2

    .line 9
    :cond_6
    :goto_0
    invoke-virtual {p1}, Ljava/awt/Font;->isItalic()Z

    move-result v0

    if-eqz v0, :cond_8

    .line 10
    invoke-virtual {p1}, Ljava/awt/Font;->isBold()Z

    move-result p1

    if-eqz p1, :cond_7

    const-string v2, "Times-BoldItalic"

    goto :goto_2

    :cond_7
    const-string v2, "Times-Italic"

    goto :goto_2

    .line 11
    :cond_8
    invoke-virtual {p1}, Ljava/awt/Font;->isBold()Z

    move-result p1

    if-eqz p1, :cond_9

    const-string v2, "Times-Bold"

    goto :goto_2

    :cond_9
    const-string v2, "Times-Roman"

    goto :goto_2

    .line 12
    :cond_a
    :goto_1
    invoke-virtual {p1}, Ljava/awt/Font;->isItalic()Z

    move-result v0

    if-eqz v0, :cond_c

    .line 13
    invoke-virtual {p1}, Ljava/awt/Font;->isBold()Z

    move-result p1

    if-eqz p1, :cond_b

    const-string v2, "Courier-BoldOblique"

    goto :goto_2

    :cond_b
    const-string v2, "Courier-Oblique"

    goto :goto_2

    .line 14
    :cond_c
    invoke-virtual {p1}, Ljava/awt/Font;->isBold()Z

    move-result p1

    if-eqz p1, :cond_d

    const-string v2, "Courier-Bold"

    :cond_d
    :goto_2
    const-string p1, "Cp1252"

    const/4 v0, 0x0

    .line 15
    invoke-static {v2, p1, v0}, Lcom/itextpdf/text/pdf/BaseFont;->createFont(Ljava/lang/String;Ljava/lang/String;Z)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object p1
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    return-object p1

    :catch_0
    move-exception p1

    .line 16
    new-instance v0, Lcom/itextpdf/text/ExceptionConverter;

    invoke-direct {v0, p1}, Lcom/itextpdf/text/ExceptionConverter;-><init>(Ljava/lang/Exception;)V

    throw v0
.end method

.method public getAliases()Ljava/util/HashMap;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Ljava/lang/String;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->aliases:Ljava/util/HashMap;

    return-object v0
.end method

.method public getBaseFontParameters(Ljava/lang/String;)Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->aliases:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljava/lang/String;

    if-nez v0, :cond_0

    .line 2
    iget-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->mapper:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;

    return-object p1

    .line 3
    :cond_0
    iget-object v1, p0, Lcom/itextpdf/awt/DefaultFontMapper;->mapper:Ljava/util/HashMap;

    invoke-virtual {v1, v0}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;

    if-nez v0, :cond_1

    .line 4
    iget-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->mapper:Ljava/util/HashMap;

    invoke-virtual {v0, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    check-cast p1, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;

    return-object p1

    :cond_1
    return-object v0
.end method

.method public getMapper()Ljava/util/HashMap;
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "()",
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;",
            ">;"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->mapper:Ljava/util/HashMap;

    return-object v0
.end method

.method public insertDirectory(Ljava/lang/String;)I
    .locals 3

    .line 1
    new-instance v0, Ljava/io/File;

    invoke-direct {v0, p1}, Ljava/io/File;-><init>(Ljava/lang/String;)V

    .line 2
    invoke-virtual {v0}, Ljava/io/File;->exists()Z

    move-result p1

    const/4 v1, 0x0

    if-eqz p1, :cond_3

    invoke-virtual {v0}, Ljava/io/File;->isDirectory()Z

    move-result p1

    if-nez p1, :cond_0

    goto :goto_1

    .line 3
    :cond_0
    invoke-virtual {v0}, Ljava/io/File;->listFiles()[Ljava/io/File;

    move-result-object p1

    if-nez p1, :cond_1

    return v1

    :cond_1
    const/4 v0, 0x0

    .line 4
    :goto_0
    array-length v2, p1

    if-ge v1, v2, :cond_2

    .line 5
    aget-object v2, p1, v1

    invoke-virtual {p0, v2}, Lcom/itextpdf/awt/DefaultFontMapper;->insertFile(Ljava/io/File;)I

    move-result v2

    add-int/2addr v0, v2

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    :cond_2
    return v0

    :cond_3
    :goto_1
    return v1
.end method

.method public insertFile(Ljava/io/File;)I
    .locals 8

    .line 1
    invoke-virtual {p1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v0

    invoke-virtual {v0}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v0

    const/4 v1, 0x0

    :try_start_0
    const-string v2, ".ttf"

    .line 2
    invoke-virtual {v0, v2}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v2
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    const/4 v3, 0x0

    const-string v4, "Cp1252"

    const/4 v5, 0x1

    if-nez v2, :cond_2

    :try_start_1
    const-string v2, ".otf"

    invoke-virtual {v0, v2}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v2

    if-nez v2, :cond_2

    const-string v2, ".afm"

    invoke-virtual {v0, v2}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v2

    if-eqz v2, :cond_0

    goto :goto_1

    :cond_0
    const-string v2, ".ttc"

    .line 3
    invoke-virtual {v0, v2}, Ljava/lang/String;->endsWith(Ljava/lang/String;)Z

    move-result v0

    if-eqz v0, :cond_3

    .line 4
    invoke-virtual {p1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/pdf/BaseFont;->enumerateTTCNames(Ljava/lang/String;)[Ljava/lang/String;

    move-result-object v0

    const/4 v2, 0x0

    .line 5
    :goto_0
    array-length v6, v0

    if-ge v2, v6, :cond_1

    .line 6
    new-instance v6, Ljava/lang/StringBuilder;

    invoke-direct {v6}, Ljava/lang/StringBuilder;-><init>()V

    invoke-virtual {p1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    const-string v7, ","

    invoke-virtual {v6, v7}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v6, v2}, Ljava/lang/StringBuilder;->append(I)Ljava/lang/StringBuilder;

    invoke-virtual {v6}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object v6

    .line 7
    invoke-static {v6, v4, v3}, Lcom/itextpdf/text/pdf/BaseFont;->getAllFontNames(Ljava/lang/String;Ljava/lang/String;[B)[Ljava/lang/Object;

    move-result-object v7

    .line 8
    invoke-virtual {p0, v7, v6}, Lcom/itextpdf/awt/DefaultFontMapper;->insertNames([Ljava/lang/Object;Ljava/lang/String;)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_0

    :cond_1
    return v5

    .line 9
    :cond_2
    :goto_1
    invoke-virtual {p1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object v0

    invoke-static {v0, v4, v3}, Lcom/itextpdf/text/pdf/BaseFont;->getAllFontNames(Ljava/lang/String;Ljava/lang/String;[B)[Ljava/lang/Object;

    move-result-object v0

    .line 10
    invoke-virtual {p1}, Ljava/io/File;->getPath()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, v0, p1}, Lcom/itextpdf/awt/DefaultFontMapper;->insertNames([Ljava/lang/Object;Ljava/lang/String;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_0

    return v5

    :catch_0
    :cond_3
    return v1
.end method

.method public insertNames([Ljava/lang/Object;Ljava/lang/String;)V
    .locals 8

    const/4 v0, 0x2

    .line 1
    aget-object v1, p1, v0

    check-cast v1, [[Ljava/lang/String;

    const/4 v2, 0x0

    const/4 v3, 0x0

    .line 2
    :goto_0
    array-length v4, v1

    const/4 v5, 0x3

    if-ge v3, v4, :cond_1

    .line 3
    aget-object v4, v1, v3

    .line 4
    aget-object v6, v4, v0

    const-string v7, "1033"

    invoke-virtual {v6, v7}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v6

    if-eqz v6, :cond_0

    .line 5
    aget-object v0, v4, v5

    goto :goto_1

    :cond_0
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    :cond_1
    const/4 v0, 0x0

    :goto_1
    if-nez v0, :cond_2

    .line 6
    aget-object v0, v1, v2

    aget-object v0, v0, v5

    .line 7
    :cond_2
    new-instance v3, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;

    invoke-direct {v3, p2}, Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;-><init>(Ljava/lang/String;)V

    .line 8
    iget-object p2, p0, Lcom/itextpdf/awt/DefaultFontMapper;->mapper:Ljava/util/HashMap;

    invoke-virtual {p2, v0, v3}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    const/4 p2, 0x0

    .line 9
    :goto_2
    array-length v3, v1

    if-ge p2, v3, :cond_3

    .line 10
    iget-object v3, p0, Lcom/itextpdf/awt/DefaultFontMapper;->aliases:Ljava/util/HashMap;

    aget-object v4, v1, p2

    aget-object v4, v4, v5

    invoke-virtual {v3, v4, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 p2, p2, 0x1

    goto :goto_2

    .line 11
    :cond_3
    iget-object p2, p0, Lcom/itextpdf/awt/DefaultFontMapper;->aliases:Ljava/util/HashMap;

    aget-object p1, p1, v2

    check-cast p1, Ljava/lang/String;

    invoke-virtual {p2, p1, v0}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method public pdfToAwt(Lcom/itextpdf/text/pdf/BaseFont;I)Ljava/awt/Font;
    .locals 9

    .line 1
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/BaseFont;->getFullFontName()[[Ljava/lang/String;

    move-result-object p1

    .line 2
    array-length v0, p1

    const/4 v1, 0x1

    const/4 v2, 0x3

    const/4 v3, 0x0

    if-ne v0, v1, :cond_0

    .line 3
    new-instance v0, Ljava/awt/Font;

    aget-object p1, p1, v3

    aget-object p1, p1, v2

    invoke-direct {v0, p1, v3, p2}, Ljava/awt/Font;-><init>(Ljava/lang/String;II)V

    return-object v0

    :cond_0
    const/4 v0, 0x0

    move-object v5, v0

    const/4 v4, 0x0

    .line 4
    :goto_0
    array-length v6, p1

    if-ge v4, v6, :cond_3

    .line 5
    aget-object v6, p1, v4

    .line 6
    aget-object v7, v6, v3

    const-string v8, "1"

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_1

    aget-object v7, v6, v1

    const-string v8, "0"

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_1

    .line 7
    aget-object v5, v6, v2

    goto :goto_1

    :cond_1
    const/4 v7, 0x2

    .line 8
    aget-object v7, v6, v7

    const-string v8, "1033"

    invoke-virtual {v7, v8}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v7

    if-eqz v7, :cond_2

    .line 9
    aget-object v0, v6, v2

    goto :goto_2

    :cond_2
    :goto_1
    add-int/lit8 v4, v4, 0x1

    goto :goto_0

    :cond_3
    :goto_2
    if-nez v0, :cond_4

    goto :goto_3

    :cond_4
    move-object v5, v0

    :goto_3
    if-nez v5, :cond_5

    .line 10
    aget-object p1, p1, v3

    aget-object v5, p1, v2

    .line 11
    :cond_5
    new-instance p1, Ljava/awt/Font;

    invoke-direct {p1, v5, v3, p2}, Ljava/awt/Font;-><init>(Ljava/lang/String;II)V

    return-object p1
.end method

.method public putAlias(Ljava/lang/String;Ljava/lang/String;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->aliases:Ljava/util/HashMap;

    invoke-virtual {v0, p1, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return-void
.end method

.method public putName(Ljava/lang/String;Lcom/itextpdf/awt/DefaultFontMapper$BaseFontParameters;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/DefaultFontMapper;->mapper:Ljava/util/HashMap;

    invoke-virtual {v0, p1, p2}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    return-void
.end method
