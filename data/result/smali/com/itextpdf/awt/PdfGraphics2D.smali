.class public Lcom/itextpdf/awt/PdfGraphics2D;
.super Ljava/awt/Graphics2D;
.source "PdfGraphics2D.java"


# annotations
.annotation system Ldalvik/annotation/MemberClasses;
    value = {
        Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;,
        Lcom/itextpdf/awt/PdfGraphics2D$FakeComponent;,
        Lcom/itextpdf/awt/PdfGraphics2D$Kid;
    }
.end annotation


# static fields
.field public static final AFM_DIVISOR:I = 0x3e8

.field private static final CLIP:I = 0x3

.field private static final FILL:I = 0x1

.field private static final IDENTITY:Ljava/awt/geom/AffineTransform;

.field private static final STROKE:I = 0x2


# instance fields
.field private alpha:F

.field public background:Ljava/awt/Color;

.field public baseFont:Lcom/itextpdf/text/pdf/BaseFont;

.field public baseFonts:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap<",
            "Ljava/lang/String;",
            "Lcom/itextpdf/text/pdf/BaseFont;",
            ">;"
        }
    .end annotation
.end field

.field public cb:Lcom/itextpdf/text/pdf/PdfContentByte;

.field public clip:Ljava/awt/geom/Area;

.field private composite:Ljava/awt/Composite;

.field private convertImagesToJPEG:Z

.field public currentFillGState:I

.field public currentStrokeGState:I

.field private dg2:Ljava/awt/Graphics2D;

.field public disposeCalled:Z

.field public fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

.field public font:Ljava/awt/Font;

.field public fontMapper:Lcom/itextpdf/awt/FontMapper;

.field public fontSize:F

.field public height:F

.field private jpegQuality:F

.field private kid:Z

.field private kids:Ljava/util/ArrayList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/ArrayList<",
            "Lcom/itextpdf/awt/PdfGraphics2D$Kid;",
            ">;"
        }
    .end annotation
.end field

.field private mediaTracker:Ljava/awt/MediaTracker;

.field private oldStroke:Ljava/awt/Stroke;

.field private onlyShapes:Z

.field public originalStroke:Ljava/awt/Stroke;

.field public paint:Ljava/awt/Paint;

.field private paintFill:Ljava/awt/Paint;

.field private paintStroke:Ljava/awt/Paint;

.field private realPaint:Ljava/awt/Paint;

.field public rhints:Ljava/awt/RenderingHints;

.field public strikethrough:Z

.field public stroke:Ljava/awt/Stroke;

.field public strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

.field private strokeOne:Ljava/awt/BasicStroke;

.field public transform:Ljava/awt/geom/AffineTransform;

.field public underline:Z

.field public width:F


# direct methods
.method public static constructor <clinit>()V
    .locals 1

    .line 1
    new-instance v0, Ljava/awt/geom/AffineTransform;

    invoke-direct {v0}, Ljava/awt/geom/AffineTransform;-><init>()V

    sput-object v0, Lcom/itextpdf/awt/PdfGraphics2D;->IDENTITY:Ljava/awt/geom/AffineTransform;

    return-void
.end method

.method private constructor <init>()V
    .locals 2

    .line 1
    invoke-direct {p0}, Ljava/awt/Graphics2D;-><init>()V

    .line 2
    new-instance v0, Ljava/awt/BasicStroke;

    const/high16 v1, 0x3f800000    # 1.0f

    invoke-direct {v0, v1}, Ljava/awt/BasicStroke;-><init>(F)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeOne:Ljava/awt/BasicStroke;

    .line 3
    new-instance v0, Ljava/awt/RenderingHints;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Ljava/awt/RenderingHints;-><init>(Ljava/util/Map;)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    const/4 v0, 0x0

    .line 4
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->disposeCalled:Z

    .line 5
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kid:Z

    .line 6
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->onlyShapes:Z

    const/16 v1, 0xff

    .line 7
    iput v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    .line 8
    iput v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->currentStrokeGState:I

    .line 9
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->convertImagesToJPEG:Z

    const v0, 0x3f733333    # 0.95f

    .line 10
    iput v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->jpegQuality:F

    .line 11
    sget-object v0, Ljava/awt/RenderingHints;->KEY_FRACTIONALMETRICS:Ljava/awt/RenderingHints$Key;

    sget-object v1, Ljava/awt/RenderingHints;->VALUE_FRACTIONALMETRICS_ON:Ljava/lang/Object;

    invoke-virtual {p0, v0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setRenderingHint(Ljava/awt/RenderingHints$Key;Ljava/lang/Object;)V

    .line 12
    sget-object v0, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;->KEY_INSTANCE:Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;

    sget-object v1, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;->VALUE_HYPERLINKKEY_OFF:Ljava/lang/Object;

    invoke-virtual {p0, v0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setRenderingHint(Ljava/awt/RenderingHints$Key;Ljava/lang/Object;)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfContentByte;FF)V
    .locals 8

    const/4 v4, 0x0

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    .line 13
    invoke-direct/range {v0 .. v7}, Lcom/itextpdf/awt/PdfGraphics2D;-><init>(Lcom/itextpdf/text/pdf/PdfContentByte;FFLcom/itextpdf/awt/FontMapper;ZZF)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfContentByte;FFLcom/itextpdf/awt/FontMapper;)V
    .locals 8

    const/4 v5, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v4, p4

    .line 14
    invoke-direct/range {v0 .. v7}, Lcom/itextpdf/awt/PdfGraphics2D;-><init>(Lcom/itextpdf/text/pdf/PdfContentByte;FFLcom/itextpdf/awt/FontMapper;ZZF)V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfContentByte;FFLcom/itextpdf/awt/FontMapper;ZZF)V
    .locals 4

    .line 16
    invoke-direct {p0}, Ljava/awt/Graphics2D;-><init>()V

    .line 17
    new-instance v0, Ljava/awt/BasicStroke;

    const/high16 v1, 0x3f800000    # 1.0f

    invoke-direct {v0, v1}, Ljava/awt/BasicStroke;-><init>(F)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeOne:Ljava/awt/BasicStroke;

    .line 18
    new-instance v0, Ljava/awt/RenderingHints;

    const/4 v1, 0x0

    invoke-direct {v0, v1}, Ljava/awt/RenderingHints;-><init>(Ljava/util/Map;)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    const/4 v0, 0x0

    .line 19
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->disposeCalled:Z

    .line 20
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kid:Z

    .line 21
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->onlyShapes:Z

    const/16 v2, 0xff

    .line 22
    iput v2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    .line 23
    iput v2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->currentStrokeGState:I

    .line 24
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->convertImagesToJPEG:Z

    const v2, 0x3f733333    # 0.95f

    .line 25
    iput v2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->jpegQuality:F

    const/16 v2, 0x100

    new-array v3, v2, [Lcom/itextpdf/text/pdf/PdfGState;

    .line 26
    iput-object v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    new-array v2, v2, [Lcom/itextpdf/text/pdf/PdfGState;

    .line 27
    iput-object v2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

    .line 28
    iput-boolean p6, p0, Lcom/itextpdf/awt/PdfGraphics2D;->convertImagesToJPEG:Z

    .line 29
    iput p7, p0, Lcom/itextpdf/awt/PdfGraphics2D;->jpegQuality:F

    .line 30
    iput-boolean p5, p0, Lcom/itextpdf/awt/PdfGraphics2D;->onlyShapes:Z

    .line 31
    new-instance p6, Ljava/awt/geom/AffineTransform;

    invoke-direct {p6}, Ljava/awt/geom/AffineTransform;-><init>()V

    iput-object p6, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    .line 32
    new-instance p6, Ljava/util/HashMap;

    invoke-direct {p6}, Ljava/util/HashMap;-><init>()V

    iput-object p6, p0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFonts:Ljava/util/HashMap;

    if-nez p5, :cond_0

    .line 33
    iput-object p4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->fontMapper:Lcom/itextpdf/awt/FontMapper;

    if-nez p4, :cond_0

    .line 34
    new-instance p4, Lcom/itextpdf/awt/DefaultFontMapper;

    invoke-direct {p4}, Lcom/itextpdf/awt/DefaultFontMapper;-><init>()V

    iput-object p4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->fontMapper:Lcom/itextpdf/awt/FontMapper;

    .line 35
    :cond_0
    sget-object p4, Ljava/awt/Color;->black:Ljava/awt/Color;

    iput-object p4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    .line 36
    sget-object p4, Ljava/awt/Color;->white:Ljava/awt/Color;

    iput-object p4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->background:Ljava/awt/Color;

    .line 37
    new-instance p4, Ljava/awt/Font;

    const/16 p5, 0xc

    const-string p6, "sanserif"

    invoke-direct {p4, p6, v0, p5}, Ljava/awt/Font;-><init>(Ljava/lang/String;II)V

    invoke-virtual {p0, p4}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    .line 38
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    .line 39
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    .line 40
    iput p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->width:F

    .line 41
    iput p3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    .line 42
    new-instance p4, Ljava/awt/geom/Area;

    new-instance p5, Ljava/awt/geom/Rectangle2D$Float;

    const/4 p6, 0x0

    invoke-direct {p5, p6, p6, p2, p3}, Ljava/awt/geom/Rectangle2D$Float;-><init>(FFFF)V

    invoke-direct {p4, p5}, Ljava/awt/geom/Area;-><init>(Ljava/awt/Shape;)V

    iput-object p4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    .line 43
    invoke-virtual {p0, p4}, Lcom/itextpdf/awt/PdfGraphics2D;->clip(Ljava/awt/Shape;)V

    .line 44
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeOne:Ljava/awt/BasicStroke;

    iput-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->oldStroke:Ljava/awt/Stroke;

    iput-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    iput-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    .line 45
    invoke-direct {p0, p2, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setStrokeDiff(Ljava/awt/Stroke;Ljava/awt/Stroke;)V

    .line 46
    invoke-virtual {p1}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    return-void
.end method

.method public constructor <init>(Lcom/itextpdf/text/pdf/PdfContentByte;FFZ)V
    .locals 8

    const/4 v4, 0x0

    const/4 v6, 0x0

    const/4 v7, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v5, p4

    .line 15
    invoke-direct/range {v0 .. v7}, Lcom/itextpdf/awt/PdfGraphics2D;-><init>(Lcom/itextpdf/text/pdf/PdfContentByte;FFLcom/itextpdf/awt/FontMapper;ZZF)V

    return-void
.end method

.method public static asPoints(DI)D
    .locals 2

    int-to-double v0, p2

    mul-double p0, p0, v0

    const-wide v0, 0x408f400000000000L    # 1000.0

    div-double/2addr p0, v0

    return-wide p0
.end method

.method private checkNewPaint(Ljava/awt/Paint;)Z
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    const/4 v1, 0x0

    if-ne v0, p1, :cond_0

    return v1

    .line 2
    :cond_0
    instance-of v2, v0, Ljava/awt/Color;

    if-eqz v2, :cond_1

    invoke-virtual {v0, p1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result p1

    if-nez p1, :cond_2

    :cond_1
    const/4 v1, 0x1

    :cond_2
    return v1
.end method

.method private drawImage(Ljava/awt/Image;Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/Color;Ljava/awt/image/ImageObserver;)Z
    .locals 17

    move-object/from16 v1, p0

    move-object/from16 v0, p1

    move-object/from16 v9, p2

    move-object/from16 v2, p3

    move-object/from16 v3, p5

    if-nez v2, :cond_0

    .line 24
    new-instance v2, Ljava/awt/geom/AffineTransform;

    invoke-direct {v2}, Ljava/awt/geom/AffineTransform;-><init>()V

    goto :goto_0

    .line 25
    :cond_0
    new-instance v4, Ljava/awt/geom/AffineTransform;

    invoke-direct {v4, v2}, Ljava/awt/geom/AffineTransform;-><init>(Ljava/awt/geom/AffineTransform;)V

    move-object v2, v4

    :goto_0
    const-wide/16 v4, 0x0

    .line 26
    invoke-virtual {v0, v3}, Ljava/awt/Image;->getHeight(Ljava/awt/image/ImageObserver;)I

    move-result v6

    int-to-double v6, v6

    invoke-virtual {v2, v4, v5, v6, v7}, Ljava/awt/geom/AffineTransform;->translate(DD)V

    .line 27
    invoke-virtual {v0, v3}, Ljava/awt/Image;->getWidth(Ljava/awt/image/ImageObserver;)I

    move-result v4

    int-to-double v4, v4

    invoke-virtual {v0, v3}, Ljava/awt/Image;->getHeight(Ljava/awt/image/ImageObserver;)I

    move-result v3

    int-to-double v6, v3

    invoke-virtual {v2, v4, v5, v6, v7}, Ljava/awt/geom/AffineTransform;->scale(DD)V

    .line 28
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeMatrix()Ljava/awt/geom/AffineTransform;

    move-result-object v3

    const-wide/high16 v4, 0x3ff0000000000000L    # 1.0

    const-wide/high16 v6, -0x4010000000000000L    # -1.0

    .line 29
    invoke-static {v4, v5, v6, v7}, Ljava/awt/geom/AffineTransform;->getScaleInstance(DD)Ljava/awt/geom/AffineTransform;

    move-result-object v4

    .line 30
    invoke-virtual {v3, v2}, Ljava/awt/geom/AffineTransform;->concatenate(Ljava/awt/geom/AffineTransform;)V

    .line 31
    invoke-virtual {v3, v4}, Ljava/awt/geom/AffineTransform;->concatenate(Ljava/awt/geom/AffineTransform;)V

    const/4 v2, 0x6

    new-array v10, v2, [D

    .line 32
    invoke-virtual {v3, v10}, Ljava/awt/geom/AffineTransform;->getMatrix([D)V

    .line 33
    iget v2, v1, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    const/16 v11, 0xff

    if-eq v2, v11, :cond_2

    .line 34
    iget-object v2, v1, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aget-object v2, v2, v11

    if-nez v2, :cond_1

    .line 35
    new-instance v2, Lcom/itextpdf/text/pdf/PdfGState;

    invoke-direct {v2}, Lcom/itextpdf/text/pdf/PdfGState;-><init>()V

    const/high16 v3, 0x3f800000    # 1.0f

    .line 36
    invoke-virtual {v2, v3}, Lcom/itextpdf/text/pdf/PdfGState;->setFillOpacity(F)V

    .line 37
    iget-object v3, v1, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aput-object v2, v3, v11

    .line 38
    :cond_1
    iget-object v3, v1, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v3, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setGState(Lcom/itextpdf/text/pdf/PdfGState;)V

    .line 39
    :cond_2
    :try_start_0
    iget-boolean v2, v1, Lcom/itextpdf/awt/PdfGraphics2D;->convertImagesToJPEG:Z

    const/4 v12, 0x2

    const/4 v13, 0x1

    const/4 v14, 0x0

    if-nez v2, :cond_3

    move-object/from16 v2, p4

    .line 40
    invoke-static {v0, v2}, Lcom/itextpdf/text/Image;->getInstance(Ljava/awt/Image;Ljava/awt/Color;)Lcom/itextpdf/text/Image;

    move-result-object v0

    :goto_1
    move-object v3, v0

    goto :goto_2

    .line 41
    :cond_3
    new-instance v15, Ljava/awt/image/BufferedImage;

    invoke-virtual {v0, v14}, Ljava/awt/Image;->getWidth(Ljava/awt/image/ImageObserver;)I

    move-result v2

    invoke-virtual {v0, v14}, Ljava/awt/Image;->getHeight(Ljava/awt/image/ImageObserver;)I

    move-result v3

    invoke-direct {v15, v2, v3, v13}, Ljava/awt/image/BufferedImage;-><init>(III)V

    .line 42
    invoke-virtual {v15}, Ljava/awt/image/BufferedImage;->createGraphics()Ljava/awt/Graphics2D;

    move-result-object v16

    const/4 v4, 0x0

    const/4 v5, 0x0

    .line 43
    invoke-virtual {v0, v14}, Ljava/awt/Image;->getWidth(Ljava/awt/image/ImageObserver;)I

    move-result v6

    invoke-virtual {v0, v14}, Ljava/awt/Image;->getHeight(Ljava/awt/image/ImageObserver;)I

    move-result v7

    const/4 v8, 0x0

    move-object/from16 v2, v16

    move-object/from16 v3, p1

    invoke-virtual/range {v2 .. v8}, Ljava/awt/Graphics2D;->drawImage(Ljava/awt/Image;IIIILjava/awt/image/ImageObserver;)Z

    .line 44
    invoke-virtual/range {v16 .. v16}, Ljava/awt/Graphics2D;->dispose()V

    .line 45
    new-instance v0, Ljava/io/ByteArrayOutputStream;

    invoke-direct {v0}, Ljava/io/ByteArrayOutputStream;-><init>()V

    .line 46
    new-instance v2, Ljavax/imageio/plugins/jpeg/JPEGImageWriteParam;

    invoke-static {}, Ljava/util/Locale;->getDefault()Ljava/util/Locale;

    move-result-object v3

    invoke-direct {v2, v3}, Ljavax/imageio/plugins/jpeg/JPEGImageWriteParam;-><init>(Ljava/util/Locale;)V

    .line 47
    invoke-virtual {v2, v12}, Ljavax/imageio/ImageWriteParam;->setCompressionMode(I)V

    .line 48
    iget v3, v1, Lcom/itextpdf/awt/PdfGraphics2D;->jpegQuality:F

    invoke-virtual {v2, v3}, Ljavax/imageio/ImageWriteParam;->setCompressionQuality(F)V

    const-string v3, "jpg"

    .line 49
    invoke-static {v3}, Ljavax/imageio/ImageIO;->getImageWritersByFormatName(Ljava/lang/String;)Ljava/util/Iterator;

    move-result-object v3

    invoke-interface {v3}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljavax/imageio/ImageWriter;

    .line 50
    invoke-static {v0}, Ljavax/imageio/ImageIO;->createImageOutputStream(Ljava/lang/Object;)Ljavax/imageio/stream/ImageOutputStream;

    move-result-object v4

    .line 51
    invoke-virtual {v3, v4}, Ljavax/imageio/ImageWriter;->setOutput(Ljava/lang/Object;)V

    .line 52
    new-instance v5, Ljavax/imageio/IIOImage;

    invoke-direct {v5, v15, v14, v14}, Ljavax/imageio/IIOImage;-><init>(Ljava/awt/image/RenderedImage;Ljava/util/List;Ljavax/imageio/metadata/IIOMetadata;)V

    invoke-virtual {v3, v14, v5, v2}, Ljavax/imageio/ImageWriter;->write(Ljavax/imageio/metadata/IIOMetadata;Ljavax/imageio/IIOImage;Ljavax/imageio/ImageWriteParam;)V

    .line 53
    invoke-virtual {v3}, Ljavax/imageio/ImageWriter;->dispose()V

    .line 54
    invoke-interface {v4}, Ljavax/imageio/stream/ImageOutputStream;->close()V

    .line 55
    invoke-virtual {v15}, Ljava/awt/image/BufferedImage;->flush()V

    .line 56
    invoke-virtual {v0}, Ljava/io/ByteArrayOutputStream;->toByteArray()[B

    move-result-object v0

    invoke-static {v0}, Lcom/itextpdf/text/Image;->getInstance([B)Lcom/itextpdf/text/Image;

    move-result-object v0

    goto :goto_1

    :goto_2
    if-eqz v9, :cond_4

    .line 57
    invoke-static {v9, v14, v13}, Lcom/itextpdf/text/Image;->getInstance(Ljava/awt/Image;Ljava/awt/Color;Z)Lcom/itextpdf/text/Image;

    move-result-object v0

    .line 58
    invoke-virtual {v0}, Lcom/itextpdf/text/Image;->makeMask()V

    .line 59
    invoke-virtual {v0, v13}, Lcom/itextpdf/text/Image;->setInverted(Z)V

    .line 60
    invoke-virtual {v3, v0}, Lcom/itextpdf/text/Image;->setImageMask(Lcom/itextpdf/text/Image;)V

    .line 61
    :cond_4
    iget-object v2, v1, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/4 v0, 0x0

    aget-wide v4, v10, v0

    double-to-float v4, v4

    aget-wide v5, v10, v13

    double-to-float v5, v5

    aget-wide v6, v10, v12

    double-to-float v6, v6

    const/4 v12, 0x3

    aget-wide v7, v10, v12

    double-to-float v7, v7

    const/4 v14, 0x4

    aget-wide v8, v10, v14

    double-to-float v8, v8

    const/4 v15, 0x5

    aget-wide v11, v10, v15

    double-to-float v9, v11

    invoke-virtual/range {v2 .. v9}, Lcom/itextpdf/text/pdf/PdfContentByte;->addImage(Lcom/itextpdf/text/Image;FFFFFF)V

    .line 62
    sget-object v2, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;->KEY_INSTANCE:Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;

    invoke-virtual {v1, v2}, Lcom/itextpdf/awt/PdfGraphics2D;->getRenderingHint(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;

    move-result-object v2

    if-eqz v2, :cond_5

    .line 63
    sget-object v3, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;->VALUE_HYPERLINKKEY_OFF:Ljava/lang/Object;

    invoke-virtual {v2, v3}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v3

    if-nez v3, :cond_5

    .line 64
    new-instance v5, Lcom/itextpdf/text/pdf/PdfAction;

    invoke-virtual {v2}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-direct {v5, v2}, Lcom/itextpdf/text/pdf/PdfAction;-><init>(Ljava/lang/String;)V

    .line 65
    iget-object v4, v1, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    aget-wide v2, v10, v14

    double-to-float v6, v2

    aget-wide v2, v10, v15

    double-to-float v7, v2

    aget-wide v2, v10, v0

    aget-wide v8, v10, v14

    add-double/2addr v2, v8

    double-to-float v8, v2

    const/4 v0, 0x3

    aget-wide v2, v10, v0

    aget-wide v9, v10, v15

    add-double/2addr v2, v9

    double-to-float v9, v2

    invoke-virtual/range {v4 .. v9}, Lcom/itextpdf/text/pdf/PdfContentByte;->setAction(Lcom/itextpdf/text/pdf/PdfAction;FFFF)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    .line 66
    :cond_5
    iget v0, v1, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    if-ltz v0, :cond_6

    const/16 v2, 0xff

    if-eq v0, v2, :cond_6

    .line 67
    iget-object v2, v1, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aget-object v0, v2, v0

    .line 68
    iget-object v2, v1, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v2, v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->setGState(Lcom/itextpdf/text/pdf/PdfGState;)V

    :cond_6
    return v13

    :catch_0
    move-exception v0

    .line 69
    new-instance v2, Ljava/lang/IllegalArgumentException;

    invoke-direct {v2, v0}, Ljava/lang/IllegalArgumentException;-><init>(Ljava/lang/Throwable;)V

    throw v2
.end method

.method private followPath(Ljava/awt/Shape;I)V
    .locals 18

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p2

    if-nez v1, :cond_0

    return-void

    :cond_0
    const/4 v3, 0x2

    const/4 v4, 0x1

    if-ne v2, v3, :cond_1

    .line 1
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    instance-of v6, v5, Ljava/awt/BasicStroke;

    if-nez v6, :cond_1

    .line 2
    invoke-interface {v5, v1}, Ljava/awt/Stroke;->createStrokedShape(Ljava/awt/Shape;)Ljava/awt/Shape;

    move-result-object v1

    .line 3
    invoke-direct {v0, v1, v4}, Lcom/itextpdf/awt/PdfGraphics2D;->followPath(Ljava/awt/Shape;I)V

    return-void

    :cond_1
    if-ne v2, v3, :cond_2

    .line 4
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->oldStroke:Ljava/awt/Stroke;

    invoke-direct {v0, v5, v6}, Lcom/itextpdf/awt/PdfGraphics2D;->setStrokeDiff(Ljava/awt/Stroke;Ljava/awt/Stroke;)V

    .line 5
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    iput-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->oldStroke:Ljava/awt/Stroke;

    .line 6
    invoke-direct/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->setStrokePaint()V

    goto :goto_0

    :cond_2
    if-ne v2, v4, :cond_3

    .line 7
    invoke-direct/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->setFillPaint()V

    :cond_3
    :goto_0
    const/4 v5, 0x3

    if-ne v2, v5, :cond_4

    .line 8
    sget-object v6, Lcom/itextpdf/awt/PdfGraphics2D;->IDENTITY:Ljava/awt/geom/AffineTransform;

    invoke-interface {v1, v6}, Ljava/awt/Shape;->getPathIterator(Ljava/awt/geom/AffineTransform;)Ljava/awt/geom/PathIterator;

    move-result-object v1

    goto :goto_1

    .line 9
    :cond_4
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-interface {v1, v6}, Ljava/awt/Shape;->getPathIterator(Ljava/awt/geom/AffineTransform;)Ljava/awt/geom/PathIterator;

    move-result-object v1

    :goto_1
    const/4 v6, 0x6

    new-array v7, v6, [F

    new-array v6, v6, [D

    const/4 v8, 0x0

    const/4 v9, 0x0

    .line 10
    :goto_2
    invoke-interface {v1}, Ljava/awt/geom/PathIterator;->isDone()Z

    move-result v10

    if-nez v10, :cond_e

    add-int/lit8 v9, v9, 0x1

    .line 11
    invoke-interface {v1, v6}, Ljava/awt/geom/PathIterator;->currentSegment([D)I

    move-result v10

    const/4 v11, 0x4

    if-ne v10, v11, :cond_5

    const/4 v12, 0x0

    goto :goto_3

    :cond_5
    if-ne v10, v3, :cond_6

    const/4 v12, 0x2

    goto :goto_3

    :cond_6
    if-ne v10, v5, :cond_7

    const/4 v12, 0x3

    goto :goto_3

    :cond_7
    const/4 v12, 0x1

    :goto_3
    const/4 v13, 0x0

    :goto_4
    mul-int/lit8 v14, v12, 0x2

    if-ge v13, v14, :cond_8

    .line 12
    aget-wide v14, v6, v13

    double-to-float v14, v14

    aput v14, v7, v13

    add-int/lit8 v13, v13, 0x1

    goto :goto_4

    .line 13
    :cond_8
    invoke-direct {v0, v7}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeY([F)V

    if-eqz v10, :cond_d

    if-eq v10, v4, :cond_c

    if-eq v10, v3, :cond_b

    if-eq v10, v5, :cond_a

    if-eq v10, v11, :cond_9

    goto :goto_5

    .line 14
    :cond_9
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v10}, Lcom/itextpdf/text/pdf/PdfContentByte;->closePath()V

    goto :goto_5

    .line 15
    :cond_a
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    aget v12, v7, v8

    aget v13, v7, v4

    aget v14, v7, v3

    aget v15, v7, v5

    aget v16, v7, v11

    const/4 v11, 0x5

    aget v17, v7, v11

    move-object v11, v10

    invoke-virtual/range {v11 .. v17}, Lcom/itextpdf/text/pdf/PdfContentByte;->curveTo(FFFFFF)V

    goto :goto_5

    .line 16
    :cond_b
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    aget v11, v7, v8

    aget v12, v7, v4

    aget v13, v7, v3

    aget v14, v7, v5

    invoke-virtual {v10, v11, v12, v13, v14}, Lcom/itextpdf/text/pdf/PdfContentByte;->curveTo(FFFF)V

    goto :goto_5

    .line 17
    :cond_c
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    aget v11, v7, v8

    aget v12, v7, v4

    invoke-virtual {v10, v11, v12}, Lcom/itextpdf/text/pdf/PdfContentByte;->lineTo(FF)V

    goto :goto_5

    .line 18
    :cond_d
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    aget v11, v7, v8

    aget v12, v7, v4

    invoke-virtual {v10, v11, v12}, Lcom/itextpdf/text/pdf/PdfContentByte;->moveTo(FF)V

    .line 19
    :goto_5
    invoke-interface {v1}, Ljava/awt/geom/PathIterator;->next()V

    goto :goto_2

    :cond_e
    if-eq v2, v4, :cond_12

    if-eq v2, v3, :cond_11

    if-nez v9, :cond_f

    .line 20
    iget-object v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/4 v3, 0x0

    invoke-virtual {v2, v3, v3, v3, v3}, Lcom/itextpdf/text/pdf/PdfContentByte;->rectangle(FFFF)V

    .line 21
    :cond_f
    invoke-interface {v1}, Ljava/awt/geom/PathIterator;->getWindingRule()I

    move-result v1

    if-nez v1, :cond_10

    .line 22
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->eoClip()V

    goto :goto_6

    .line 23
    :cond_10
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->clip()V

    .line 24
    :goto_6
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->newPath()V

    goto :goto_7

    :cond_11
    if-lez v9, :cond_14

    .line 25
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->stroke()V

    goto :goto_7

    :cond_12
    if-lez v9, :cond_14

    .line 26
    invoke-interface {v1}, Ljava/awt/geom/PathIterator;->getWindingRule()I

    move-result v1

    if-nez v1, :cond_13

    .line 27
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->eoFill()V

    goto :goto_7

    .line 28
    :cond_13
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->fill()V

    :cond_14
    :goto_7
    return-void
.end method

.method private getCachedBaseFont(Ljava/awt/Font;)Lcom/itextpdf/text/pdf/BaseFont;
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFonts:Ljava/util/HashMap;

    monitor-enter v0

    .line 2
    :try_start_0
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFonts:Ljava/util/HashMap;

    invoke-virtual {p1}, Ljava/awt/Font;->getFontName()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Lcom/itextpdf/text/pdf/BaseFont;

    if-nez v1, :cond_0

    .line 3
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->fontMapper:Lcom/itextpdf/awt/FontMapper;

    invoke-interface {v1, p1}, Lcom/itextpdf/awt/FontMapper;->awtToPdf(Ljava/awt/Font;)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object v1

    .line 4
    iget-object v2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFonts:Ljava/util/HashMap;

    invoke-virtual {p1}, Ljava/awt/Font;->getFontName()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {v2, p1, v1}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 5
    :cond_0
    monitor-exit v0

    return-object v1

    :catchall_0
    move-exception p1

    .line 6
    monitor-exit v0
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    throw p1
.end method

.method private getDG2()Ljava/awt/Graphics2D;
    .locals 3

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    if-nez v0, :cond_0

    .line 2
    new-instance v0, Ljava/awt/image/BufferedImage;

    const/4 v1, 0x1

    const/4 v2, 0x2

    invoke-direct {v0, v2, v2, v1}, Ljava/awt/image/BufferedImage;-><init>(III)V

    invoke-virtual {v0}, Ljava/awt/image/BufferedImage;->createGraphics()Ljava/awt/Graphics2D;

    move-result-object v0

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    .line 3
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v0, v1}, Ljava/awt/Graphics2D;->setRenderingHints(Ljava/util/Map;)V

    .line 4
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    return-object v0
.end method

.method private internalDispose(Lcom/itextpdf/text/pdf/ByteBuffer;)V
    .locals 7

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->getInternalBuffer()Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v0

    .line 2
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kids:Ljava/util/ArrayList;

    const/4 v2, 0x0

    if-eqz v1, :cond_1

    .line 3
    invoke-virtual {v1}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    :goto_0
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1

    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lcom/itextpdf/awt/PdfGraphics2D$Kid;

    .line 4
    iget v4, v3, Lcom/itextpdf/awt/PdfGraphics2D$Kid;->pos:I

    .line 5
    iget-object v3, v3, Lcom/itextpdf/awt/PdfGraphics2D$Kid;->graphics:Lcom/itextpdf/awt/PdfGraphics2D;

    .line 6
    iget-object v5, v3, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    .line 7
    iget-object v5, v3, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    .line 8
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/ByteBuffer;->getBuffer()[B

    move-result-object v5

    sub-int v6, v4, v2

    invoke-virtual {p1, v5, v2, v6}, Lcom/itextpdf/text/pdf/ByteBuffer;->append([BII)Lcom/itextpdf/text/pdf/ByteBuffer;

    .line 9
    iget-object v2, v3, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    if-eqz v2, :cond_0

    .line 10
    invoke-virtual {v2}, Ljava/awt/Graphics2D;->dispose()V

    const/4 v2, 0x0

    .line 11
    iput-object v2, v3, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    .line 12
    :cond_0
    invoke-direct {v3, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->internalDispose(Lcom/itextpdf/text/pdf/ByteBuffer;)V

    move v2, v4

    goto :goto_0

    .line 13
    :cond_1
    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/ByteBuffer;->getBuffer()[B

    move-result-object v1

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/ByteBuffer;->size()I

    move-result v0

    sub-int/2addr v0, v2

    invoke-virtual {p1, v1, v2, v0}, Lcom/itextpdf/text/pdf/ByteBuffer;->append([BII)Lcom/itextpdf/text/pdf/ByteBuffer;

    return-void
.end method

.method private normalizeY(F)F
    .locals 1

    .line 1
    iget v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    sub-float/2addr v0, p1

    return v0
.end method

.method private normalizeY([F)V
    .locals 2

    const/4 v0, 0x1

    .line 2
    aget v1, p1, v0

    invoke-direct {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeY(F)F

    move-result v1

    aput v1, p1, v0

    const/4 v0, 0x3

    .line 3
    aget v1, p1, v0

    invoke-direct {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeY(F)F

    move-result v1

    aput v1, p1, v0

    const/4 v0, 0x5

    .line 4
    aget v1, p1, v0

    invoke-direct {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeY(F)F

    move-result v1

    aput v1, p1, v0

    return-void
.end method

.method public static prepareColor(Ljava/awt/Color;)Lcom/itextpdf/text/BaseColor;
    .locals 5

    .line 1
    invoke-virtual {p0}, Ljava/awt/Color;->getColorSpace()Ljava/awt/color/ColorSpace;

    move-result-object v0

    invoke-virtual {v0}, Ljava/awt/color/ColorSpace;->getType()I

    move-result v0

    const/16 v1, 0x9

    if-ne v0, v1, :cond_0

    const/4 v0, 0x0

    .line 2
    invoke-virtual {p0, v0}, Ljava/awt/Color;->getColorComponents([F)[F

    move-result-object p0

    .line 3
    new-instance v0, Lcom/itextpdf/text/pdf/CMYKColor;

    const/4 v1, 0x0

    aget v1, p0, v1

    const/4 v2, 0x1

    aget v2, p0, v2

    const/4 v3, 0x2

    aget v3, p0, v3

    const/4 v4, 0x3

    aget p0, p0, v4

    invoke-direct {v0, v1, v2, v3, p0}, Lcom/itextpdf/text/pdf/CMYKColor;-><init>(FFFF)V

    return-object v0

    .line 4
    :cond_0
    new-instance v0, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {p0}, Ljava/awt/Color;->getRGB()I

    move-result p0

    invoke-direct {v0, p0}, Lcom/itextpdf/text/BaseColor;-><init>(I)V

    return-object v0
.end method

.method private setFillPaint()V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paintFill:Ljava/awt/Paint;

    invoke-direct {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->checkNewPaint(Ljava/awt/Paint;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paintFill:Ljava/awt/Paint;

    const/4 v2, 0x0

    const-wide/16 v3, 0x0

    const-wide/16 v5, 0x0

    const/4 v7, 0x1

    move-object v1, p0

    .line 3
    invoke-direct/range {v1 .. v7}, Lcom/itextpdf/awt/PdfGraphics2D;->setPaint(ZDDZ)V

    :cond_0
    return-void
.end method

.method private setPaint(ZDDZ)V
    .locals 17

    move-object/from16 v0, p0

    .line 9
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    instance-of v2, v1, Ljava/awt/Color;

    if-eqz v2, :cond_5

    .line 10
    check-cast v1, Ljava/awt/Color;

    .line 11
    invoke-virtual {v1}, Ljava/awt/Color;->getAlpha()I

    move-result v2

    const/high16 v3, 0x437f0000    # 255.0f

    if-eqz p6, :cond_2

    .line 12
    iget v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    if-eq v2, v4, :cond_1

    .line 13
    iput v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    .line 14
    iget-object v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aget-object v4, v4, v2

    if-nez v4, :cond_0

    .line 15
    new-instance v4, Lcom/itextpdf/text/pdf/PdfGState;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/PdfGState;-><init>()V

    int-to-float v5, v2

    div-float/2addr v5, v3

    .line 16
    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfGState;->setFillOpacity(F)V

    .line 17
    iget-object v3, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aput-object v4, v3, v2

    .line 18
    :cond_0
    iget-object v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfContentByte;->setGState(Lcom/itextpdf/text/pdf/PdfGState;)V

    .line 19
    :cond_1
    iget-object v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-static {v1}, Lcom/itextpdf/awt/PdfGraphics2D;->prepareColor(Ljava/awt/Color;)Lcom/itextpdf/text/BaseColor;

    move-result-object v1

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->setColorFill(Lcom/itextpdf/text/BaseColor;)V

    goto/16 :goto_1

    .line 20
    :cond_2
    iget v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->currentStrokeGState:I

    if-eq v2, v4, :cond_4

    .line 21
    iput v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->currentStrokeGState:I

    .line 22
    iget-object v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aget-object v4, v4, v2

    if-nez v4, :cond_3

    .line 23
    new-instance v4, Lcom/itextpdf/text/pdf/PdfGState;

    invoke-direct {v4}, Lcom/itextpdf/text/pdf/PdfGState;-><init>()V

    int-to-float v5, v2

    div-float/2addr v5, v3

    .line 24
    invoke-virtual {v4, v5}, Lcom/itextpdf/text/pdf/PdfGState;->setStrokeOpacity(F)V

    .line 25
    iget-object v3, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aput-object v4, v3, v2

    .line 26
    :cond_3
    iget-object v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v2, v4}, Lcom/itextpdf/text/pdf/PdfContentByte;->setGState(Lcom/itextpdf/text/pdf/PdfGState;)V

    .line 27
    :cond_4
    iget-object v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-static {v1}, Lcom/itextpdf/awt/PdfGraphics2D;->prepareColor(Ljava/awt/Color;)Lcom/itextpdf/text/BaseColor;

    move-result-object v1

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->setColorStroke(Lcom/itextpdf/text/BaseColor;)V

    goto/16 :goto_1

    .line 28
    :cond_5
    instance-of v2, v1, Ljava/awt/GradientPaint;

    if-eqz v2, :cond_7

    .line 29
    check-cast v1, Ljava/awt/GradientPaint;

    .line 30
    invoke-virtual {v1}, Ljava/awt/GradientPaint;->getPoint1()Ljava/awt/geom/Point2D;

    move-result-object v2

    .line 31
    iget-object v3, v0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v3, v2, v2}, Ljava/awt/geom/AffineTransform;->transform(Ljava/awt/geom/Point2D;Ljava/awt/geom/Point2D;)Ljava/awt/geom/Point2D;

    .line 32
    invoke-virtual {v1}, Ljava/awt/GradientPaint;->getPoint2()Ljava/awt/geom/Point2D;

    move-result-object v3

    .line 33
    iget-object v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v4, v3, v3}, Ljava/awt/geom/AffineTransform;->transform(Ljava/awt/geom/Point2D;Ljava/awt/geom/Point2D;)Ljava/awt/geom/Point2D;

    .line 34
    invoke-virtual {v1}, Ljava/awt/GradientPaint;->getColor1()Ljava/awt/Color;

    move-result-object v4

    .line 35
    invoke-virtual {v1}, Ljava/awt/GradientPaint;->getColor2()Ljava/awt/Color;

    move-result-object v1

    .line 36
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfContentByte;->getPdfWriter()Lcom/itextpdf/text/pdf/PdfWriter;

    move-result-object v6

    invoke-virtual {v2}, Ljava/awt/geom/Point2D;->getX()D

    move-result-wide v7

    double-to-float v7, v7

    invoke-virtual {v2}, Ljava/awt/geom/Point2D;->getY()D

    move-result-wide v8

    double-to-float v2, v8

    invoke-direct {v0, v2}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeY(F)F

    move-result v8

    invoke-virtual {v3}, Ljava/awt/geom/Point2D;->getX()D

    move-result-wide v9

    double-to-float v9, v9

    invoke-virtual {v3}, Ljava/awt/geom/Point2D;->getY()D

    move-result-wide v2

    double-to-float v2, v2

    invoke-direct {v0, v2}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeY(F)F

    move-result v10

    new-instance v11, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v4}, Ljava/awt/Color;->getRGB()I

    move-result v2

    invoke-direct {v11, v2}, Lcom/itextpdf/text/BaseColor;-><init>(I)V

    new-instance v12, Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v1}, Ljava/awt/Color;->getRGB()I

    move-result v1

    invoke-direct {v12, v1}, Lcom/itextpdf/text/BaseColor;-><init>(I)V

    invoke-static/range {v6 .. v12}, Lcom/itextpdf/text/pdf/PdfShading;->simpleAxial(Lcom/itextpdf/text/pdf/PdfWriter;FFFFLcom/itextpdf/text/BaseColor;Lcom/itextpdf/text/BaseColor;)Lcom/itextpdf/text/pdf/PdfShading;

    move-result-object v1

    .line 37
    new-instance v2, Lcom/itextpdf/text/pdf/PdfShadingPattern;

    invoke-direct {v2, v1}, Lcom/itextpdf/text/pdf/PdfShadingPattern;-><init>(Lcom/itextpdf/text/pdf/PdfShading;)V

    if-eqz p6, :cond_6

    .line 38
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setShadingFill(Lcom/itextpdf/text/pdf/PdfShadingPattern;)V

    goto/16 :goto_1

    .line 39
    :cond_6
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setShadingStroke(Lcom/itextpdf/text/pdf/PdfShadingPattern;)V

    goto/16 :goto_1

    .line 40
    :cond_7
    instance-of v2, v1, Ljava/awt/TexturePaint;

    const/4 v3, 0x5

    const/4 v4, 0x1

    const/4 v5, 0x6

    const/4 v6, 0x0

    const/4 v7, 0x0

    if-eqz v2, :cond_a

    .line 41
    :try_start_0
    check-cast v1, Ljava/awt/TexturePaint;

    .line 42
    invoke-virtual {v1}, Ljava/awt/TexturePaint;->getImage()Ljava/awt/image/BufferedImage;

    move-result-object v2

    .line 43
    invoke-virtual {v1}, Ljava/awt/TexturePaint;->getAnchorRect()Ljava/awt/geom/Rectangle2D;

    move-result-object v1

    .line 44
    invoke-static {v2, v6}, Lcom/itextpdf/text/Image;->getInstance(Ljava/awt/Image;Ljava/awt/Color;)Lcom/itextpdf/text/Image;

    move-result-object v2

    .line 45
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getWidth()F

    move-result v8

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getHeight()F

    move-result v9

    invoke-virtual {v6, v8, v9}, Lcom/itextpdf/text/pdf/PdfContentByte;->createPattern(FF)Lcom/itextpdf/text/pdf/PdfPatternPainter;

    move-result-object v6

    .line 46
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeMatrix()Ljava/awt/geom/AffineTransform;

    move-result-object v8

    .line 47
    invoke-virtual {v1}, Ljava/awt/geom/Rectangle2D;->getX()D

    move-result-wide v9

    invoke-virtual {v1}, Ljava/awt/geom/Rectangle2D;->getY()D

    move-result-wide v11

    invoke-virtual {v8, v9, v10, v11, v12}, Ljava/awt/geom/AffineTransform;->translate(DD)V

    .line 48
    invoke-virtual {v1}, Ljava/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v9

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getWidth()F

    move-result v11

    float-to-double v11, v11

    div-double/2addr v9, v11

    invoke-virtual {v1}, Ljava/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v11

    neg-double v11, v11

    invoke-virtual {v2}, Lcom/itextpdf/text/Rectangle;->getHeight()F

    move-result v1

    float-to-double v13, v1

    div-double/2addr v11, v13

    invoke-virtual {v8, v9, v10, v11, v12}, Ljava/awt/geom/AffineTransform;->scale(DD)V

    new-array v1, v5, [D

    .line 49
    invoke-virtual {v8, v1}, Ljava/awt/geom/AffineTransform;->getMatrix([D)V

    const/4 v5, 0x0

    .line 50
    aget-wide v8, v1, v5

    double-to-float v11, v8

    aget-wide v4, v1, v4

    double-to-float v12, v4

    const/4 v4, 0x2

    aget-wide v4, v1, v4

    double-to-float v13, v4

    const/4 v4, 0x3

    aget-wide v4, v1, v4

    double-to-float v14, v4

    const/4 v4, 0x4

    aget-wide v4, v1, v4

    double-to-float v15, v4

    aget-wide v3, v1, v3

    double-to-float v1, v3

    move-object v10, v6

    move/from16 v16, v1

    invoke-virtual/range {v10 .. v16}, Lcom/itextpdf/text/pdf/PdfPatternPainter;->setPatternMatrix(FFFFFF)V

    .line 51
    invoke-virtual {v2, v7, v7}, Lcom/itextpdf/text/Image;->setAbsolutePosition(FF)V

    .line 52
    invoke-virtual {v6, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->addImage(Lcom/itextpdf/text/Image;)V

    if-eqz p6, :cond_8

    .line 53
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1, v6}, Lcom/itextpdf/text/pdf/PdfContentByte;->setPatternFill(Lcom/itextpdf/text/pdf/PdfPatternPainter;)V

    goto/16 :goto_1

    .line 54
    :cond_8
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1, v6}, Lcom/itextpdf/text/pdf/PdfContentByte;->setPatternStroke(Lcom/itextpdf/text/pdf/PdfPatternPainter;)V
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    goto/16 :goto_1

    :catch_0
    nop

    if-eqz p6, :cond_9

    .line 55
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    sget-object v2, Lcom/itextpdf/text/BaseColor;->GRAY:Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setColorFill(Lcom/itextpdf/text/BaseColor;)V

    goto/16 :goto_1

    .line 56
    :cond_9
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    sget-object v2, Lcom/itextpdf/text/BaseColor;->GRAY:Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setColorStroke(Lcom/itextpdf/text/BaseColor;)V

    goto/16 :goto_1

    .line 57
    :cond_a
    :try_start_1
    invoke-interface {v1}, Ljava/awt/Paint;->getTransparency()I

    move-result v1

    if-ne v1, v4, :cond_b

    goto :goto_0

    :cond_b
    const/4 v3, 0x6

    .line 58
    :goto_0
    new-instance v1, Ljava/awt/image/BufferedImage;

    iget v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->width:F

    float-to-int v2, v2

    iget v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    float-to-int v4, v4

    invoke-direct {v1, v2, v4, v3}, Ljava/awt/image/BufferedImage;-><init>(III)V

    .line 59
    invoke-virtual {v1}, Ljava/awt/image/BufferedImage;->getGraphics()Ljava/awt/Graphics;

    move-result-object v2

    check-cast v2, Ljava/awt/Graphics2D;

    .line 60
    iget-object v3, v0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v2, v3}, Ljava/awt/Graphics2D;->transform(Ljava/awt/geom/AffineTransform;)V

    .line 61
    iget-object v3, v0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v3}, Ljava/awt/geom/AffineTransform;->createInverse()Ljava/awt/geom/AffineTransform;

    move-result-object v3

    .line 62
    new-instance v4, Ljava/awt/geom/Rectangle2D$Double;

    const-wide/16 v9, 0x0

    const-wide/16 v11, 0x0

    invoke-virtual {v1}, Ljava/awt/image/BufferedImage;->getWidth()I

    move-result v5

    int-to-double v13, v5

    invoke-virtual {v1}, Ljava/awt/image/BufferedImage;->getHeight()I

    move-result v5

    int-to-double v6, v5

    move-object v8, v4

    move-wide v15, v6

    invoke-direct/range {v8 .. v16}, Ljava/awt/geom/Rectangle2D$Double;-><init>(DDDD)V

    .line 63
    invoke-virtual {v3, v4}, Ljava/awt/geom/AffineTransform;->createTransformedShape(Ljava/awt/Shape;)Ljava/awt/Shape;

    move-result-object v3

    .line 64
    iget-object v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    invoke-virtual {v2, v4}, Ljava/awt/Graphics2D;->setPaint(Ljava/awt/Paint;)V

    .line 65
    invoke-virtual {v2, v3}, Ljava/awt/Graphics2D;->fill(Ljava/awt/Shape;)V

    if-eqz p1, :cond_c

    .line 66
    new-instance v3, Ljava/awt/geom/AffineTransform;

    invoke-direct {v3}, Ljava/awt/geom/AffineTransform;-><init>()V

    const-wide/high16 v4, 0x3ff0000000000000L    # 1.0

    const-wide/high16 v6, -0x4010000000000000L    # -1.0

    .line 67
    invoke-virtual {v3, v4, v5, v6, v7}, Ljava/awt/geom/AffineTransform;->scale(DD)V

    move-wide/from16 v4, p2

    neg-double v4, v4

    move-wide/from16 v6, p4

    neg-double v6, v6

    .line 68
    invoke-virtual {v3, v4, v5, v6, v7}, Ljava/awt/geom/AffineTransform;->translate(DD)V

    const/4 v4, 0x0

    .line 69
    invoke-virtual {v2, v1, v3, v4}, Ljava/awt/Graphics2D;->drawImage(Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/image/ImageObserver;)Z

    .line 70
    :cond_c
    invoke-virtual {v2}, Ljava/awt/Graphics2D;->dispose()V

    const/4 v2, 0x0

    .line 71
    invoke-static {v1, v2}, Lcom/itextpdf/text/Image;->getInstance(Ljava/awt/Image;Ljava/awt/Color;)Lcom/itextpdf/text/Image;

    move-result-object v1

    .line 72
    iget-object v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    iget v3, v0, Lcom/itextpdf/awt/PdfGraphics2D;->width:F

    iget v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    invoke-virtual {v2, v3, v4}, Lcom/itextpdf/text/pdf/PdfContentByte;->createPattern(FF)Lcom/itextpdf/text/pdf/PdfPatternPainter;

    move-result-object v2

    const/4 v3, 0x0

    .line 73
    invoke-virtual {v1, v3, v3}, Lcom/itextpdf/text/Image;->setAbsolutePosition(FF)V

    .line 74
    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->addImage(Lcom/itextpdf/text/Image;)V

    if-eqz p6, :cond_d

    .line 75
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setPatternFill(Lcom/itextpdf/text/pdf/PdfPatternPainter;)V

    goto :goto_1

    .line 76
    :cond_d
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setPatternStroke(Lcom/itextpdf/text/pdf/PdfPatternPainter;)V
    :try_end_1
    .catch Ljava/lang/Exception; {:try_start_1 .. :try_end_1} :catch_1

    goto :goto_1

    :catch_1
    nop

    if-eqz p6, :cond_e

    .line 77
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    sget-object v2, Lcom/itextpdf/text/BaseColor;->GRAY:Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setColorFill(Lcom/itextpdf/text/BaseColor;)V

    goto :goto_1

    .line 78
    :cond_e
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    sget-object v2, Lcom/itextpdf/text/BaseColor;->GRAY:Lcom/itextpdf/text/BaseColor;

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setColorStroke(Lcom/itextpdf/text/BaseColor;)V

    :goto_1
    return-void
.end method

.method private setStrokeDiff(Ljava/awt/Stroke;Ljava/awt/Stroke;)V
    .locals 6

    if-ne p1, p2, :cond_0

    return-void

    .line 1
    :cond_0
    instance-of v0, p1, Ljava/awt/BasicStroke;

    if-nez v0, :cond_1

    return-void

    .line 2
    :cond_1
    check-cast p1, Ljava/awt/BasicStroke;

    .line 3
    instance-of v0, p2, Ljava/awt/BasicStroke;

    const/4 v1, 0x0

    if-eqz v0, :cond_2

    .line 4
    move-object v1, p2

    check-cast v1, Ljava/awt/BasicStroke;

    :cond_2
    if-eqz v0, :cond_3

    .line 5
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getLineWidth()F

    move-result p2

    invoke-virtual {v1}, Ljava/awt/BasicStroke;->getLineWidth()F

    move-result v2

    cmpl-float p2, p2, v2

    if-eqz p2, :cond_4

    .line 6
    :cond_3
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getLineWidth()F

    move-result v2

    invoke-virtual {p2, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineWidth(F)V

    :cond_4
    const/4 p2, 0x2

    const/4 v2, 0x0

    const/4 v3, 0x1

    if-eqz v0, :cond_5

    .line 7
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getEndCap()I

    move-result v4

    invoke-virtual {v1}, Ljava/awt/BasicStroke;->getEndCap()I

    move-result v5

    if-eq v4, v5, :cond_8

    .line 8
    :cond_5
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getEndCap()I

    move-result v4

    if-eqz v4, :cond_7

    if-eq v4, p2, :cond_6

    .line 9
    iget-object v4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v4, v3}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineCap(I)V

    goto :goto_0

    .line 10
    :cond_6
    iget-object v4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v4, p2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineCap(I)V

    goto :goto_0

    .line 11
    :cond_7
    iget-object v4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v4, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineCap(I)V

    :cond_8
    :goto_0
    if-eqz v0, :cond_9

    .line 12
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getLineJoin()I

    move-result v4

    invoke-virtual {v1}, Ljava/awt/BasicStroke;->getLineJoin()I

    move-result v5

    if-eq v4, v5, :cond_c

    .line 13
    :cond_9
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getLineJoin()I

    move-result v4

    if-eqz v4, :cond_b

    if-eq v4, p2, :cond_a

    .line 14
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {p2, v3}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineJoin(I)V

    goto :goto_1

    .line 15
    :cond_a
    iget-object v4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v4, p2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineJoin(I)V

    goto :goto_1

    .line 16
    :cond_b
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {p2, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineJoin(I)V

    :cond_c
    :goto_1
    if-eqz v0, :cond_d

    .line 17
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getMiterLimit()F

    move-result p2

    invoke-virtual {v1}, Ljava/awt/BasicStroke;->getMiterLimit()F

    move-result v4

    cmpl-float p2, p2, v4

    if-eqz p2, :cond_e

    .line 18
    :cond_d
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getMiterLimit()F

    move-result v4

    invoke-virtual {p2, v4}, Lcom/itextpdf/text/pdf/PdfContentByte;->setMiterLimit(F)V

    :cond_e
    if-eqz v0, :cond_12

    .line 19
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getDashArray()[F

    move-result-object p2

    if-eqz p2, :cond_10

    .line 20
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getDashPhase()F

    move-result p2

    invoke-virtual {v1}, Ljava/awt/BasicStroke;->getDashPhase()F

    move-result v0

    cmpl-float p2, p2, v0

    if-eqz p2, :cond_f

    goto :goto_2

    .line 21
    :cond_f
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getDashArray()[F

    move-result-object p2

    invoke-virtual {v1}, Ljava/awt/BasicStroke;->getDashArray()[F

    move-result-object v0

    invoke-static {p2, v0}, Ljava/util/Arrays;->equals([F[F)Z

    move-result p2

    if-nez p2, :cond_11

    goto :goto_2

    .line 22
    :cond_10
    invoke-virtual {v1}, Ljava/awt/BasicStroke;->getDashArray()[F

    move-result-object p2

    if-eqz p2, :cond_11

    goto :goto_2

    :cond_11
    const/4 v3, 0x0

    :cond_12
    :goto_2
    if-eqz v3, :cond_15

    .line 23
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getDashArray()[F

    move-result-object p2

    if-nez p2, :cond_13

    .line 24
    iget-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const-string p2, "[]0 d\n"

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLiteral(Ljava/lang/String;)V

    goto :goto_4

    .line 25
    :cond_13
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/16 v1, 0x5b

    invoke-virtual {v0, v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLiteral(C)V

    .line 26
    array-length v0, p2

    :goto_3
    if-ge v2, v0, :cond_14

    .line 27
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    aget v3, p2, v2

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLiteral(F)V

    .line 28
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/16 v3, 0x20

    invoke-virtual {v1, v3}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLiteral(C)V

    add-int/lit8 v2, v2, 0x1

    goto :goto_3

    .line 29
    :cond_14
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/16 v0, 0x5d

    invoke-virtual {p2, v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLiteral(C)V

    .line 30
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getDashPhase()F

    move-result p1

    invoke-virtual {p2, p1}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLiteral(F)V

    .line 31
    iget-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const-string p2, " d\n"

    invoke-virtual {p1, p2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLiteral(Ljava/lang/String;)V

    :cond_15
    :goto_4
    return-void
.end method

.method private setStrokePaint()V
    .locals 8

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paintStroke:Ljava/awt/Paint;

    invoke-direct {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->checkNewPaint(Ljava/awt/Paint;)Z

    move-result v0

    if-eqz v0, :cond_0

    .line 2
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paintStroke:Ljava/awt/Paint;

    const/4 v2, 0x0

    const-wide/16 v3, 0x0

    const-wide/16 v5, 0x0

    const/4 v7, 0x0

    move-object v1, p0

    .line 3
    invoke-direct/range {v1 .. v7}, Lcom/itextpdf/awt/PdfGraphics2D;->setPaint(ZDDZ)V

    :cond_0
    return-void
.end method

.method private transformStroke(Ljava/awt/Stroke;)Ljava/awt/Stroke;
    .locals 9

    .line 1
    instance-of v0, p1, Ljava/awt/BasicStroke;

    if-nez v0, :cond_0

    return-object p1

    .line 2
    :cond_0
    check-cast p1, Ljava/awt/BasicStroke;

    .line 3
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0}, Ljava/awt/geom/AffineTransform;->getDeterminant()D

    move-result-wide v0

    invoke-static {v0, v1}, Ljava/lang/Math;->abs(D)D

    move-result-wide v0

    invoke-static {v0, v1}, Ljava/lang/Math;->sqrt(D)D

    move-result-wide v0

    double-to-float v0, v0

    .line 4
    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getDashArray()[F

    move-result-object v6

    if-eqz v6, :cond_1

    const/4 v1, 0x0

    .line 5
    :goto_0
    array-length v2, v6

    if-ge v1, v2, :cond_1

    .line 6
    aget v2, v6, v1

    mul-float v2, v2, v0

    aput v2, v6, v1

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 7
    :cond_1
    new-instance v8, Ljava/awt/BasicStroke;

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getLineWidth()F

    move-result v1

    mul-float v2, v1, v0

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getEndCap()I

    move-result v3

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getLineJoin()I

    move-result v4

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getMiterLimit()F

    move-result v5

    invoke-virtual {p1}, Ljava/awt/BasicStroke;->getDashPhase()F

    move-result p1

    mul-float v7, p1, v0

    move-object v1, v8

    invoke-direct/range {v1 .. v7}, Ljava/awt/BasicStroke;-><init>(FIIF[FF)V

    return-object v8
.end method

.method private declared-synchronized waitForImage(Ljava/awt/Image;)V
    .locals 3

    monitor-enter p0

    .line 1
    :try_start_0
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->mediaTracker:Ljava/awt/MediaTracker;

    if-nez v0, :cond_0

    .line 2
    new-instance v0, Ljava/awt/MediaTracker;

    new-instance v1, Lcom/itextpdf/awt/PdfGraphics2D$FakeComponent;

    const/4 v2, 0x0

    invoke-direct {v1, v2}, Lcom/itextpdf/awt/PdfGraphics2D$FakeComponent;-><init>(Lcom/itextpdf/awt/PdfGraphics2D$1;)V

    invoke-direct {v0, v1}, Ljava/awt/MediaTracker;-><init>(Ljava/awt/Component;)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->mediaTracker:Ljava/awt/MediaTracker;

    .line 3
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->mediaTracker:Ljava/awt/MediaTracker;

    const/4 v1, 0x0

    invoke-virtual {v0, p1, v1}, Ljava/awt/MediaTracker;->addImage(Ljava/awt/Image;I)V
    :try_end_0
    .catchall {:try_start_0 .. :try_end_0} :catchall_0

    .line 4
    :try_start_1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->mediaTracker:Ljava/awt/MediaTracker;

    invoke-virtual {v0, v1}, Ljava/awt/MediaTracker;->waitForID(I)V
    :try_end_1
    .catch Ljava/lang/InterruptedException; {:try_start_1 .. :try_end_1} :catch_0
    .catchall {:try_start_1 .. :try_end_1} :catchall_0

    .line 5
    :catch_0
    :try_start_2
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->mediaTracker:Ljava/awt/MediaTracker;

    invoke-virtual {v0, p1}, Ljava/awt/MediaTracker;->removeImage(Ljava/awt/Image;)V
    :try_end_2
    .catchall {:try_start_2 .. :try_end_2} :catchall_0

    .line 6
    monitor-exit p0

    return-void

    :catchall_0
    move-exception p1

    monitor-exit p0

    throw p1
.end method


# virtual methods
.method public addRenderingHints(Ljava/util/Map;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Map<",
            "**>;)V"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v0, p1}, Ljava/awt/RenderingHints;->putAll(Ljava/util/Map;)V

    .line 2
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    if-eqz v0, :cond_0

    .line 3
    invoke-virtual {v0, p1}, Ljava/awt/Graphics2D;->addRenderingHints(Ljava/util/Map;)V

    :cond_0
    return-void
.end method

.method public clearRect(IIII)V
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    .line 2
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->background:Ljava/awt/Color;

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setPaint(Ljava/awt/Paint;)V

    .line 3
    invoke-virtual {p0, p1, p2, p3, p4}, Lcom/itextpdf/awt/PdfGraphics2D;->fillRect(IIII)V

    .line 4
    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->setPaint(Ljava/awt/Paint;)V

    return-void
.end method

.method public clip(Ljava/awt/Shape;)V
    .locals 2

    if-nez p1, :cond_0

    const/4 p1, 0x0

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->setClip(Ljava/awt/Shape;)V

    return-void

    .line 2
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0, p1}, Ljava/awt/geom/AffineTransform;->createTransformedShape(Ljava/awt/Shape;)Ljava/awt/Shape;

    move-result-object p1

    .line 3
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    if-nez v0, :cond_1

    .line 4
    new-instance v0, Ljava/awt/geom/Area;

    invoke-direct {v0, p1}, Ljava/awt/geom/Area;-><init>(Ljava/awt/Shape;)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    goto :goto_0

    .line 5
    :cond_1
    new-instance v1, Ljava/awt/geom/Area;

    invoke-direct {v1, p1}, Ljava/awt/geom/Area;-><init>(Ljava/awt/Shape;)V

    invoke-virtual {v0, v1}, Ljava/awt/geom/Area;->intersect(Ljava/awt/geom/Area;)V

    :goto_0
    const/4 v0, 0x3

    .line 6
    invoke-direct {p0, p1, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->followPath(Ljava/awt/Shape;I)V

    return-void
.end method

.method public clipRect(IIII)V
    .locals 10

    .line 1
    new-instance v9, Ljava/awt/geom/Rectangle2D$Double;

    int-to-double v1, p1

    int-to-double v3, p2

    int-to-double v5, p3

    int-to-double v7, p4

    move-object v0, v9

    invoke-direct/range {v0 .. v8}, Ljava/awt/geom/Rectangle2D$Double;-><init>(DDDD)V

    .line 2
    invoke-virtual {p0, v9}, Lcom/itextpdf/awt/PdfGraphics2D;->clip(Ljava/awt/Shape;)V

    return-void
.end method

.method public copyArea(IIIIII)V
    .locals 0

    return-void
.end method

.method public create()Ljava/awt/Graphics;
    .locals 6

    .line 1
    new-instance v0, Lcom/itextpdf/awt/PdfGraphics2D;

    invoke-direct {v0}, Lcom/itextpdf/awt/PdfGraphics2D;-><init>()V

    .line 2
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    iget-object v2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v1, v2}, Ljava/awt/RenderingHints;->putAll(Ljava/util/Map;)V

    .line 3
    iget-boolean v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->onlyShapes:Z

    iput-boolean v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->onlyShapes:Z

    .line 4
    new-instance v1, Ljava/awt/geom/AffineTransform;

    iget-object v2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-direct {v1, v2}, Ljava/awt/geom/AffineTransform;-><init>(Ljava/awt/geom/AffineTransform;)V

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    .line 5
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFonts:Ljava/util/HashMap;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFonts:Ljava/util/HashMap;

    .line 6
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->fontMapper:Lcom/itextpdf/awt/FontMapper;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fontMapper:Lcom/itextpdf/awt/FontMapper;

    .line 7
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    .line 8
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fillGState:[Lcom/itextpdf/text/pdf/PdfGState;

    .line 9
    iget v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    iput v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    .line 10
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

    .line 11
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->background:Ljava/awt/Color;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->background:Ljava/awt/Color;

    .line 12
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->mediaTracker:Ljava/awt/MediaTracker;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->mediaTracker:Ljava/awt/MediaTracker;

    .line 13
    iget-boolean v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->convertImagesToJPEG:Z

    iput-boolean v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->convertImagesToJPEG:Z

    .line 14
    iget v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->jpegQuality:F

    iput v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->jpegQuality:F

    .line 15
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    .line 16
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->getDuplicate()Lcom/itextpdf/text/pdf/PdfContentByte;

    move-result-object v1

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    .line 17
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    .line 18
    iget v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->width:F

    iput v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->width:F

    .line 19
    iget v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    iput v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    .line 20
    new-instance v1, Ljava/awt/geom/Area;

    new-instance v2, Ljava/awt/geom/Rectangle2D$Float;

    iget v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->width:F

    iget v4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    const/4 v5, 0x0

    invoke-direct {v2, v5, v5, v3, v4}, Ljava/awt/geom/Rectangle2D$Float;-><init>(FFFF)V

    invoke-direct {v1, v2}, Ljava/awt/geom/Area;-><init>(Ljava/awt/Shape;)V

    const/4 v2, 0x3

    invoke-direct {v0, v1, v2}, Lcom/itextpdf/awt/PdfGraphics2D;->followPath(Ljava/awt/Shape;I)V

    .line 21
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    if-eqz v1, :cond_0

    .line 22
    new-instance v1, Ljava/awt/geom/Area;

    iget-object v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    invoke-direct {v1, v3}, Ljava/awt/geom/Area;-><init>(Ljava/awt/Shape;)V

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    .line 23
    :cond_0
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->composite:Ljava/awt/Composite;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->composite:Ljava/awt/Composite;

    .line 24
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    .line 25
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    .line 26
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeOne:Ljava/awt/BasicStroke;

    invoke-direct {v0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->transformStroke(Ljava/awt/Stroke;)Ljava/awt/Stroke;

    move-result-object v1

    check-cast v1, Ljava/awt/BasicStroke;

    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeOne:Ljava/awt/BasicStroke;

    .line 27
    iput-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->oldStroke:Ljava/awt/Stroke;

    const/4 v3, 0x0

    .line 28
    invoke-direct {v0, v1, v3}, Lcom/itextpdf/awt/PdfGraphics2D;->setStrokeDiff(Ljava/awt/Stroke;Ljava/awt/Stroke;)V

    .line 29
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    .line 30
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    if-eqz v1, :cond_1

    .line 31
    invoke-direct {v0, v1, v2}, Lcom/itextpdf/awt/PdfGraphics2D;->followPath(Ljava/awt/Shape;I)V

    :cond_1
    const/4 v1, 0x1

    .line 32
    iput-boolean v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->kid:Z

    .line 33
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kids:Ljava/util/ArrayList;

    if-nez v1, :cond_2

    .line 34
    new-instance v1, Ljava/util/ArrayList;

    invoke-direct {v1}, Ljava/util/ArrayList;-><init>()V

    iput-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kids:Ljava/util/ArrayList;

    .line 35
    :cond_2
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kids:Ljava/util/ArrayList;

    new-instance v2, Lcom/itextpdf/awt/PdfGraphics2D$Kid;

    iget-object v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/PdfContentByte;->getInternalBuffer()Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v3

    invoke-virtual {v3}, Lcom/itextpdf/text/pdf/ByteBuffer;->size()I

    move-result v3

    invoke-direct {v2, v3, v0}, Lcom/itextpdf/awt/PdfGraphics2D$Kid;-><init>(ILcom/itextpdf/awt/PdfGraphics2D;)V

    invoke-virtual {v1, v2}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    return-object v0
.end method

.method public dispose()V
    .locals 2

    .line 1
    iget-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kid:Z

    if-eqz v0, :cond_0

    return-void

    .line 2
    :cond_0
    iget-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->disposeCalled:Z

    if-nez v0, :cond_2

    const/4 v0, 0x1

    .line 3
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->disposeCalled:Z

    .line 4
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    .line 5
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    .line 6
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    if-eqz v0, :cond_1

    .line 7
    invoke-virtual {v0}, Ljava/awt/Graphics2D;->dispose()V

    const/4 v0, 0x0

    .line 8
    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    .line 9
    :cond_1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->kids:Ljava/util/ArrayList;

    if-eqz v0, :cond_2

    .line 10
    new-instance v0, Lcom/itextpdf/text/pdf/ByteBuffer;

    invoke-direct {v0}, Lcom/itextpdf/text/pdf/ByteBuffer;-><init>()V

    .line 11
    invoke-direct {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->internalDispose(Lcom/itextpdf/text/pdf/ByteBuffer;)V

    .line 12
    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->getInternalBuffer()Lcom/itextpdf/text/pdf/ByteBuffer;

    move-result-object v1

    .line 13
    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/ByteBuffer;->reset()V

    .line 14
    invoke-virtual {v1, v0}, Lcom/itextpdf/text/pdf/ByteBuffer;->append(Lcom/itextpdf/text/pdf/ByteBuffer;)Lcom/itextpdf/text/pdf/ByteBuffer;

    :cond_2
    return-void
.end method

.method public doAttributes(Ljava/text/AttributedCharacterIterator;)V
    .locals 6

    const/4 v0, 0x0

    .line 1
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->underline:Z

    .line 2
    iput-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strikethrough:Z

    .line 3
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Map;->keySet()Ljava/util/Set;

    move-result-object v0

    invoke-interface {v0}, Ljava/util/Set;->iterator()Ljava/util/Iterator;

    move-result-object v0

    :cond_0
    :goto_0
    invoke-interface {v0}, Ljava/util/Iterator;->hasNext()Z

    move-result v1

    if-eqz v1, :cond_a

    invoke-interface {v0}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/text/AttributedCharacterIterator$Attribute;

    .line 4
    instance-of v2, v1, Ljava/awt/font/TextAttribute;

    if-nez v2, :cond_1

    goto :goto_0

    .line 5
    :cond_1
    check-cast v1, Ljava/awt/font/TextAttribute;

    .line 6
    sget-object v2, Ljava/awt/font/TextAttribute;->FONT:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_2

    .line 7
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v2

    invoke-interface {v2, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/awt/Font;

    .line 8
    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    goto :goto_0

    .line 9
    :cond_2
    sget-object v2, Ljava/awt/font/TextAttribute;->UNDERLINE:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    const/4 v3, 0x1

    if-eqz v2, :cond_3

    .line 10
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v2

    invoke-interface {v2, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    sget-object v2, Ljava/awt/font/TextAttribute;->UNDERLINE_ON:Ljava/lang/Integer;

    if-ne v1, v2, :cond_0

    .line 11
    iput-boolean v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->underline:Z

    goto :goto_0

    .line 12
    :cond_3
    sget-object v2, Ljava/awt/font/TextAttribute;->STRIKETHROUGH:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_4

    .line 13
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v2

    invoke-interface {v2, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    sget-object v2, Ljava/awt/font/TextAttribute;->STRIKETHROUGH_ON:Ljava/lang/Boolean;

    if-ne v1, v2, :cond_0

    .line 14
    iput-boolean v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strikethrough:Z

    goto :goto_0

    .line 15
    :cond_4
    sget-object v2, Ljava/awt/font/TextAttribute;->SIZE:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_6

    .line 16
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v2

    invoke-interface {v2, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    .line 17
    instance-of v2, v1, Ljava/lang/Integer;

    if-eqz v2, :cond_5

    .line 18
    check-cast v1, Ljava/lang/Integer;

    invoke-virtual {v1}, Ljava/lang/Integer;->intValue()I

    move-result v1

    .line 19
    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFont()Ljava/awt/Font;

    move-result-object v2

    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFont()Ljava/awt/Font;

    move-result-object v3

    invoke-virtual {v3}, Ljava/awt/Font;->getStyle()I

    move-result v3

    int-to-float v1, v1

    invoke-virtual {v2, v3, v1}, Ljava/awt/Font;->deriveFont(IF)Ljava/awt/Font;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    goto/16 :goto_0

    .line 20
    :cond_5
    instance-of v2, v1, Ljava/lang/Float;

    if-eqz v2, :cond_0

    .line 21
    check-cast v1, Ljava/lang/Float;

    invoke-virtual {v1}, Ljava/lang/Float;->floatValue()F

    move-result v1

    .line 22
    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFont()Ljava/awt/Font;

    move-result-object v2

    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFont()Ljava/awt/Font;

    move-result-object v3

    invoke-virtual {v3}, Ljava/awt/Font;->getStyle()I

    move-result v3

    invoke-virtual {v2, v3, v1}, Ljava/awt/Font;->deriveFont(IF)Ljava/awt/Font;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    goto/16 :goto_0

    .line 23
    :cond_6
    sget-object v2, Ljava/awt/font/TextAttribute;->FOREGROUND:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_7

    .line 24
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v2

    invoke-interface {v2, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    check-cast v1, Ljava/awt/Color;

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setColor(Ljava/awt/Color;)V

    goto/16 :goto_0

    .line 25
    :cond_7
    sget-object v2, Ljava/awt/font/TextAttribute;->FAMILY:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_8

    .line 26
    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFont()Ljava/awt/Font;

    move-result-object v2

    .line 27
    invoke-virtual {v2}, Ljava/awt/Font;->getAttributes()Ljava/util/Map;

    move-result-object v3

    .line 28
    sget-object v4, Ljava/awt/font/TextAttribute;->FAMILY:Ljava/awt/font/TextAttribute;

    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v5

    invoke-interface {v5, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {v3, v4, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 29
    invoke-virtual {v2, v3}, Ljava/awt/Font;->deriveFont(Ljava/util/Map;)Ljava/awt/Font;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    goto/16 :goto_0

    .line 30
    :cond_8
    sget-object v2, Ljava/awt/font/TextAttribute;->POSTURE:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_9

    .line 31
    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFont()Ljava/awt/Font;

    move-result-object v2

    .line 32
    invoke-virtual {v2}, Ljava/awt/Font;->getAttributes()Ljava/util/Map;

    move-result-object v3

    .line 33
    sget-object v4, Ljava/awt/font/TextAttribute;->POSTURE:Ljava/awt/font/TextAttribute;

    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v5

    invoke-interface {v5, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {v3, v4, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 34
    invoke-virtual {v2, v3}, Ljava/awt/Font;->deriveFont(Ljava/util/Map;)Ljava/awt/Font;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    goto/16 :goto_0

    .line 35
    :cond_9
    sget-object v2, Ljava/awt/font/TextAttribute;->WEIGHT:Ljava/awt/font/TextAttribute;

    invoke-virtual {v1, v2}, Ljava/awt/font/TextAttribute;->equals(Ljava/lang/Object;)Z

    move-result v2

    if-eqz v2, :cond_0

    .line 36
    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFont()Ljava/awt/Font;

    move-result-object v2

    .line 37
    invoke-virtual {v2}, Ljava/awt/Font;->getAttributes()Ljava/util/Map;

    move-result-object v3

    .line 38
    sget-object v4, Ljava/awt/font/TextAttribute;->WEIGHT:Ljava/awt/font/TextAttribute;

    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getAttributes()Ljava/util/Map;

    move-result-object v5

    invoke-interface {v5, v1}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v1

    invoke-interface {v3, v4, v1}, Ljava/util/Map;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 39
    invoke-virtual {v2, v3}, Ljava/awt/Font;->deriveFont(Ljava/util/Map;)Ljava/awt/Font;

    move-result-object v1

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setFont(Ljava/awt/Font;)V

    goto/16 :goto_0

    :cond_a
    return-void
.end method

.method public draw(Ljava/awt/Shape;)V
    .locals 1

    const/4 v0, 0x2

    .line 1
    invoke-direct {p0, p1, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->followPath(Ljava/awt/Shape;I)V

    return-void
.end method

.method public drawArc(IIIIII)V
    .locals 15

    .line 1
    new-instance v14, Ljava/awt/geom/Arc2D$Double;

    move/from16 v0, p1

    int-to-double v1, v0

    move/from16 v0, p2

    int-to-double v3, v0

    move/from16 v0, p3

    int-to-double v5, v0

    move/from16 v0, p4

    int-to-double v7, v0

    move/from16 v0, p5

    int-to-double v9, v0

    move/from16 v0, p6

    int-to-double v11, v0

    const/4 v13, 0x0

    move-object v0, v14

    invoke-direct/range {v0 .. v13}, Ljava/awt/geom/Arc2D$Double;-><init>(DDDDDDI)V

    move-object v0, p0

    .line 2
    invoke-virtual {p0, v14}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawGlyphVector(Ljava/awt/font/GlyphVector;FF)V
    .locals 0

    .line 1
    invoke-virtual {p1, p2, p3}, Ljava/awt/font/GlyphVector;->getOutline(FF)Ljava/awt/Shape;

    move-result-object p1

    .line 2
    invoke-virtual {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->fill(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawImage(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImageOp;II)V
    .locals 1

    if-eqz p2, :cond_0

    .line 2
    invoke-virtual {p1}, Ljava/awt/image/BufferedImage;->getColorModel()Ljava/awt/image/ColorModel;

    move-result-object v0

    invoke-interface {p2, p1, v0}, Ljava/awt/image/BufferedImageOp;->createCompatibleDestImage(Ljava/awt/image/BufferedImage;Ljava/awt/image/ColorModel;)Ljava/awt/image/BufferedImage;

    move-result-object v0

    .line 3
    invoke-interface {p2, p1, v0}, Ljava/awt/image/BufferedImageOp;->filter(Ljava/awt/image/BufferedImage;Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage;

    move-result-object p1

    :cond_0
    const/4 p2, 0x0

    .line 4
    invoke-virtual {p0, p1, p3, p4, p2}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;IILjava/awt/image/ImageObserver;)Z

    return-void
.end method

.method public drawImage(Ljava/awt/Image;IIIIIIIILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z
    .locals 20

    move-object/from16 v0, p1

    move/from16 v1, p6

    move/from16 v2, p7

    move-object/from16 v3, p11

    .line 16
    invoke-direct/range {p0 .. p1}, Lcom/itextpdf/awt/PdfGraphics2D;->waitForImage(Ljava/awt/Image;)V

    move/from16 v4, p4

    int-to-double v4, v4

    move/from16 v6, p2

    int-to-double v6, v6

    sub-double/2addr v4, v6

    move/from16 v8, p5

    int-to-double v8, v8

    move/from16 v10, p3

    int-to-double v10, v10

    sub-double/2addr v8, v10

    move/from16 v12, p8

    int-to-double v12, v12

    int-to-double v14, v1

    sub-double/2addr v12, v14

    move/from16 v1, p9

    int-to-double v0, v1

    move-wide/from16 p2, v10

    int-to-double v10, v2

    sub-double/2addr v0, v10

    const/16 v16, 0x1

    const-wide/16 v17, 0x0

    cmpl-double v19, v4, v17

    if-eqz v19, :cond_1

    cmpl-double v19, v8, v17

    if-eqz v19, :cond_1

    cmpl-double v19, v12, v17

    if-eqz v19, :cond_1

    cmpl-double v19, v0, v17

    if-nez v19, :cond_0

    goto :goto_0

    :cond_0
    div-double/2addr v4, v12

    div-double/2addr v8, v0

    mul-double v14, v14, v4

    mul-double v10, v10, v8

    sub-double/2addr v6, v14

    move-wide/from16 v14, p2

    sub-double v10, v14, v10

    .line 17
    invoke-static {v6, v7, v10, v11}, Ljava/awt/geom/AffineTransform;->getTranslateInstance(DD)Ljava/awt/geom/AffineTransform;

    move-result-object v6

    .line 18
    invoke-virtual {v6, v4, v5, v8, v9}, Ljava/awt/geom/AffineTransform;->scale(DD)V

    .line 19
    new-instance v4, Ljava/awt/image/BufferedImage;

    move-object/from16 v5, p1

    invoke-virtual {v5, v3}, Ljava/awt/Image;->getWidth(Ljava/awt/image/ImageObserver;)I

    move-result v7

    invoke-virtual {v5, v3}, Ljava/awt/Image;->getHeight(Ljava/awt/image/ImageObserver;)I

    move-result v8

    const/16 v9, 0xc

    invoke-direct {v4, v7, v8, v9}, Ljava/awt/image/BufferedImage;-><init>(III)V

    .line 20
    invoke-virtual {v4}, Ljava/awt/image/BufferedImage;->getGraphics()Ljava/awt/Graphics;

    move-result-object v7

    double-to-int v8, v12

    double-to-int v0, v0

    move/from16 v1, p6

    .line 21
    invoke-virtual {v7, v1, v2, v8, v0}, Ljava/awt/Graphics;->fillRect(IIII)V

    const/4 v0, 0x0

    move-object/from16 p2, p0

    move-object/from16 p3, p1

    move-object/from16 p4, v4

    move-object/from16 p5, v6

    move-object/from16 p6, v0

    move-object/from16 p7, p11

    .line 22
    invoke-direct/range {p2 .. p7}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/Color;Ljava/awt/image/ImageObserver;)Z

    .line 23
    invoke-virtual {v7}, Ljava/awt/Graphics;->dispose()V

    :cond_1
    :goto_0
    return v16
.end method

.method public drawImage(Ljava/awt/Image;IIIIIIIILjava/awt/image/ImageObserver;)Z
    .locals 12

    const/4 v10, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move/from16 v4, p4

    move/from16 v5, p5

    move/from16 v6, p6

    move/from16 v7, p7

    move/from16 v8, p8

    move/from16 v9, p9

    move-object/from16 v11, p10

    .line 15
    invoke-virtual/range {v0 .. v11}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;IIIIIIIILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z

    move-result v0

    return v0
.end method

.method public drawImage(Ljava/awt/Image;IIIILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z
    .locals 12

    move-object v1, p1

    move-object/from16 v5, p7

    .line 9
    invoke-direct {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->waitForImage(Ljava/awt/Image;)V

    move/from16 v0, p4

    int-to-double v2, v0

    .line 10
    invoke-virtual {p1, v5}, Ljava/awt/Image;->getWidth(Ljava/awt/image/ImageObserver;)I

    move-result v0

    int-to-double v6, v0

    div-double/2addr v2, v6

    move/from16 v0, p5

    int-to-double v6, v0

    .line 11
    invoke-virtual {p1, v5}, Ljava/awt/Image;->getHeight(Ljava/awt/image/ImageObserver;)I

    move-result v0

    int-to-double v8, v0

    div-double/2addr v6, v8

    move v0, p2

    int-to-double v8, v0

    move v0, p3

    int-to-double v10, v0

    .line 12
    invoke-static {v8, v9, v10, v11}, Ljava/awt/geom/AffineTransform;->getTranslateInstance(DD)Ljava/awt/geom/AffineTransform;

    move-result-object v4

    .line 13
    invoke-virtual {v4, v2, v3, v6, v7}, Ljava/awt/geom/AffineTransform;->scale(DD)V

    const/4 v2, 0x0

    move-object v0, p0

    move-object v3, v4

    move-object/from16 v4, p6

    .line 14
    invoke-direct/range {v0 .. v5}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/Color;Ljava/awt/image/ImageObserver;)Z

    move-result v0

    return v0
.end method

.method public drawImage(Ljava/awt/Image;IIIILjava/awt/image/ImageObserver;)Z
    .locals 8

    const/4 v6, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move v4, p4

    move v5, p5

    move-object v7, p6

    .line 6
    invoke-virtual/range {v0 .. v7}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;IIIILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z

    move-result p1

    return p1
.end method

.method public drawImage(Ljava/awt/Image;IILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z
    .locals 8

    .line 7
    invoke-direct {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->waitForImage(Ljava/awt/Image;)V

    .line 8
    invoke-virtual {p1, p5}, Ljava/awt/Image;->getWidth(Ljava/awt/image/ImageObserver;)I

    move-result v4

    invoke-virtual {p1, p5}, Ljava/awt/Image;->getHeight(Ljava/awt/image/ImageObserver;)I

    move-result v5

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v6, p4

    move-object v7, p5

    invoke-virtual/range {v0 .. v7}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;IIIILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z

    move-result p1

    return p1
.end method

.method public drawImage(Ljava/awt/Image;IILjava/awt/image/ImageObserver;)Z
    .locals 6

    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move v2, p2

    move v3, p3

    move-object v5, p4

    .line 5
    invoke-virtual/range {v0 .. v5}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;IILjava/awt/Color;Ljava/awt/image/ImageObserver;)Z

    move-result p1

    return p1
.end method

.method public drawImage(Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/image/ImageObserver;)Z
    .locals 6

    const/4 v2, 0x0

    const/4 v4, 0x0

    move-object v0, p0

    move-object v1, p1

    move-object v3, p2

    move-object v5, p3

    .line 1
    invoke-direct/range {v0 .. v5}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/Color;Ljava/awt/image/ImageObserver;)Z

    move-result p1

    return p1
.end method

.method public drawLine(IIII)V
    .locals 10

    .line 1
    new-instance v9, Ljava/awt/geom/Line2D$Double;

    int-to-double v1, p1

    int-to-double v3, p2

    int-to-double v5, p3

    int-to-double v7, p4

    move-object v0, v9

    invoke-direct/range {v0 .. v8}, Ljava/awt/geom/Line2D$Double;-><init>(DDDD)V

    .line 2
    invoke-virtual {p0, v9}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawOval(IIII)V
    .locals 1

    .line 1
    new-instance v0, Ljava/awt/geom/Ellipse2D$Float;

    int-to-float p1, p1

    int-to-float p2, p2

    int-to-float p3, p3

    int-to-float p4, p4

    invoke-direct {v0, p1, p2, p3, p4}, Ljava/awt/geom/Ellipse2D$Float;-><init>(FFFF)V

    .line 2
    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawPolygon([I[II)V
    .locals 1

    .line 1
    new-instance v0, Ljava/awt/Polygon;

    invoke-direct {v0, p1, p2, p3}, Ljava/awt/Polygon;-><init>([I[II)V

    .line 2
    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawPolyline([I[II)V
    .locals 1

    .line 1
    new-instance v0, Lcom/itextpdf/awt/geom/PolylineShape;

    invoke-direct {v0, p1, p2, p3}, Lcom/itextpdf/awt/geom/PolylineShape;-><init>([I[II)V

    .line 2
    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawRect(IIII)V
    .locals 1

    .line 1
    new-instance v0, Ljava/awt/Rectangle;

    invoke-direct {v0, p1, p2, p3, p4}, Ljava/awt/Rectangle;-><init>(IIII)V

    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawRenderableImage(Ljava/awt/image/renderable/RenderableImage;Ljava/awt/geom/AffineTransform;)V
    .locals 0

    .line 1
    invoke-interface {p1}, Ljava/awt/image/renderable/RenderableImage;->createDefaultRendering()Ljava/awt/image/RenderedImage;

    move-result-object p1

    invoke-virtual {p0, p1, p2}, Lcom/itextpdf/awt/PdfGraphics2D;->drawRenderedImage(Ljava/awt/image/RenderedImage;Ljava/awt/geom/AffineTransform;)V

    return-void
.end method

.method public drawRenderedImage(Ljava/awt/image/RenderedImage;Ljava/awt/geom/AffineTransform;)V
    .locals 9

    .line 1
    instance-of v0, p1, Ljava/awt/image/BufferedImage;

    if-eqz v0, :cond_0

    .line 2
    check-cast p1, Ljava/awt/image/BufferedImage;

    goto :goto_1

    .line 3
    :cond_0
    invoke-interface {p1}, Ljava/awt/image/RenderedImage;->getColorModel()Ljava/awt/image/ColorModel;

    move-result-object v0

    .line 4
    invoke-interface {p1}, Ljava/awt/image/RenderedImage;->getWidth()I

    move-result v1

    .line 5
    invoke-interface {p1}, Ljava/awt/image/RenderedImage;->getHeight()I

    move-result v2

    .line 6
    invoke-virtual {v0, v1, v2}, Ljava/awt/image/ColorModel;->createCompatibleWritableRaster(II)Ljava/awt/image/WritableRaster;

    move-result-object v1

    .line 7
    invoke-virtual {v0}, Ljava/awt/image/ColorModel;->isAlphaPremultiplied()Z

    move-result v2

    .line 8
    new-instance v3, Ljava/util/Hashtable;

    invoke-direct {v3}, Ljava/util/Hashtable;-><init>()V

    .line 9
    invoke-interface {p1}, Ljava/awt/image/RenderedImage;->getPropertyNames()[Ljava/lang/String;

    move-result-object v4

    if-eqz v4, :cond_1

    .line 10
    array-length v5, v4

    const/4 v6, 0x0

    :goto_0
    if-ge v6, v5, :cond_1

    aget-object v7, v4, v6

    .line 11
    invoke-interface {p1, v7}, Ljava/awt/image/RenderedImage;->getProperty(Ljava/lang/String;)Ljava/lang/Object;

    move-result-object v8

    invoke-virtual {v3, v7, v8}, Ljava/util/Hashtable;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    add-int/lit8 v6, v6, 0x1

    goto :goto_0

    .line 12
    :cond_1
    new-instance v4, Ljava/awt/image/BufferedImage;

    invoke-direct {v4, v0, v1, v2, v3}, Ljava/awt/image/BufferedImage;-><init>(Ljava/awt/image/ColorModel;Ljava/awt/image/WritableRaster;ZLjava/util/Hashtable;)V

    .line 13
    invoke-interface {p1, v1}, Ljava/awt/image/RenderedImage;->copyData(Ljava/awt/image/WritableRaster;)Ljava/awt/image/WritableRaster;

    move-object p1, v4

    :goto_1
    const/4 v0, 0x0

    .line 14
    invoke-virtual {p0, p1, p2, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->drawImage(Ljava/awt/Image;Ljava/awt/geom/AffineTransform;Ljava/awt/image/ImageObserver;)Z

    return-void
.end method

.method public drawRoundRect(IIIIII)V
    .locals 14

    .line 1
    new-instance v13, Ljava/awt/geom/RoundRectangle2D$Double;

    move v0, p1

    int-to-double v1, v0

    move/from16 v0, p2

    int-to-double v3, v0

    move/from16 v0, p3

    int-to-double v5, v0

    move/from16 v0, p4

    int-to-double v7, v0

    move/from16 v0, p5

    int-to-double v9, v0

    move/from16 v0, p6

    int-to-double v11, v0

    move-object v0, v13

    invoke-direct/range {v0 .. v12}, Ljava/awt/geom/RoundRectangle2D$Double;-><init>(DDDDDD)V

    move-object v0, p0

    .line 2
    invoke-virtual {p0, v13}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    return-void
.end method

.method public drawString(Ljava/lang/String;FF)V
    .locals 32

    move-object/from16 v0, p0

    move-object/from16 v1, p1

    move/from16 v2, p2

    move/from16 v3, p3

    .line 2
    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v4

    if-nez v4, :cond_0

    return-void

    .line 3
    :cond_0
    invoke-direct/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->setFillPaint()V

    .line 4
    iget-boolean v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->onlyShapes:Z

    if-eqz v4, :cond_1

    .line 5
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFontRenderContext()Ljava/awt/font/FontRenderContext;

    move-result-object v6

    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->toCharArray()[C

    move-result-object v7

    const/4 v8, 0x0

    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v9

    const/4 v10, 0x0

    invoke-virtual/range {v5 .. v10}, Ljava/awt/Font;->layoutGlyphVector(Ljava/awt/font/FontRenderContext;[CIII)Ljava/awt/font/GlyphVector;

    move-result-object v1

    invoke-virtual {v0, v1, v2, v3}, Lcom/itextpdf/awt/PdfGraphics2D;->drawGlyphVector(Ljava/awt/font/GlyphVector;FF)V

    goto/16 :goto_9

    .line 6
    :cond_1
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getTransform()Ljava/awt/geom/AffineTransform;

    move-result-object v4

    .line 7
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getTransform()Ljava/awt/geom/AffineTransform;

    move-result-object v5

    float-to-double v13, v2

    float-to-double v2, v3

    .line 8
    invoke-virtual {v5, v13, v14, v2, v3}, Ljava/awt/geom/AffineTransform;->translate(DD)V

    .line 9
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v6}, Ljava/awt/Font;->getTransform()Ljava/awt/geom/AffineTransform;

    move-result-object v6

    invoke-virtual {v5, v6}, Ljava/awt/geom/AffineTransform;->concatenate(Ljava/awt/geom/AffineTransform;)V

    .line 10
    invoke-virtual {v0, v5}, Lcom/itextpdf/awt/PdfGraphics2D;->setTransform(Ljava/awt/geom/AffineTransform;)V

    .line 11
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->normalizeMatrix()Ljava/awt/geom/AffineTransform;

    move-result-object v5

    const-wide/high16 v6, 0x3ff0000000000000L    # 1.0

    const-wide/high16 v8, -0x4010000000000000L    # -1.0

    .line 12
    invoke-static {v6, v7, v8, v9}, Ljava/awt/geom/AffineTransform;->getScaleInstance(DD)Ljava/awt/geom/AffineTransform;

    move-result-object v6

    .line 13
    invoke-virtual {v5, v6}, Ljava/awt/geom/AffineTransform;->concatenate(Ljava/awt/geom/AffineTransform;)V

    .line 14
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v6}, Lcom/itextpdf/text/pdf/PdfContentByte;->beginText()V

    .line 15
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    iget-object v7, v0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFont:Lcom/itextpdf/text/pdf/BaseFont;

    iget v8, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fontSize:F

    invoke-virtual {v6, v7, v8}, Lcom/itextpdf/text/pdf/PdfContentByte;->setFontAndSize(Lcom/itextpdf/text/pdf/BaseFont;F)V

    .line 16
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v6}, Ljava/awt/Font;->isItalic()Z

    move-result v6

    const/4 v7, 0x4

    const/high16 v8, 0x447a0000    # 1000.0f

    const/4 v9, 0x0

    if-eqz v6, :cond_4

    .line 17
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFont:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v6, v7, v8}, Lcom/itextpdf/text/pdf/BaseFont;->getFontDescriptor(IF)F

    move-result v6

    .line 18
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v10}, Ljava/awt/Font;->getItalicAngle()F

    move-result v10

    .line 19
    iget-object v11, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v11}, Ljava/awt/Font;->getFontName()Ljava/lang/String;

    move-result-object v11

    iget-object v12, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v12}, Ljava/awt/Font;->getName()Ljava/lang/String;

    move-result-object v12

    invoke-virtual {v11, v12}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v11

    if-nez v11, :cond_2

    cmpl-float v11, v6, v9

    if-nez v11, :cond_4

    cmpl-float v11, v10, v9

    if-nez v11, :cond_4

    :cond_2
    cmpl-float v11, v10, v9

    if-nez v11, :cond_3

    const/high16 v10, 0x41200000    # 10.0f

    goto :goto_0

    :cond_3
    neg-float v10, v10

    :goto_0
    cmpl-float v6, v6, v9

    if-nez v6, :cond_4

    .line 20
    new-instance v6, Ljava/awt/geom/AffineTransform;

    invoke-direct {v6}, Ljava/awt/geom/AffineTransform;-><init>()V

    const-wide/high16 v16, 0x3ff0000000000000L    # 1.0

    const-wide/16 v18, 0x0

    float-to-double v10, v10

    const-wide v20, 0x400921fb54442d18L    # Math.PI

    mul-double v10, v10, v20

    const-wide v20, 0x4066800000000000L    # 180.0

    div-double v10, v10, v20

    .line 21
    invoke-static {v10, v11}, Ljava/lang/Math;->tan(D)D

    move-result-wide v10

    double-to-float v10, v10

    float-to-double v10, v10

    const-wide/high16 v22, 0x3ff0000000000000L    # 1.0

    const-wide/16 v24, 0x0

    const-wide/16 v26, 0x0

    move-object v15, v6

    move-wide/from16 v20, v10

    invoke-virtual/range {v15 .. v27}, Ljava/awt/geom/AffineTransform;->setTransform(DDDDDD)V

    .line 22
    invoke-virtual {v5, v6}, Ljava/awt/geom/AffineTransform;->concatenate(Ljava/awt/geom/AffineTransform;)V

    :cond_4
    const/4 v6, 0x6

    new-array v6, v6, [D

    .line 23
    invoke-virtual {v5, v6}, Ljava/awt/geom/AffineTransform;->getMatrix([D)V

    .line 24
    iget-object v15, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/4 v5, 0x0

    aget-wide v10, v6, v5

    double-to-float v10, v10

    const/4 v11, 0x1

    aget-wide v8, v6, v11

    double-to-float v8, v8

    const/4 v9, 0x2

    aget-wide v11, v6, v9

    double-to-float v11, v11

    const/4 v12, 0x3

    move/from16 v16, v10

    aget-wide v9, v6, v12

    double-to-float v9, v9

    move-wide/from16 v24, v13

    aget-wide v12, v6, v7

    double-to-float v7, v12

    const/4 v10, 0x5

    aget-wide v12, v6, v10

    double-to-float v6, v12

    move/from16 v17, v8

    move/from16 v18, v11

    move/from16 v19, v9

    move/from16 v20, v7

    move/from16 v21, v6

    invoke-virtual/range {v15 .. v21}, Lcom/itextpdf/text/pdf/PdfContentByte;->setTextMatrix(FFFFFF)V

    .line 25
    iget-object v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v6}, Ljava/awt/Font;->getAttributes()Ljava/util/Map;

    move-result-object v6

    sget-object v7, Ljava/awt/font/TextAttribute;->WIDTH:Ljava/awt/font/TextAttribute;

    invoke-interface {v6, v7}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/lang/Float;

    if-nez v6, :cond_5

    .line 26
    sget-object v6, Ljava/awt/font/TextAttribute;->WIDTH_REGULAR:Ljava/lang/Float;

    .line 27
    :cond_5
    sget-object v7, Ljava/awt/font/TextAttribute;->WIDTH_REGULAR:Ljava/lang/Float;

    invoke-virtual {v7, v6}, Ljava/lang/Float;->equals(Ljava/lang/Object;)Z

    move-result v7

    const/high16 v8, 0x42c80000    # 100.0f

    if-nez v7, :cond_6

    .line 28
    iget-object v7, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v6}, Ljava/lang/Float;->floatValue()F

    move-result v9

    div-float v9, v8, v9

    invoke-virtual {v7, v9}, Lcom/itextpdf/text/pdf/PdfContentByte;->setHorizontalScaling(F)V

    .line 29
    :cond_6
    iget-object v7, v0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFont:Lcom/itextpdf/text/pdf/BaseFont;

    invoke-virtual {v7}, Lcom/itextpdf/text/pdf/BaseFont;->getPostscriptFontName()Ljava/lang/String;

    move-result-object v7

    invoke-virtual {v7}, Ljava/lang/String;->toLowerCase()Ljava/lang/String;

    move-result-object v7

    const-string v9, "bold"

    invoke-virtual {v7, v9}, Ljava/lang/String;->indexOf(Ljava/lang/String;)I

    move-result v7

    if-gez v7, :cond_c

    .line 30
    iget-object v7, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v7}, Ljava/awt/Font;->getAttributes()Ljava/util/Map;

    move-result-object v7

    sget-object v9, Ljava/awt/font/TextAttribute;->WEIGHT:Ljava/awt/font/TextAttribute;

    invoke-interface {v7, v9}, Ljava/util/Map;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljava/lang/Float;

    if-nez v7, :cond_8

    .line 31
    iget-object v7, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v7}, Ljava/awt/Font;->isBold()Z

    move-result v7

    if-eqz v7, :cond_7

    sget-object v7, Ljava/awt/font/TextAttribute;->WEIGHT_BOLD:Ljava/lang/Float;

    goto :goto_1

    :cond_7
    sget-object v7, Ljava/awt/font/TextAttribute;->WEIGHT_REGULAR:Ljava/lang/Float;

    .line 32
    :cond_8
    :goto_1
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v9}, Ljava/awt/Font;->isBold()Z

    move-result v9

    if-eqz v9, :cond_c

    .line 33
    invoke-virtual {v7}, Ljava/lang/Float;->floatValue()F

    move-result v9

    sget-object v10, Ljava/awt/font/TextAttribute;->WEIGHT_SEMIBOLD:Ljava/lang/Float;

    invoke-virtual {v10}, Ljava/lang/Float;->floatValue()F

    move-result v10

    cmpl-float v9, v9, v10

    if-gez v9, :cond_9

    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    .line 34
    invoke-virtual {v9}, Ljava/awt/Font;->getFontName()Ljava/lang/String;

    move-result-object v9

    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v10}, Ljava/awt/Font;->getName()Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v9, v10}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_c

    .line 35
    :cond_9
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v9}, Ljava/awt/Font;->getSize2D()F

    move-result v9

    invoke-virtual {v7}, Ljava/lang/Float;->floatValue()F

    move-result v7

    sget-object v10, Ljava/awt/font/TextAttribute;->WEIGHT_REGULAR:Ljava/lang/Float;

    invoke-virtual {v10}, Ljava/lang/Float;->floatValue()F

    move-result v10

    sub-float/2addr v7, v10

    mul-float v7, v7, v9

    const/high16 v9, 0x41a00000    # 20.0f

    div-float/2addr v7, v9

    .line 36
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->realPaint:Ljava/awt/Paint;

    instance-of v9, v9, Ljava/awt/Color;

    if-eqz v9, :cond_c

    .line 37
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/4 v10, 0x2

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/PdfContentByte;->setTextRenderingMode(I)V

    .line 38
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v9, v7}, Lcom/itextpdf/text/pdf/PdfContentByte;->setLineWidth(F)V

    .line 39
    iget-object v7, v0, Lcom/itextpdf/awt/PdfGraphics2D;->realPaint:Ljava/awt/Paint;

    check-cast v7, Ljava/awt/Color;

    .line 40
    invoke-virtual {v7}, Ljava/awt/Color;->getAlpha()I

    move-result v9

    .line 41
    iget v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->currentStrokeGState:I

    if-eq v9, v10, :cond_b

    .line 42
    iput v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->currentStrokeGState:I

    .line 43
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aget-object v10, v10, v9

    if-nez v10, :cond_a

    .line 44
    new-instance v10, Lcom/itextpdf/text/pdf/PdfGState;

    invoke-direct {v10}, Lcom/itextpdf/text/pdf/PdfGState;-><init>()V

    int-to-float v11, v9

    const/high16 v12, 0x437f0000    # 255.0f

    div-float/2addr v11, v12

    .line 45
    invoke-virtual {v10, v11}, Lcom/itextpdf/text/pdf/PdfGState;->setStrokeOpacity(F)V

    .line 46
    iget-object v11, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeGState:[Lcom/itextpdf/text/pdf/PdfGState;

    aput-object v10, v11, v9

    .line 47
    :cond_a
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v9, v10}, Lcom/itextpdf/text/pdf/PdfContentByte;->setGState(Lcom/itextpdf/text/pdf/PdfGState;)V

    .line 48
    :cond_b
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-static {v7}, Lcom/itextpdf/awt/PdfGraphics2D;->prepareColor(Ljava/awt/Color;)Lcom/itextpdf/text/BaseColor;

    move-result-object v7

    invoke-virtual {v9, v7}, Lcom/itextpdf/text/pdf/PdfContentByte;->setColorStroke(Lcom/itextpdf/text/BaseColor;)V

    const/4 v7, 0x1

    goto :goto_2

    :cond_c
    const/4 v7, 0x0

    .line 49
    :goto_2
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v9}, Ljava/awt/Font;->getSize2D()F

    move-result v9

    const-wide/16 v10, 0x0

    const/4 v12, 0x0

    cmpl-float v9, v9, v12

    if-lez v9, :cond_f

    .line 50
    sget-object v9, Ljava/awt/RenderingHints;->VALUE_FRACTIONALMETRICS_OFF:Ljava/lang/Object;

    sget-object v12, Ljava/awt/RenderingHints;->KEY_FRACTIONALMETRICS:Ljava/awt/RenderingHints$Key;

    invoke-virtual {v0, v12}, Lcom/itextpdf/awt/PdfGraphics2D;->getRenderingHint(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;

    move-result-object v12

    invoke-virtual {v9, v12}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v9

    if-eqz v9, :cond_d

    .line 51
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFontRenderContext()Ljava/awt/font/FontRenderContext;

    move-result-object v12

    invoke-virtual {v9, v1, v12}, Ljava/awt/Font;->getStringBounds(Ljava/lang/String;Ljava/awt/font/FontRenderContext;)Ljava/awt/geom/Rectangle2D;

    move-result-object v9

    invoke-virtual {v9}, Ljava/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v12

    :goto_3
    move-wide v13, v12

    goto :goto_4

    .line 52
    :cond_d
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v9}, Ljava/awt/Font;->getSize2D()F

    move-result v9

    const/high16 v12, 0x447a0000    # 1000.0f

    div-float v9, v12, v9

    .line 53
    iget-object v12, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    float-to-double v13, v9

    invoke-static {v13, v14, v13, v14}, Ljava/awt/geom/AffineTransform;->getScaleInstance(DD)Ljava/awt/geom/AffineTransform;

    move-result-object v9

    invoke-virtual {v12, v9}, Ljava/awt/Font;->deriveFont(Ljava/awt/geom/AffineTransform;)Ljava/awt/Font;

    move-result-object v9

    .line 54
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFontRenderContext()Ljava/awt/font/FontRenderContext;

    move-result-object v12

    invoke-virtual {v9, v1, v12}, Ljava/awt/Font;->getStringBounds(Ljava/lang/String;Ljava/awt/font/FontRenderContext;)Ljava/awt/geom/Rectangle2D;

    move-result-object v12

    invoke-virtual {v12}, Ljava/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v15

    .line 55
    invoke-virtual {v9}, Ljava/awt/Font;->isTransformed()Z

    move-result v9

    if-eqz v9, :cond_e

    div-double v12, v15, v13

    goto :goto_3

    :cond_e
    move-wide v13, v15

    goto :goto_4

    :cond_f
    move-wide v13, v10

    .line 56
    :goto_4
    sget-object v9, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;->KEY_INSTANCE:Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;

    invoke-virtual {v0, v9}, Lcom/itextpdf/awt/PdfGraphics2D;->getRenderingHint(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;

    move-result-object v9

    if-eqz v9, :cond_13

    .line 57
    sget-object v12, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;->VALUE_HYPERLINKKEY_OFF:Ljava/lang/Object;

    invoke-virtual {v9, v12}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v12

    if-nez v12, :cond_13

    .line 58
    iget-object v12, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v12}, Ljava/awt/Font;->getSize2D()F

    move-result v12

    const/4 v15, 0x0

    cmpl-float v12, v12, v15

    if-lez v12, :cond_12

    .line 59
    sget-object v10, Ljava/awt/RenderingHints;->VALUE_FRACTIONALMETRICS_OFF:Ljava/lang/Object;

    sget-object v11, Ljava/awt/RenderingHints;->KEY_FRACTIONALMETRICS:Ljava/awt/RenderingHints$Key;

    invoke-virtual {v0, v11}, Lcom/itextpdf/awt/PdfGraphics2D;->getRenderingHint(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;

    move-result-object v11

    invoke-virtual {v10, v11}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v10

    if-eqz v10, :cond_10

    .line 60
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFontRenderContext()Ljava/awt/font/FontRenderContext;

    move-result-object v11

    invoke-virtual {v10, v1, v11}, Ljava/awt/Font;->getStringBounds(Ljava/lang/String;Ljava/awt/font/FontRenderContext;)Ljava/awt/geom/Rectangle2D;

    move-result-object v10

    invoke-virtual {v10}, Ljava/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v10

    goto :goto_5

    .line 61
    :cond_10
    iget-object v10, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    invoke-virtual {v10}, Ljava/awt/Font;->getSize2D()F

    move-result v10

    const/high16 v11, 0x447a0000    # 1000.0f

    div-float v10, v11, v10

    .line 62
    iget-object v11, v0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    move-object v12, v6

    float-to-double v5, v10

    invoke-static {v5, v6, v5, v6}, Ljava/awt/geom/AffineTransform;->getScaleInstance(DD)Ljava/awt/geom/AffineTransform;

    move-result-object v10

    invoke-virtual {v11, v10}, Ljava/awt/Font;->deriveFont(Ljava/awt/geom/AffineTransform;)Ljava/awt/Font;

    move-result-object v10

    .line 63
    invoke-virtual/range {p0 .. p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFontRenderContext()Ljava/awt/font/FontRenderContext;

    move-result-object v11

    invoke-virtual {v10, v1, v11}, Ljava/awt/Font;->getStringBounds(Ljava/lang/String;Ljava/awt/font/FontRenderContext;)Ljava/awt/geom/Rectangle2D;

    move-result-object v11

    invoke-virtual {v11}, Ljava/awt/geom/Rectangle2D;->getHeight()D

    move-result-wide v15

    .line 64
    invoke-virtual {v10}, Ljava/awt/Font;->isTransformed()Z

    move-result v10

    if-eqz v10, :cond_11

    div-double v10, v15, v5

    goto :goto_6

    :cond_11
    move-wide v10, v15

    goto :goto_6

    :cond_12
    :goto_5
    move-object v12, v6

    .line 65
    :goto_6
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v5}, Lcom/itextpdf/text/pdf/PdfContentByte;->getXTLM()F

    move-result v5

    float-to-double v5, v5

    .line 66
    iget-object v15, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v15}, Lcom/itextpdf/text/pdf/PdfContentByte;->getYTLM()F

    move-result v15

    move-wide/from16 v16, v2

    float-to-double v2, v15

    .line 67
    new-instance v15, Lcom/itextpdf/text/pdf/PdfAction;

    invoke-virtual {v9}, Ljava/lang/Object;->toString()Ljava/lang/String;

    move-result-object v9

    invoke-direct {v15, v9}, Lcom/itextpdf/text/pdf/PdfAction;-><init>(Ljava/lang/String;)V

    .line 68
    iget-object v9, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    double-to-float v8, v5

    move-object/from16 v19, v12

    double-to-float v12, v2

    add-double/2addr v5, v13

    double-to-float v5, v5

    add-double/2addr v2, v10

    double-to-float v2, v2

    move-object/from16 v26, v9

    move-object/from16 v27, v15

    move/from16 v28, v8

    move/from16 v29, v12

    move/from16 v30, v5

    move/from16 v31, v2

    invoke-virtual/range {v26 .. v31}, Lcom/itextpdf/text/pdf/PdfContentByte;->setAction(Lcom/itextpdf/text/pdf/PdfAction;FFFF)V

    goto :goto_7

    :cond_13
    move-wide/from16 v16, v2

    move-object/from16 v19, v6

    .line 69
    :goto_7
    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v2

    const/4 v3, 0x1

    if-le v2, v3, :cond_14

    double-to-float v2, v13

    .line 70
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFont:Lcom/itextpdf/text/pdf/BaseFont;

    iget v6, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fontSize:F

    invoke-virtual {v5, v1, v6}, Lcom/itextpdf/text/pdf/BaseFont;->getWidthPoint(Ljava/lang/String;F)F

    move-result v5

    sub-float/2addr v2, v5

    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v5

    sub-int/2addr v5, v3

    int-to-float v5, v5

    div-float/2addr v2, v5

    .line 71
    iget-object v5, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v5, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setCharacterSpacing(F)V

    .line 72
    :cond_14
    iget-object v2, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v2, v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->showText(Ljava/lang/String;)V

    .line 73
    invoke-virtual/range {p1 .. p1}, Ljava/lang/String;->length()I

    move-result v1

    if-le v1, v3, :cond_15

    .line 74
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setCharacterSpacing(F)V

    .line 75
    :cond_15
    sget-object v1, Ljava/awt/font/TextAttribute;->WIDTH_REGULAR:Ljava/lang/Float;

    move-object/from16 v6, v19

    invoke-virtual {v1, v6}, Ljava/lang/Float;->equals(Ljava/lang/Object;)Z

    move-result v1

    if-nez v1, :cond_16

    .line 76
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/high16 v2, 0x42c80000    # 100.0f

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setHorizontalScaling(F)V

    :cond_16
    if-eqz v7, :cond_17

    .line 77
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    const/4 v2, 0x0

    invoke-virtual {v1, v2}, Lcom/itextpdf/text/pdf/PdfContentByte;->setTextRenderingMode(I)V

    .line 78
    :cond_17
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v1}, Lcom/itextpdf/text/pdf/PdfContentByte;->endText()V

    .line 79
    invoke-virtual {v0, v4}, Lcom/itextpdf/awt/PdfGraphics2D;->setTransform(Ljava/awt/geom/AffineTransform;)V

    .line 80
    iget-boolean v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->underline:Z

    const/16 v2, 0x32

    if-eqz v1, :cond_18

    int-to-double v3, v2

    .line 81
    iget v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fontSize:F

    float-to-int v1, v1

    invoke-static {v3, v4, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->asPoints(DI)D

    move-result-wide v3

    .line 82
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    .line 83
    new-instance v5, Ljava/awt/BasicStroke;

    double-to-float v6, v3

    invoke-direct {v5, v6}, Ljava/awt/BasicStroke;-><init>(F)V

    invoke-virtual {v0, v5}, Lcom/itextpdf/awt/PdfGraphics2D;->setStroke(Ljava/awt/Stroke;)V

    const-wide/high16 v5, 0x4000000000000000L    # 2.0

    mul-double v3, v3, v5

    add-double v3, v3, v16

    double-to-float v3, v3

    .line 84
    new-instance v4, Ljava/awt/geom/Line2D$Double;

    float-to-double v11, v3

    add-double v18, v13, v24

    move-object v6, v4

    move-wide/from16 v7, v24

    move-wide v9, v11

    move-wide/from16 v20, v11

    move-wide/from16 v11, v18

    move-wide/from16 v22, v13

    move-wide/from16 v18, v24

    move-wide/from16 v13, v20

    invoke-direct/range {v6 .. v14}, Ljava/awt/geom/Line2D$Double;-><init>(DDDD)V

    .line 85
    invoke-virtual {v0, v4}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    .line 86
    invoke-virtual {v0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setStroke(Ljava/awt/Stroke;)V

    goto :goto_8

    :cond_18
    move-wide/from16 v22, v13

    move-wide/from16 v18, v24

    .line 87
    :goto_8
    iget-boolean v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->strikethrough:Z

    if-eqz v1, :cond_19

    const/16 v1, 0x15e

    int-to-double v2, v2

    .line 88
    iget v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fontSize:F

    float-to-int v4, v4

    invoke-static {v2, v3, v4}, Lcom/itextpdf/awt/PdfGraphics2D;->asPoints(DI)D

    move-result-wide v4

    int-to-double v6, v1

    .line 89
    iget v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fontSize:F

    float-to-int v1, v1

    invoke-static {v6, v7, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->asPoints(DI)D

    move-result-wide v6

    .line 90
    iget-object v1, v0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    .line 91
    new-instance v8, Ljava/awt/BasicStroke;

    double-to-float v4, v4

    invoke-direct {v8, v4}, Ljava/awt/BasicStroke;-><init>(F)V

    invoke-virtual {v0, v8}, Lcom/itextpdf/awt/PdfGraphics2D;->setStroke(Ljava/awt/Stroke;)V

    .line 92
    iget v4, v0, Lcom/itextpdf/awt/PdfGraphics2D;->fontSize:F

    float-to-int v4, v4

    invoke-static {v2, v3, v4}, Lcom/itextpdf/awt/PdfGraphics2D;->asPoints(DI)D

    move-result-wide v2

    add-double v2, v2, v16

    double-to-float v2, v2

    .line 93
    new-instance v3, Ljava/awt/geom/Line2D$Double;

    float-to-double v4, v2

    sub-double v13, v4, v6

    add-double v11, v22, v18

    move-object v6, v3

    move-wide/from16 v7, v18

    move-wide v9, v13

    invoke-direct/range {v6 .. v14}, Ljava/awt/geom/Line2D$Double;-><init>(DDDD)V

    .line 94
    invoke-virtual {v0, v3}, Lcom/itextpdf/awt/PdfGraphics2D;->draw(Ljava/awt/Shape;)V

    .line 95
    invoke-virtual {v0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->setStroke(Ljava/awt/Stroke;)V

    :cond_19
    :goto_9
    return-void
.end method

.method public drawString(Ljava/lang/String;II)V
    .locals 0

    int-to-float p2, p2

    int-to-float p3, p3

    .line 1
    invoke-virtual {p0, p1, p2, p3}, Lcom/itextpdf/awt/PdfGraphics2D;->drawString(Ljava/lang/String;FF)V

    return-void
.end method

.method public drawString(Ljava/text/AttributedCharacterIterator;FF)V
    .locals 8

    .line 97
    new-instance v0, Ljava/lang/StringBuffer;

    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getEndIndex()I

    move-result v1

    invoke-direct {v0, v1}, Ljava/lang/StringBuffer;-><init>(I)V

    .line 98
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->first()C

    move-result v1

    :goto_0
    const v2, 0xffff

    const/4 v3, 0x0

    if-eq v1, v2, :cond_2

    .line 99
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getIndex()I

    move-result v2

    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->getRunStart()I

    move-result v4

    if-ne v2, v4, :cond_1

    .line 100
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->length()I

    move-result v2

    if-lez v2, :cond_0

    .line 101
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object v2

    invoke-virtual {p0, v2, p2, p3}, Lcom/itextpdf/awt/PdfGraphics2D;->drawString(Ljava/lang/String;FF)V

    .line 102
    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getFontMetrics()Ljava/awt/FontMetrics;

    move-result-object v2

    float-to-double v4, p2

    .line 103
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p2

    invoke-virtual {v2, p2, p0}, Ljava/awt/FontMetrics;->getStringBounds(Ljava/lang/String;Ljava/awt/Graphics;)Ljava/awt/geom/Rectangle2D;

    move-result-object p2

    invoke-virtual {p2}, Ljava/awt/geom/Rectangle2D;->getWidth()D

    move-result-wide v6

    add-double/2addr v4, v6

    double-to-float p2, v4

    .line 104
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->length()I

    move-result v2

    invoke-virtual {v0, v3, v2}, Ljava/lang/StringBuffer;->delete(II)Ljava/lang/StringBuffer;

    .line 105
    :cond_0
    invoke-virtual {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->doAttributes(Ljava/text/AttributedCharacterIterator;)V

    .line 106
    :cond_1
    invoke-virtual {v0, v1}, Ljava/lang/StringBuffer;->append(C)Ljava/lang/StringBuffer;

    .line 107
    invoke-interface {p1}, Ljava/text/AttributedCharacterIterator;->next()C

    move-result v1

    goto :goto_0

    .line 108
    :cond_2
    invoke-virtual {v0}, Ljava/lang/StringBuffer;->toString()Ljava/lang/String;

    move-result-object p1

    invoke-virtual {p0, p1, p2, p3}, Lcom/itextpdf/awt/PdfGraphics2D;->drawString(Ljava/lang/String;FF)V

    .line 109
    iput-boolean v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->underline:Z

    .line 110
    iput-boolean v3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strikethrough:Z

    return-void
.end method

.method public drawString(Ljava/text/AttributedCharacterIterator;II)V
    .locals 0

    int-to-float p2, p2

    int-to-float p3, p3

    .line 96
    invoke-virtual {p0, p1, p2, p3}, Lcom/itextpdf/awt/PdfGraphics2D;->drawString(Ljava/text/AttributedCharacterIterator;FF)V

    return-void
.end method

.method public fill(Ljava/awt/Shape;)V
    .locals 1

    const/4 v0, 0x1

    .line 1
    invoke-direct {p0, p1, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->followPath(Ljava/awt/Shape;I)V

    return-void
.end method

.method public fillArc(IIIIII)V
    .locals 15

    .line 1
    new-instance v14, Ljava/awt/geom/Arc2D$Double;

    move/from16 v0, p1

    int-to-double v1, v0

    move/from16 v0, p2

    int-to-double v3, v0

    move/from16 v0, p3

    int-to-double v5, v0

    move/from16 v0, p4

    int-to-double v7, v0

    move/from16 v0, p5

    int-to-double v9, v0

    move/from16 v0, p6

    int-to-double v11, v0

    const/4 v13, 0x2

    move-object v0, v14

    invoke-direct/range {v0 .. v13}, Ljava/awt/geom/Arc2D$Double;-><init>(DDDDDDI)V

    move-object v0, p0

    .line 2
    invoke-virtual {p0, v14}, Lcom/itextpdf/awt/PdfGraphics2D;->fill(Ljava/awt/Shape;)V

    return-void
.end method

.method public fillOval(IIII)V
    .locals 1

    .line 1
    new-instance v0, Ljava/awt/geom/Ellipse2D$Float;

    int-to-float p1, p1

    int-to-float p2, p2

    int-to-float p3, p3

    int-to-float p4, p4

    invoke-direct {v0, p1, p2, p3, p4}, Ljava/awt/geom/Ellipse2D$Float;-><init>(FFFF)V

    .line 2
    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->fill(Ljava/awt/Shape;)V

    return-void
.end method

.method public fillPolygon([I[II)V
    .locals 4

    .line 1
    new-instance v0, Ljava/awt/Polygon;

    invoke-direct {v0}, Ljava/awt/Polygon;-><init>()V

    const/4 v1, 0x0

    :goto_0
    if-ge v1, p3, :cond_0

    .line 2
    aget v2, p1, v1

    aget v3, p2, v1

    invoke-virtual {v0, v2, v3}, Ljava/awt/Polygon;->addPoint(II)V

    add-int/lit8 v1, v1, 0x1

    goto :goto_0

    .line 3
    :cond_0
    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->fill(Ljava/awt/Shape;)V

    return-void
.end method

.method public fillRect(IIII)V
    .locals 1

    .line 1
    new-instance v0, Ljava/awt/Rectangle;

    invoke-direct {v0, p1, p2, p3, p4}, Ljava/awt/Rectangle;-><init>(IIII)V

    invoke-virtual {p0, v0}, Lcom/itextpdf/awt/PdfGraphics2D;->fill(Ljava/awt/Shape;)V

    return-void
.end method

.method public fillRoundRect(IIIIII)V
    .locals 14

    .line 1
    new-instance v13, Ljava/awt/geom/RoundRectangle2D$Double;

    move v0, p1

    int-to-double v1, v0

    move/from16 v0, p2

    int-to-double v3, v0

    move/from16 v0, p3

    int-to-double v5, v0

    move/from16 v0, p4

    int-to-double v7, v0

    move/from16 v0, p5

    int-to-double v9, v0

    move/from16 v0, p6

    int-to-double v11, v0

    move-object v0, v13

    invoke-direct/range {v0 .. v12}, Ljava/awt/geom/RoundRectangle2D$Double;-><init>(DDDDDD)V

    move-object v0, p0

    .line 2
    invoke-virtual {p0, v13}, Lcom/itextpdf/awt/PdfGraphics2D;->fill(Ljava/awt/Shape;)V

    return-void
.end method

.method public getBackground()Ljava/awt/Color;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->background:Ljava/awt/Color;

    return-object v0
.end method

.method public getClip()Ljava/awt/Shape;
    .locals 2

    .line 1
    :try_start_0
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0}, Ljava/awt/geom/AffineTransform;->createInverse()Ljava/awt/geom/AffineTransform;

    move-result-object v0

    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    invoke-virtual {v0, v1}, Ljava/awt/geom/AffineTransform;->createTransformedShape(Ljava/awt/Shape;)Ljava/awt/Shape;

    move-result-object v0
    :try_end_0
    .catch Ljava/awt/geom/NoninvertibleTransformException; {:try_start_0 .. :try_end_0} :catch_0

    return-object v0

    :catch_0
    const/4 v0, 0x0

    return-object v0
.end method

.method public getClipBounds()Ljava/awt/Rectangle;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    if-nez v0, :cond_0

    const/4 v0, 0x0

    return-object v0

    .line 2
    :cond_0
    invoke-virtual {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getClip()Ljava/awt/Shape;

    move-result-object v0

    invoke-interface {v0}, Ljava/awt/Shape;->getBounds()Ljava/awt/Rectangle;

    move-result-object v0

    return-object v0
.end method

.method public getColor()Ljava/awt/Color;
    .locals 2

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    instance-of v1, v0, Ljava/awt/Color;

    if-eqz v1, :cond_0

    .line 2
    check-cast v0, Ljava/awt/Color;

    return-object v0

    .line 3
    :cond_0
    sget-object v0, Ljava/awt/Color;->black:Ljava/awt/Color;

    return-object v0
.end method

.method public getComposite()Ljava/awt/Composite;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->composite:Ljava/awt/Composite;

    return-object v0
.end method

.method public getContent()Lcom/itextpdf/text/pdf/PdfContentByte;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    return-object v0
.end method

.method public getDeviceConfiguration()Ljava/awt/GraphicsConfiguration;
    .locals 1

    .line 1
    invoke-direct {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getDG2()Ljava/awt/Graphics2D;

    move-result-object v0

    invoke-virtual {v0}, Ljava/awt/Graphics2D;->getDeviceConfiguration()Ljava/awt/GraphicsConfiguration;

    move-result-object v0

    return-object v0
.end method

.method public getFont()Ljava/awt/Font;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    return-object v0
.end method

.method public getFontMetrics(Ljava/awt/Font;)Ljava/awt/FontMetrics;
    .locals 1

    .line 1
    invoke-direct {p0}, Lcom/itextpdf/awt/PdfGraphics2D;->getDG2()Ljava/awt/Graphics2D;

    move-result-object v0

    invoke-virtual {v0, p1}, Ljava/awt/Graphics2D;->getFontMetrics(Ljava/awt/Font;)Ljava/awt/FontMetrics;

    move-result-object p1

    return-object p1
.end method

.method public getFontRenderContext()Ljava/awt/font/FontRenderContext;
    .locals 4

    .line 1
    sget-object v0, Ljava/awt/RenderingHints;->VALUE_TEXT_ANTIALIAS_ON:Ljava/lang/Object;

    sget-object v1, Ljava/awt/RenderingHints;->KEY_TEXT_ANTIALIASING:Ljava/awt/RenderingHints$Key;

    invoke-virtual {p0, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->getRenderingHint(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;

    move-result-object v1

    invoke-virtual {v0, v1}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v0

    .line 2
    sget-object v1, Ljava/awt/RenderingHints;->VALUE_FRACTIONALMETRICS_ON:Ljava/lang/Object;

    sget-object v2, Ljava/awt/RenderingHints;->KEY_FRACTIONALMETRICS:Ljava/awt/RenderingHints$Key;

    invoke-virtual {p0, v2}, Lcom/itextpdf/awt/PdfGraphics2D;->getRenderingHint(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;

    move-result-object v2

    invoke-virtual {v1, v2}, Ljava/lang/Object;->equals(Ljava/lang/Object;)Z

    move-result v1

    .line 3
    new-instance v2, Ljava/awt/font/FontRenderContext;

    new-instance v3, Ljava/awt/geom/AffineTransform;

    invoke-direct {v3}, Ljava/awt/geom/AffineTransform;-><init>()V

    invoke-direct {v2, v3, v0, v1}, Ljava/awt/font/FontRenderContext;-><init>(Ljava/awt/geom/AffineTransform;ZZ)V

    return-object v2
.end method

.method public getPaint()Ljava/awt/Paint;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->realPaint:Ljava/awt/Paint;

    if-eqz v0, :cond_0

    return-object v0

    .line 2
    :cond_0
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    return-object v0
.end method

.method public getRenderingHint(Ljava/awt/RenderingHints$Key;)Ljava/lang/Object;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v0, p1}, Ljava/awt/RenderingHints;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object p1

    return-object p1
.end method

.method public getRenderingHints()Ljava/awt/RenderingHints;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    return-object v0
.end method

.method public getStroke()Ljava/awt/Stroke;
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    return-object v0
.end method

.method public getTransform()Ljava/awt/geom/AffineTransform;
    .locals 2

    .line 1
    new-instance v0, Ljava/awt/geom/AffineTransform;

    iget-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-direct {v0, v1}, Ljava/awt/geom/AffineTransform;-><init>(Ljava/awt/geom/AffineTransform;)V

    return-object v0
.end method

.method public hit(Ljava/awt/Rectangle;Ljava/awt/Shape;Z)Z
    .locals 9

    if-eqz p3, :cond_0

    .line 1
    iget-object p3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    invoke-interface {p3, p2}, Ljava/awt/Stroke;->createStrokedShape(Ljava/awt/Shape;)Ljava/awt/Shape;

    move-result-object p2

    .line 2
    :cond_0
    iget-object p3, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {p3, p2}, Ljava/awt/geom/AffineTransform;->createTransformedShape(Ljava/awt/Shape;)Ljava/awt/Shape;

    move-result-object p2

    .line 3
    new-instance v0, Ljava/awt/geom/Area;

    invoke-direct {v0, p2}, Ljava/awt/geom/Area;-><init>(Ljava/awt/Shape;)V

    .line 4
    iget-object p2, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    if-eqz p2, :cond_1

    .line 5
    invoke-virtual {v0, p2}, Ljava/awt/geom/Area;->intersect(Ljava/awt/geom/Area;)V

    .line 6
    :cond_1
    iget p2, p1, Ljava/awt/Rectangle;->x:I

    int-to-double v1, p2

    iget p2, p1, Ljava/awt/Rectangle;->y:I

    int-to-double v3, p2

    iget p2, p1, Ljava/awt/Rectangle;->width:I

    int-to-double v5, p2

    iget p1, p1, Ljava/awt/Rectangle;->height:I

    int-to-double v7, p1

    invoke-virtual/range {v0 .. v8}, Ljava/awt/geom/Area;->intersects(DDDD)Z

    move-result p1

    return p1
.end method

.method public normalizeMatrix()Ljava/awt/geom/AffineTransform;
    .locals 4

    const/4 v0, 0x6

    new-array v0, v0, [D

    const-wide/16 v1, 0x0

    .line 1
    invoke-static {v1, v2, v1, v2}, Ljava/awt/geom/AffineTransform;->getTranslateInstance(DD)Ljava/awt/geom/AffineTransform;

    move-result-object v1

    .line 2
    invoke-virtual {v1, v0}, Ljava/awt/geom/AffineTransform;->getMatrix([D)V

    const/4 v1, 0x3

    const-wide/high16 v2, -0x4010000000000000L    # -1.0

    aput-wide v2, v0, v1

    .line 3
    iget v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->height:F

    float-to-double v1, v1

    const/4 v3, 0x5

    aput-wide v1, v0, v3

    .line 4
    new-instance v1, Ljava/awt/geom/AffineTransform;

    invoke-direct {v1, v0}, Ljava/awt/geom/AffineTransform;-><init>([D)V

    .line 5
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v1, v0}, Ljava/awt/geom/AffineTransform;->concatenate(Ljava/awt/geom/AffineTransform;)V

    return-object v1
.end method

.method public rotate(D)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2}, Ljava/awt/geom/AffineTransform;->rotate(D)V

    return-void
.end method

.method public rotate(DDD)V
    .locals 7

    .line 2
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    move-wide v1, p1

    move-wide v3, p3

    move-wide v5, p5

    invoke-virtual/range {v0 .. v6}, Ljava/awt/geom/AffineTransform;->rotate(DDD)V

    return-void
.end method

.method public scale(DD)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2, p3, p4}, Ljava/awt/geom/AffineTransform;->scale(DD)V

    .line 2
    iget-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    invoke-direct {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->transformStroke(Ljava/awt/Stroke;)Ljava/awt/Stroke;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    return-void
.end method

.method public setBackground(Ljava/awt/Color;)V
    .locals 0

    .line 1
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->background:Ljava/awt/Color;

    return-void
.end method

.method public setClip(IIII)V
    .locals 10

    .line 1
    new-instance v9, Ljava/awt/geom/Rectangle2D$Double;

    int-to-double v1, p1

    int-to-double v3, p2

    int-to-double v5, p3

    int-to-double v7, p4

    move-object v0, v9

    invoke-direct/range {v0 .. v8}, Ljava/awt/geom/Rectangle2D$Double;-><init>(DDDD)V

    .line 2
    invoke-virtual {p0, v9}, Lcom/itextpdf/awt/PdfGraphics2D;->setClip(Ljava/awt/Shape;)V

    return-void
.end method

.method public setClip(Ljava/awt/Shape;)V
    .locals 2

    .line 3
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->restoreState()V

    .line 4
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->cb:Lcom/itextpdf/text/pdf/PdfContentByte;

    invoke-virtual {v0}, Lcom/itextpdf/text/pdf/PdfContentByte;->saveState()V

    if-eqz p1, :cond_0

    .line 5
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0, p1}, Ljava/awt/geom/AffineTransform;->createTransformedShape(Ljava/awt/Shape;)Ljava/awt/Shape;

    move-result-object p1

    :cond_0
    const/4 v0, 0x0

    if-nez p1, :cond_1

    .line 6
    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    goto :goto_0

    .line 7
    :cond_1
    new-instance v1, Ljava/awt/geom/Area;

    invoke-direct {v1, p1}, Ljava/awt/geom/Area;-><init>(Ljava/awt/Shape;)V

    iput-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->clip:Ljava/awt/geom/Area;

    const/4 v1, 0x3

    .line 8
    invoke-direct {p0, p1, v1}, Lcom/itextpdf/awt/PdfGraphics2D;->followPath(Ljava/awt/Shape;I)V

    .line 9
    :goto_0
    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paintStroke:Ljava/awt/Paint;

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paintFill:Ljava/awt/Paint;

    const/4 p1, -0x1

    .line 10
    iput p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->currentStrokeGState:I

    iput p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->currentFillGState:I

    .line 11
    iget-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->strokeOne:Ljava/awt/BasicStroke;

    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->oldStroke:Ljava/awt/Stroke;

    return-void
.end method

.method public setColor(Ljava/awt/Color;)V
    .locals 0

    .line 1
    invoke-virtual {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->setPaint(Ljava/awt/Paint;)V

    return-void
.end method

.method public setComposite(Ljava/awt/Composite;)V
    .locals 5

    .line 1
    instance-of v0, p1, Ljava/awt/AlphaComposite;

    if-eqz v0, :cond_1

    .line 2
    move-object v0, p1

    check-cast v0, Ljava/awt/AlphaComposite;

    .line 3
    invoke-virtual {v0}, Ljava/awt/AlphaComposite;->getRule()I

    move-result v1

    const/4 v2, 0x3

    if-ne v1, v2, :cond_1

    .line 4
    invoke-virtual {v0}, Ljava/awt/AlphaComposite;->getAlpha()F

    move-result p1

    iput p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->alpha:F

    .line 5
    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->composite:Ljava/awt/Composite;

    .line 6
    iget-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->realPaint:Ljava/awt/Paint;

    if-eqz p1, :cond_0

    instance-of v0, p1, Ljava/awt/Color;

    if-eqz v0, :cond_0

    .line 7
    check-cast p1, Ljava/awt/Color;

    .line 8
    new-instance v0, Ljava/awt/Color;

    invoke-virtual {p1}, Ljava/awt/Color;->getRed()I

    move-result v1

    invoke-virtual {p1}, Ljava/awt/Color;->getGreen()I

    move-result v2

    invoke-virtual {p1}, Ljava/awt/Color;->getBlue()I

    move-result v3

    .line 9
    invoke-virtual {p1}, Ljava/awt/Color;->getAlpha()I

    move-result p1

    int-to-float p1, p1

    iget v4, p0, Lcom/itextpdf/awt/PdfGraphics2D;->alpha:F

    mul-float p1, p1, v4

    float-to-int p1, p1

    invoke-direct {v0, v1, v2, v3, p1}, Ljava/awt/Color;-><init>(IIII)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    :cond_0
    return-void

    .line 10
    :cond_1
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->composite:Ljava/awt/Composite;

    const/high16 p1, 0x3f800000    # 1.0f

    .line 11
    iput p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->alpha:F

    return-void
.end method

.method public setFont(Ljava/awt/Font;)V
    .locals 1

    if-nez p1, :cond_0

    return-void

    .line 1
    :cond_0
    iget-boolean v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->onlyShapes:Z

    if-eqz v0, :cond_1

    .line 2
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    return-void

    .line 3
    :cond_1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    if-ne p1, v0, :cond_2

    return-void

    .line 4
    :cond_2
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->font:Ljava/awt/Font;

    .line 5
    invoke-virtual {p1}, Ljava/awt/Font;->getSize2D()F

    move-result v0

    iput v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->fontSize:F

    .line 6
    invoke-direct {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->getCachedBaseFont(Ljava/awt/Font;)Lcom/itextpdf/text/pdf/BaseFont;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->baseFont:Lcom/itextpdf/text/pdf/BaseFont;

    return-void
.end method

.method public setPaint(Ljava/awt/Paint;)V
    .locals 6

    if-nez p1, :cond_0

    return-void

    .line 1
    :cond_0
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    .line 2
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->realPaint:Ljava/awt/Paint;

    .line 3
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->composite:Ljava/awt/Composite;

    instance-of v1, v0, Ljava/awt/AlphaComposite;

    if-eqz v1, :cond_1

    instance-of v1, p1, Ljava/awt/Color;

    if-eqz v1, :cond_1

    .line 4
    check-cast v0, Ljava/awt/AlphaComposite;

    .line 5
    invoke-virtual {v0}, Ljava/awt/AlphaComposite;->getRule()I

    move-result v0

    const/4 v1, 0x3

    if-ne v0, v1, :cond_1

    .line 6
    move-object v0, p1

    check-cast v0, Ljava/awt/Color;

    .line 7
    new-instance v1, Ljava/awt/Color;

    invoke-virtual {v0}, Ljava/awt/Color;->getRed()I

    move-result v2

    invoke-virtual {v0}, Ljava/awt/Color;->getGreen()I

    move-result v3

    invoke-virtual {v0}, Ljava/awt/Color;->getBlue()I

    move-result v4

    invoke-virtual {v0}, Ljava/awt/Color;->getAlpha()I

    move-result v0

    int-to-float v0, v0

    iget v5, p0, Lcom/itextpdf/awt/PdfGraphics2D;->alpha:F

    mul-float v0, v0, v5

    float-to-int v0, v0

    invoke-direct {v1, v2, v3, v4, v0}, Ljava/awt/Color;-><init>(IIII)V

    iput-object v1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->paint:Ljava/awt/Paint;

    .line 8
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->realPaint:Ljava/awt/Paint;

    :cond_1
    return-void
.end method

.method public setPaintMode()V
    .locals 0

    return-void
.end method

.method public setRenderingHint(Ljava/awt/RenderingHints$Key;Ljava/lang/Object;)V
    .locals 2

    if-eqz p2, :cond_0

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v0, p1, p2}, Ljava/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 2
    :cond_0
    instance-of v0, p1, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;

    if-eqz v0, :cond_1

    .line 3
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    sget-object v1, Lcom/itextpdf/awt/PdfGraphics2D$HyperLinkKey;->VALUE_HYPERLINKKEY_OFF:Ljava/lang/Object;

    invoke-virtual {v0, p1, v1}, Ljava/awt/RenderingHints;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    goto :goto_0

    .line 4
    :cond_1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v0, p1}, Ljava/awt/RenderingHints;->remove(Ljava/lang/Object;)Ljava/lang/Object;

    .line 5
    :goto_0
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    if-eqz v0, :cond_2

    .line 6
    invoke-virtual {v0, p1, p2}, Ljava/awt/Graphics2D;->setRenderingHint(Ljava/awt/RenderingHints$Key;Ljava/lang/Object;)V

    :cond_2
    return-void
.end method

.method public setRenderingHints(Ljava/util/Map;)V
    .locals 1
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/Map<",
            "**>;)V"
        }
    .end annotation

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v0}, Ljava/awt/RenderingHints;->clear()V

    .line 2
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->rhints:Ljava/awt/RenderingHints;

    invoke-virtual {v0, p1}, Ljava/awt/RenderingHints;->putAll(Ljava/util/Map;)V

    .line 3
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->dg2:Ljava/awt/Graphics2D;

    if-eqz v0, :cond_0

    .line 4
    invoke-virtual {v0, p1}, Ljava/awt/Graphics2D;->setRenderingHints(Ljava/util/Map;)V

    :cond_0
    return-void
.end method

.method public setStroke(Ljava/awt/Stroke;)V
    .locals 0

    .line 1
    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    .line 2
    invoke-direct {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->transformStroke(Ljava/awt/Stroke;)Ljava/awt/Stroke;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    return-void
.end method

.method public setTransform(Ljava/awt/geom/AffineTransform;)V
    .locals 1

    .line 1
    new-instance v0, Ljava/awt/geom/AffineTransform;

    invoke-direct {v0, p1}, Ljava/awt/geom/AffineTransform;-><init>(Ljava/awt/geom/AffineTransform;)V

    iput-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    .line 2
    iget-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    invoke-direct {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->transformStroke(Ljava/awt/Stroke;)Ljava/awt/Stroke;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    return-void
.end method

.method public setXORMode(Ljava/awt/Color;)V
    .locals 0

    return-void
.end method

.method public shear(DD)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2, p3, p4}, Ljava/awt/geom/AffineTransform;->shear(DD)V

    return-void
.end method

.method public transform(Ljava/awt/geom/AffineTransform;)V
    .locals 1

    .line 1
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0, p1}, Ljava/awt/geom/AffineTransform;->concatenate(Ljava/awt/geom/AffineTransform;)V

    .line 2
    iget-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->originalStroke:Ljava/awt/Stroke;

    invoke-direct {p0, p1}, Lcom/itextpdf/awt/PdfGraphics2D;->transformStroke(Ljava/awt/Stroke;)Ljava/awt/Stroke;

    move-result-object p1

    iput-object p1, p0, Lcom/itextpdf/awt/PdfGraphics2D;->stroke:Ljava/awt/Stroke;

    return-void
.end method

.method public translate(DD)V
    .locals 1

    .line 2
    iget-object v0, p0, Lcom/itextpdf/awt/PdfGraphics2D;->transform:Ljava/awt/geom/AffineTransform;

    invoke-virtual {v0, p1, p2, p3, p4}, Ljava/awt/geom/AffineTransform;->translate(DD)V

    return-void
.end method

.method public translate(II)V
    .locals 2

    int-to-double v0, p1

    int-to-double p1, p2

    .line 1
    invoke-virtual {p0, v0, v1, p1, p2}, Lcom/itextpdf/awt/PdfGraphics2D;->translate(DD)V

    return-void
.end method
