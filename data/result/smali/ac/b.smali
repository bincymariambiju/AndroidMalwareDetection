.class public final Lac/b;
.super Ljava/lang/Object;
.source "ConnectionSpecSelector.kt"


# instance fields
.field public a:I

.field public b:Z

.field public c:Z

.field public final d:Ljava/util/List;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/List<",
            "Lwb/m;",
            ">;"
        }
    .end annotation
.end field


# direct methods
.method public constructor <init>(Ljava/util/List;)V
    .locals 1
    .param p1    # Ljava/util/List;
        .annotation build Lorg/jetbrains/annotations/NotNull;
        .end annotation
    .end param
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/List<",
            "Lwb/m;",
            ">;)V"
        }
    .end annotation

    const-string v0, "connectionSpecs"

    invoke-static {p1, v0}, Lba/a;->f(Ljava/lang/Object;Ljava/lang/String;)V

    .line 1
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    iput-object p1, p0, Lac/b;->d:Ljava/util/List;

    return-void
.end method


# virtual methods
.method public final a(Ljavax/net/ssl/SSLSocket;)Lwb/m;
    .locals 12
    .param p1    # Ljavax/net/ssl/SSLSocket;
        .annotation build Lorg/jetbrains/annotations/NotNull;
        .end annotation
    .end param
    .annotation build Lorg/jetbrains/annotations/NotNull;
    .end annotation

    .line 1
    iget v0, p0, Lac/b;->a:I

    iget-object v1, p0, Lac/b;->d:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    :goto_0
    if-ge v0, v1, :cond_1

    .line 2
    iget-object v2, p0, Lac/b;->d:Ljava/util/List;

    invoke-interface {v2, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Lwb/m;

    .line 3
    invoke-virtual {v2, p1}, Lwb/m;->b(Ljavax/net/ssl/SSLSocket;)Z

    move-result v3

    if-eqz v3, :cond_0

    add-int/lit8 v0, v0, 0x1

    .line 4
    iput v0, p0, Lac/b;->a:I

    goto :goto_1

    :cond_0
    add-int/lit8 v0, v0, 0x1

    goto :goto_0

    :cond_1
    const/4 v2, 0x0

    :goto_1
    if-eqz v2, :cond_c

    .line 5
    iget v0, p0, Lac/b;->a:I

    iget-object v1, p0, Lac/b;->d:Ljava/util/List;

    invoke-interface {v1}, Ljava/util/List;->size()I

    move-result v1

    :goto_2
    if-ge v0, v1, :cond_3

    .line 6
    iget-object v3, p0, Lac/b;->d:Ljava/util/List;

    invoke-interface {v3, v0}, Ljava/util/List;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Lwb/m;

    invoke-virtual {v3, p1}, Lwb/m;->b(Ljavax/net/ssl/SSLSocket;)Z

    move-result v3

    if-eqz v3, :cond_2

    const/4 v0, 0x1

    goto :goto_3

    :cond_2
    add-int/lit8 v0, v0, 0x1

    goto :goto_2

    :cond_3
    const/4 v0, 0x0

    .line 7
    :goto_3
    iput-boolean v0, p0, Lac/b;->b:Z

    .line 8
    iget-boolean v0, p0, Lac/b;->c:Z

    .line 9
    iget-object v1, v2, Lwb/m;->c:[Ljava/lang/String;

    if-eqz v1, :cond_4

    .line 10
    invoke-virtual {p1}, Ljavax/net/ssl/SSLSocket;->getEnabledCipherSuites()[Ljava/lang/String;

    move-result-object v1

    const-string v3, "sslSocket.enabledCipherSuites"

    invoke-static {v1, v3}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    iget-object v3, v2, Lwb/m;->c:[Ljava/lang/String;

    sget-object v4, Lwb/j;->t:Lwb/j$b;

    .line 11
    sget-object v4, Lwb/j;->b:Ljava/util/Comparator;

    sget-object v4, Lwb/j;->b:Ljava/util/Comparator;

    .line 12
    invoke-static {v1, v3, v4}, Lxb/d;->o([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;

    move-result-object v1

    goto :goto_4

    .line 13
    :cond_4
    invoke-virtual {p1}, Ljavax/net/ssl/SSLSocket;->getEnabledCipherSuites()[Ljava/lang/String;

    move-result-object v1

    .line 14
    :goto_4
    iget-object v3, v2, Lwb/m;->d:[Ljava/lang/String;

    if-eqz v3, :cond_5

    .line 15
    invoke-virtual {p1}, Ljavax/net/ssl/SSLSocket;->getEnabledProtocols()[Ljava/lang/String;

    move-result-object v3

    const-string v4, "sslSocket.enabledProtocols"

    invoke-static {v3, v4}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    iget-object v4, v2, Lwb/m;->d:[Ljava/lang/String;

    sget-object v5, Lwa/b;->a:Lwa/b;

    invoke-static {v3, v4, v5}, Lxb/d;->o([Ljava/lang/String;[Ljava/lang/String;Ljava/util/Comparator;)[Ljava/lang/String;

    move-result-object v3

    goto :goto_5

    .line 16
    :cond_5
    invoke-virtual {p1}, Ljavax/net/ssl/SSLSocket;->getEnabledProtocols()[Ljava/lang/String;

    move-result-object v3

    .line 17
    :goto_5
    invoke-virtual {p1}, Ljavax/net/ssl/SSLSocket;->getSupportedCipherSuites()[Ljava/lang/String;

    move-result-object v4

    const-string v5, "supportedCipherSuites"

    .line 18
    invoke-static {v4, v5}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 19
    sget-object v5, Lwb/j;->t:Lwb/j$b;

    .line 20
    sget-object v5, Lwb/j;->b:Ljava/util/Comparator;

    sget-object v5, Lwb/j;->b:Ljava/util/Comparator;

    .line 21
    sget-object v6, Lxb/d;->a:[B

    .line 22
    array-length v6, v4

    const/4 v7, 0x0

    :goto_6
    const/4 v8, -0x1

    if-ge v7, v6, :cond_8

    .line 23
    aget-object v9, v4, v7

    .line 24
    move-object v10, v5

    check-cast v10, Lwb/j$a;

    const-string v11, "TLS_FALLBACK_SCSV"

    invoke-virtual {v10, v9, v11}, Lwb/j$a;->compare(Ljava/lang/Object;Ljava/lang/Object;)I

    move-result v9

    if-nez v9, :cond_6

    const/4 v9, 0x1

    goto :goto_7

    :cond_6
    const/4 v9, 0x0

    :goto_7
    if-eqz v9, :cond_7

    goto :goto_8

    :cond_7
    add-int/lit8 v7, v7, 0x1

    goto :goto_6

    :cond_8
    const/4 v7, -0x1

    :goto_8
    const-string v5, "cipherSuitesIntersection"

    if-eqz v0, :cond_9

    if-eq v7, v8, :cond_9

    .line 25
    invoke-static {v1, v5}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 26
    aget-object v0, v4, v7

    const-string v4, "supportedCipherSuites[indexOfFallbackScsv]"

    invoke-static {v0, v4}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    .line 27
    array-length v4, v1

    add-int/lit8 v4, v4, 0x1

    invoke-static {v1, v4}, Ljava/util/Arrays;->copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;

    move-result-object v1

    const-string v4, "java.util.Arrays.copyOf(this, newSize)"

    invoke-static {v1, v4}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    check-cast v1, [Ljava/lang/String;

    .line 28
    array-length v4, v1

    add-int/2addr v4, v8

    .line 29
    aput-object v0, v1, v4

    .line 30
    :cond_9
    new-instance v0, Lwb/m$a;

    invoke-direct {v0, v2}, Lwb/m$a;-><init>(Lwb/m;)V

    .line 31
    invoke-static {v1, v5}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    array-length v4, v1

    invoke-static {v1, v4}, Ljava/util/Arrays;->copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    invoke-virtual {v0, v1}, Lwb/m$a;->b([Ljava/lang/String;)Lwb/m$a;

    const-string v1, "tlsVersionsIntersection"

    .line 32
    invoke-static {v3, v1}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    array-length v1, v3

    invoke-static {v3, v1}, Ljava/util/Arrays;->copyOf([Ljava/lang/Object;I)[Ljava/lang/Object;

    move-result-object v1

    check-cast v1, [Ljava/lang/String;

    invoke-virtual {v0, v1}, Lwb/m$a;->e([Ljava/lang/String;)Lwb/m$a;

    .line 33
    invoke-virtual {v0}, Lwb/m$a;->a()Lwb/m;

    move-result-object v0

    .line 34
    invoke-virtual {v0}, Lwb/m;->c()Ljava/util/List;

    move-result-object v1

    if-eqz v1, :cond_a

    .line 35
    iget-object v1, v0, Lwb/m;->d:[Ljava/lang/String;

    invoke-virtual {p1, v1}, Ljavax/net/ssl/SSLSocket;->setEnabledProtocols([Ljava/lang/String;)V

    .line 36
    :cond_a
    invoke-virtual {v0}, Lwb/m;->a()Ljava/util/List;

    move-result-object v1

    if-eqz v1, :cond_b

    .line 37
    iget-object v0, v0, Lwb/m;->c:[Ljava/lang/String;

    invoke-virtual {p1, v0}, Ljavax/net/ssl/SSLSocket;->setEnabledCipherSuites([Ljava/lang/String;)V

    :cond_b
    return-object v2

    .line 38
    :cond_c
    new-instance v0, Ljava/net/UnknownServiceException;

    const-string v1, "Unable to find acceptable protocols. isFallback="

    invoke-static {v1}, Landroidx/activity/c;->a(Ljava/lang/String;)Ljava/lang/StringBuilder;

    move-result-object v1

    iget-boolean v2, p0, Lac/b;->c:Z

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Z)Ljava/lang/StringBuilder;

    const/16 v2, 0x2c

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    const-string v3, " modes="

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 39
    iget-object v3, p0, Lac/b;->d:Ljava/util/List;

    invoke-virtual {v1, v3}, Ljava/lang/StringBuilder;->append(Ljava/lang/Object;)Ljava/lang/StringBuilder;

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(C)Ljava/lang/StringBuilder;

    const-string v2, " supported protocols="

    invoke-virtual {v1, v2}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    .line 40
    invoke-virtual {p1}, Ljavax/net/ssl/SSLSocket;->getEnabledProtocols()[Ljava/lang/String;

    move-result-object p1

    invoke-static {p1}, Lba/a;->d(Ljava/lang/Object;)V

    invoke-static {p1}, Ljava/util/Arrays;->toString([Ljava/lang/Object;)Ljava/lang/String;

    move-result-object p1

    const-string v2, "java.util.Arrays.toString(this)"

    invoke-static {p1, v2}, Lba/a;->e(Ljava/lang/Object;Ljava/lang/String;)V

    invoke-virtual {v1, p1}, Ljava/lang/StringBuilder;->append(Ljava/lang/String;)Ljava/lang/StringBuilder;

    invoke-virtual {v1}, Ljava/lang/StringBuilder;->toString()Ljava/lang/String;

    move-result-object p1

    .line 41
    invoke-direct {v0, p1}, Ljava/net/UnknownServiceException;-><init>(Ljava/lang/String;)V

    throw v0
.end method
